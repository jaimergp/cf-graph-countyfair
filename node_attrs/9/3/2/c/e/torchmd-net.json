{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "torchmd-net",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
   "dev_url": "https://github.com/torchmd/torchmd-net",
   "doc_url": "https://github.com/torchmd/torchmd-net",
   "home": "https://github.com/torchmd/torchmd-net",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
  },
  "build": {
   "entry_points": [
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main"
   ],
   "number": "1",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib"
   ],
   "string": "cpu_py39h1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa"
   ]
  },
  "package": {
   "name": "torchmd-net",
   "version": "0.14.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": null,
   "sha256": "a11c20405ccdf09e38eba6d348b697de304766bda70334b85396c63e402f787a",
   "url": "https://github.com/torchmd/torchmd-net/archive/0.14.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests"
   ],
   "imports": [
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libtorch",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "h5py",
    "lightning",
    "matplotlib-base",
    "nnpops",
    "pydantic",
    "python",
    "pytorch_geometric",
    "torchmetrics",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
   "dev_url": "https://github.com/torchmd/torchmd-net",
   "doc_url": "https://github.com/torchmd/torchmd-net",
   "home": "https://github.com/torchmd/torchmd-net",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
  },
  "build": {
   "entry_points": [
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main"
   ],
   "number": "1",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib"
   ],
   "string": "cpu_py39h1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa"
   ]
  },
  "package": {
   "name": "torchmd-net",
   "version": "0.14.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==12.0",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cuda-version ==11.8",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==12.0",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.8",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.2",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==12.0",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "cuda-version ==11.8",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "01-data.patch",
    "01-data.patch",
    "01-data.patch",
    "01-data.patch"
   ],
   "sha256": "a11c20405ccdf09e38eba6d348b697de304766bda70334b85396c63e402f787a",
   "url": "https://github.com/torchmd/torchmd-net/archive/0.14.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests"
   ],
   "imports": [
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples"
   ]
  }
 },
 "name": "torchmd-net",
 "osx_64_meta_yaml": {
  "about": {
   "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
   "dev_url": "https://github.com/torchmd/torchmd-net",
   "doc_url": "https://github.com/torchmd/torchmd-net",
   "home": "https://github.com/torchmd/torchmd-net",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "README.md",
   "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
  },
  "build": {
   "entry_points": [
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main",
    "torchmd-train = torchmdnet.scripts.train:main"
   ],
   "number": "1",
   "rpaths": [
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib",
    "lib/",
    "SP_DIR/torch/lib"
   ],
   "string": "cpu_py39h1234567_1"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa",
    "RaulPPelaez",
    "raimis",
    "giadefa"
   ]
  },
  "package": {
   "name": "torchmd-net",
   "version": "0.14.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*",
    "python",
    "pip",
    "libtorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm",
    "python",
    "h5py",
    "matplotlib-base",
    "nnpops",
    "pytorch_geometric",
    "lightning",
    "pydantic <2",
    "torchmetrics",
    "tqdm"
   ],
   "run_constrained": [
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "patches": [
    "01-data.patch",
    "01-data.patch",
    "01-data.patch",
    "01-data.patch"
   ],
   "sha256": "a11c20405ccdf09e38eba6d348b697de304766bda70334b85396c63e402f787a",
   "url": "https://github.com/torchmd/torchmd-net/archive/0.14.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests",
    "pip check",
    "torchmd-train --help",
    "pytest -v -x -s tests"
   ],
   "imports": [
    "torchmdnet",
    "torchmdnet",
    "torchmdnet",
    "torchmdnet"
   ],
   "requires": [
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest",
    "pip",
    "pytest"
   ],
   "source_files": [
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples",
    "tests",
    "examples"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libtorch",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "lightning",
    "matplotlib-base",
    "nnpops",
    "pydantic",
    "python",
    "pytorch_geometric",
    "torchmetrics",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchmd-net"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/torchmd-net.json"
 },
 "raw_meta_yaml": "{% set name = \"torchmd-net\" %}\n{% set version = \"0.14.0\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/torchmd/torchmd-net/archive/{{ version }}.tar.gz\n  sha256: a11c20405ccdf09e38eba6d348b697de304766bda70334b85396c63e402f787a\n  patches:\n      - 01-data.patch  # [osx]\n\nbuild:\n  entry_points:\n    - torchmd-train = torchmdnet.scripts.train:main\n  number: 1\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n# Mainly due to NNPOps not having a windows package\n  skip: true  # [win]\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n  host:\n    - python\n    - pip\n    - libtorch\n    - pytorch =*={{ torch_proc_type }}*\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n    {% if cuda_major >= 12 %}\n    - cuda-cudart\n    - cuda-cudart-dev\n    # No cuda-driver-dev in windows\n    - cuda-driver-dev  # [linux]\n    - libcufft-dev\n    - libcurand-dev\n    - libcublas-dev\n    - cuda-nvrtc-dev\n    - cuda-nvtx-dev\n    - cuda-profiler-api\n    - cuda-nvrtc-dev\n    - libcusparse-dev\n    - libcusolver-dev\n    {% endif %}\n  run:\n    - python\n    - h5py\n    - matplotlib-base\n    - nnpops\n    - pytorch_geometric\n    - lightning\n    - pydantic <2\n    - torchmetrics\n    - tqdm\n    # cuda-version is added here to prevent the conda-forge runner to download a different version during testing, which makes it run out of memory.\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchmdnet\n  commands:\n    - pip check\n    - torchmd-train --help\n    - pytest -v -x -s tests\n  requires:\n    - pip\n    - pytest\n  source_files:\n    - tests\n    - examples\n\nabout:\n  home: https://github.com/torchmd/torchmd-net\n  license: MIT\n  license_family: MIT\n  license_file: README.md\n  summary: 'State of the art Pytorch Neural Network Potentials (NNPs)'\n  description: |\n    TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n  doc_url: https://github.com/torchmd/torchmd-net\n  dev_url: https://github.com/torchmd/torchmd-net\n\nextra:\n  recipe-maintainers:\n    - RaulPPelaez\n    - raimis\n    - giadefa\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda-version",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "libtorch",
   "lightning",
   "matplotlib-base",
   "nnpops",
   "pip",
   "pydantic",
   "python",
   "pytorch",
   "pytorch_geometric",
   "torchmetrics",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libtorch",
    "pip",
    "python",
    "pytorch"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "h5py",
    "lightning",
    "matplotlib-base",
    "nnpops",
    "pydantic",
    "python",
    "pytorch_geometric",
    "torchmetrics",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version ==11.2",
    "cuda-version ==11.8",
    "cuda-version ==12.0",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version ==11.2",
    "cuda-version ==11.8",
    "cuda-version ==12.0",
    "libtorch",
    "pip",
    "python",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version ==11.2",
    "cuda-version ==11.8",
    "cuda-version ==12.0",
    "h5py",
    "lightning",
    "matplotlib-base",
    "nnpops",
    "pydantic <2",
    "python",
    "pytorch_geometric",
    "torchmetrics",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/torchmd/torchmd-net/archive/0.14.0.tar.gz",
 "version": "0.14.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/torchmd-net.json"
 }
}