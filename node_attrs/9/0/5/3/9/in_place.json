{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "in_place",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The in_place module provides an InPlace class for reading &\nwriting a file \"in-place\": data that you write ends up at the\nsame filepath that you read from, and in_place takes care of\nall the necessary mucking about with temporary files for you.\n",
   "dev_url": "https://github.com/jwodder/inplace",
   "home": "https://github.com/jwodder/inplace",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "In-place file processing in Python"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jwodder",
    "druvus"
   ]
  },
  "package": {
   "name": "in_place",
   "version": "1.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8"
   ],
   "run": [
    "python >=3.8"
   ]
  },
  "source": {
   "sha256": "503048e91e0736cb092787c8017dce1328a62421f8fb81c29d25854c355af5ac",
   "url": "https://pypi.io/packages/source/i/in_place/in_place-1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest -vv test"
   ],
   "imports": [
    "in_place"
   ],
   "requires": [
    "pytest",
    "pytest-cov"
   ],
   "source_files": [
    "test",
    "tox.ini"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The in_place module provides an InPlace class for reading &\nwriting a file \"in-place\": data that you write ends up at the\nsame filepath that you read from, and in_place takes care of\nall the necessary mucking about with temporary files for you.\n",
   "dev_url": "https://github.com/jwodder/inplace",
   "home": "https://github.com/jwodder/inplace",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "In-place file processing in Python"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jwodder",
    "druvus"
   ]
  },
  "package": {
   "name": "in_place",
   "version": "1.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.8"
   ],
   "run": [
    "python >=3.8"
   ]
  },
  "source": {
   "sha256": "503048e91e0736cb092787c8017dce1328a62421f8fb81c29d25854c355af5ac",
   "url": "https://pypi.io/packages/source/i/in_place/in_place-1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest -vv test"
   ],
   "imports": [
    "in_place"
   ],
   "requires": [
    "pytest",
    "pytest-cov"
   ],
   "source_files": [
    "test",
    "tox.ini"
   ]
  }
 },
 "name": "in_place",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "in_place"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/in_place.json"
 },
 "raw_meta_yaml": "{% set name = \"in_place\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 503048e91e0736cb092787c8017dce1328a62421f8fb81c29d25854c355af5ac\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  noarch: python\n\nrequirements:\n  host:\n    - pip\n    - python >=3.8\n  run:\n    - python >=3.8\n\ntest:\n  requires:\n    - pytest\n    - pytest-cov\n  source_files:\n    - test\n    - tox.ini\n  imports:\n    - in_place\n  commands:\n    - python -m pytest -vv test\n\nabout:\n  home: https://github.com/jwodder/inplace\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: In-place file processing in Python\n  description: |\n    The in_place module provides an InPlace class for reading &\n    writing a file \"in-place\": data that you write ends up at the\n    same filepath that you read from, and in_place takes care of\n    all the necessary mucking about with temporary files for you.\n  dev_url: https://github.com/jwodder/inplace\n\nextra:\n  recipe-maintainers:\n    - jwodder\n    - druvus\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.8"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/i/in_place/in_place-1.0.0.tar.gz",
 "version": "1.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/in_place.json"
 }
}