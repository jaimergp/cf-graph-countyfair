{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "pycbc",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overlinking": true,
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "spxiwh",
    "titodalcanton"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "2.4.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "dqsegdb >=2.0.0",
    "dqsegdb2 >=1.1.4",
    "gwdatafind >=1.1.3",
    "h5py >=3.0.0,!=3.7.0",
    "jinja2",
    "ligo-gracedb >=2.10.0",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=2.0.0",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pegasus-wms.api >=5.0.6",
    "pkg-config",
    "pillow",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw >=1.8.1",
    "scipy >=0.16.0",
    "setuptools",
    "six >=1.10.0",
    "sympy",
    "tqdm"
   ],
   "run_constrained": [
    "liblalmetaio !=2.1.0"
   ]
  },
  "source": {
   "patches": [
    "0001-setup.py-remove-lalsuite-install_requires.patch",
    "0002-setup.py-don-t-generate-version-info-in-build.patch",
    "0003-ignore-tests-that-rely-on-external-data-files.patch"
   ],
   "sha256": "2965b7229ee834517a6788d2af9f07a4c00b9ed6344e9f1cd8ba169bc90ee76a",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-2.4.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_gwosc_segment_query --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_offline_search_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "pytest",
    "mkl"
   ],
   "source_files": [
    "test",
    "pytest.ini"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pegasus-wms.api",
    "pillow",
    "pkg-config",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw",
    "scipy",
    "setuptools",
    "six",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mkl",
    "mpi4py",
    "openssh",
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overlinking": true,
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "spxiwh",
    "titodalcanton"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "2.4.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "dqsegdb >=2.0.0",
    "dqsegdb2 >=1.1.4",
    "gwdatafind >=1.1.3",
    "h5py >=3.0.0,!=3.7.0",
    "jinja2",
    "ligo-gracedb >=2.10.0",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=2.0.0",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pegasus-wms.api >=5.0.6",
    "pkg-config",
    "pillow",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw >=1.8.1",
    "scipy >=0.16.0",
    "setuptools",
    "six >=1.10.0",
    "sympy",
    "tqdm"
   ],
   "run_constrained": [
    "liblalmetaio !=2.1.0"
   ]
  },
  "source": {
   "patches": [
    "0001-setup.py-remove-lalsuite-install_requires.patch",
    "0002-setup.py-don-t-generate-version-info-in-build.patch",
    "0003-ignore-tests-that-rely-on-external-data-files.patch"
   ],
   "sha256": "2965b7229ee834517a6788d2af9f07a4c00b9ed6344e9f1cd8ba169bc90ee76a",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-2.4.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_gwosc_segment_query --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_offline_search_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "pytest",
    "mkl"
   ],
   "source_files": [
    "test",
    "pytest.ini"
   ]
  }
 },
 "name": "pycbc",
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overlinking": true,
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "spxiwh",
    "titodalcanton"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "2.4.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "dqsegdb >=2.0.0",
    "dqsegdb2 >=1.1.4",
    "gwdatafind >=1.1.3",
    "h5py >=3.0.0,!=3.7.0",
    "jinja2",
    "ligo-gracedb >=2.10.0",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=2.0.0",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pegasus-wms.api >=5.0.6",
    "pkg-config",
    "pillow",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw >=1.8.1",
    "scipy >=0.16.0",
    "setuptools",
    "six >=1.10.0",
    "sympy",
    "tqdm"
   ],
   "run_constrained": [
    "liblalmetaio !=2.1.0"
   ]
  },
  "source": {
   "patches": [
    "0001-setup.py-remove-lalsuite-install_requires.patch",
    "0002-setup.py-don-t-generate-version-info-in-build.patch",
    "0003-ignore-tests-that-rely-on-external-data-files.patch"
   ],
   "sha256": "2965b7229ee834517a6788d2af9f07a4c00b9ed6344e9f1cd8ba169bc90ee76a",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-2.4.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_gwosc_segment_query --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_offline_search_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "pytest",
    "mkl"
   ],
   "source_files": [
    "test",
    "pytest.ini"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pegasus-wms.api",
    "pillow",
    "pkg-config",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw",
    "scipy",
    "setuptools",
    "six",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mkl",
    "mpi4py",
    "openssh",
    "pip",
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "PyCBC is a software package used to explore astrophysical sources\nof gravitational waves.\nIt contains algorithms that can detect coalescing compact binaries\nand measure the astrophysical parameters of detected sources.\nPyCBC was used in the first direct detection of gravitational\nwaves (GW150914) by LIGO and is used in the ongoing analysis of\nLIGO and Virgo data.\n",
   "dev_url": "https://github.com/gwastro/pycbc/",
   "doc_url": "http://pycbc.org/pycbc/latest/html/",
   "home": "https://pycbc.org/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Core library to analyze gravitational-wave data, find signals, and study their parameters."
  },
  "build": {
   "error_overlinking": true,
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "duncanmmacleod",
    "ahnitz",
    "spxiwh",
    "titodalcanton"
   ]
  },
  "package": {
   "name": "pycbc",
   "version": "2.4.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ],
   "run": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "dqsegdb >=2.0.0",
    "dqsegdb2 >=1.1.4",
    "gwdatafind >=1.1.3",
    "h5py >=3.0.0,!=3.7.0",
    "jinja2",
    "ligo-gracedb >=2.10.0",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=2.0.0",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pegasus-wms.api >=5.0.6",
    "pkg-config",
    "pillow",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw >=1.8.1",
    "scipy >=0.16.0",
    "setuptools",
    "six >=1.10.0",
    "sympy",
    "tqdm"
   ],
   "run_constrained": [
    "liblalmetaio !=2.1.0"
   ]
  },
  "source": {
   "patches": [
    "0001-setup.py-remove-lalsuite-install_requires.patch",
    "0002-setup.py-don-t-generate-version-info-in-build.patch",
    "0003-ignore-tests-that-rely-on-external-data-files.patch"
   ],
   "sha256": "2965b7229ee834517a6788d2af9f07a4c00b9ed6344e9f1cd8ba169bc90ee76a",
   "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-2.4.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pip check",
    "python -m pytest",
    "export MPLBACKEND=\"agg\"",
    "pycbc_aligned_bank_cat --help",
    "pycbc_aligned_stoch_bank --help",
    "pycbc_apply_rerank --help",
    "pycbc_average_psd --help",
    "pycbc_bank_verification --help",
    "pycbc_banksim --help",
    "pycbc_banksim_combine_banks --help",
    "pycbc_banksim_match_combine --help",
    "pycbc_banksim_plot_eff_fitting_factor --help",
    "pycbc_banksim_plot_fitting_factors --help",
    "pycbc_banksim_skymax --help",
    "pycbc_banksim_table_point_injs --help",
    "pycbc_brute_bank --help",
    "pycbc_calculate_psd --help",
    "pycbc_coinc_bank2hdf --help",
    "pycbc_coinc_findtrigs --help",
    "pycbc_coinc_hdfinjfind --help",
    "pycbc_coinc_mergetrigs --help",
    "pycbc_coinc_statmap --help",
    "pycbc_coinc_statmap_inj --help",
    "pycbc_coinc_time --help",
    "pycbc_combine_coincident_events --help",
    "pycbc_combine_statmap --help",
    "pycbc_compress_bank --help",
    "pycbc_condition_strain --help",
    "pycbc_create_html_snippet --help",
    "pycbc_create_injections --help",
    "pycbc_cut_merge_triggers_to_tmpltbank --help",
    "pycbc_data_store --help",
    "pycbc_distribute_background_bins --help",
    "pycbc_faithsim --help",
    "pycbc_fit_sngl_trigs --help",
    "pycbc_fit_sngls_binned --help",
    "pycbc_fit_sngls_by_template --help",
    "pycbc_fit_sngls_over_multiparam --help",
    "pycbc_fit_sngls_over_param --help",
    "pycbc_fit_sngls_split_binned --help",
    "pycbc_followup_file --help",
    "pycbc_foreground_censor --help",
    "pycbc_foreground_minifollowup --help",
    "pycbc_generate_hwinj --help",
    "pycbc_generate_hwinj_from_xml --help",
    "pycbc_geom_aligned_2dstack --help",
    "pycbc_geom_aligned_bank --help",
    "pycbc_geom_nonspinbank --help",
    "pycbc_get_ffinal --help",
    "pycbc_get_loudest_params --help",
    "pycbc_grb_inj_finder --help",
    "pycbc_grb_trig_cluster --help",
    "pycbc_grb_trig_combiner --help",
    "pycbc_gwosc_segment_query --help",
    "pycbc_hdf5_splitbank --help",
    "pycbc_ifar_catalog --help",
    "pycbc_inference --help",
    "pycbc_inference_extract_samples --help",
    "pycbc_inference_plot_acceptance_rate --help",
    "pycbc_inference_plot_acf --help",
    "pycbc_inference_plot_acl --help",
    "pycbc_inference_plot_gelman_rubin --help",
    "pycbc_inference_plot_geweke --help",
    "pycbc_inference_plot_inj_recovery --help",
    "pycbc_inference_plot_movie --help",
    "pycbc_inference_plot_posterior --help",
    "pycbc_inference_plot_pp --help",
    "pycbc_inference_plot_prior --help",
    "pycbc_inference_plot_samples --help",
    "pycbc_inference_plot_thermodynamic_integrand --help",
    "pycbc_inference_table_summary --help",
    "pycbc_inj_cut --help",
    "pycbc_injection_minifollowup --help",
    "pycbc_insert_frame_hwinj --help",
    "pycbc_inspiral --help",
    "pycbc_inspiral_skymax --help",
    "pycbc_live --help",
    "pycbc_live_nagios_monitor --help",
    "pycbc_make_bank_verifier_workflow --help",
    "pycbc_make_banksim --help",
    "pycbc_make_faithsim --help",
    "pycbc_make_html_page --help",
    "pycbc_make_inference_inj_workflow --help",
    "pycbc_make_inference_workflow --help",
    "pycbc_make_offline_search_workflow --help",
    "pycbc_make_psd_estimation_workflow --help",
    "pycbc_make_sbank_workflow --help",
    "pycbc_make_uberbank_workflow --help",
    "pycbc_mass_area_plot --help",
    "pycbc_mchirp_plots --help",
    "pycbc_merge_psds --help",
    "pycbc_multi_inspiral --help",
    "pycbc_add_statmap --help",
    "pycbc_dtphase --help",
    "pycbc_exclude_zerolag --help",
    "pycbc_optimal_snr --help",
    "pycbc_optimize_snr --help",
    "pycbc_page_banktriggerrate --help",
    "pycbc_page_coinc_snrchi --help",
    "pycbc_page_coincinfo --help",
    "pycbc_page_foreground --help",
    "pycbc_page_foundmissed --help",
    "pycbc_page_ifar --help",
    "pycbc_page_injinfo --help",
    "pycbc_page_injtable --help",
    "pycbc_page_recovery --help",
    "pycbc_page_segments --help",
    "pycbc_page_segplot --help",
    "pycbc_page_segtable --help",
    "pycbc_page_sensitivity --help",
    "pycbc_page_snglinfo --help",
    "pycbc_page_snrchi --help",
    "pycbc_page_snrifar --help",
    "pycbc_page_snrratehist --help",
    "pycbc_page_vetotable --help",
    "pycbc_plot_background_coincs --help",
    "pycbc_plot_bank_bins --help",
    "pycbc_plot_chigram --help",
    "pycbc_plot_gating --help",
    "pycbc_plot_hist --help",
    "pycbc_plot_hwinj --help",
    "pycbc_plot_psd_file --help",
    "pycbc_plot_psd_timefreq --help",
    "pycbc_plot_qscan --help",
    "pycbc_plot_range --help",
    "pycbc_plot_range_vs_mtot --help",
    "pycbc_plot_singles_timefreq --help",
    "pycbc_plot_singles_vs_params --help",
    "pycbc_plot_throughput --help",
    "pycbc_plot_trigger_timeseries --help",
    "pycbc_plot_trigrate --help",
    "pycbc_plot_vt_ratio --help",
    "pycbc_plot_waveform --help",
    "pycbc_population_plots --help",
    "pycbc_population_rates --help",
    "pycbc_process_sngls --help",
    "pycbc_pygrb_plot_chisq_veto --help",
    "pycbc_pygrb_plot_coh_ifosnr --help",
    "pycbc_pygrb_plot_skygrid --help",
    "pycbc_pygrb_plot_snr_timeseries --help",
    "pycbc_pygrb_pp_workflow --help",
    "pycbc_randomize_inj_dist_by_optsnr --help",
    "pycbc_reduce_template_bank --help",
    "pycbc_rerank_passthrough --help",
    "pycbc_single_template --help",
    "pycbc_single_template_plot --help",
    "pycbc_sngl_minifollowup --help",
    "pycbc_split_inspinj --help",
    "pycbc_splitbank --help",
    "pycbc_strip_injections --help",
    "pycbc_template_recovery_hist --help",
    "pycbc_tmpltbank_to_chi_params --help",
    "pycbc_upload_xml_to_gracedb --help",
    "run_pycbc_inference --help"
   ],
   "imports": [
    "pycbc",
    "pycbc.bin_utils",
    "pycbc.boundaries",
    "pycbc.catalog",
    "pycbc.conversions",
    "pycbc.coordinates",
    "pycbc.cosmology",
    "pycbc.detector",
    "pycbc.distributions",
    "pycbc.dq",
    "pycbc.events",
    "pycbc.fft",
    "pycbc.filter",
    "pycbc.frame",
    "pycbc.inference",
    "pycbc.inference.io",
    "pycbc.inference.models",
    "pycbc.inference.sampler",
    "pycbc.inject",
    "pycbc.io",
    "pycbc.libutils",
    "pycbc.noise",
    "pycbc.opt",
    "pycbc.pnutils",
    "pycbc.pool",
    "pycbc.population",
    "pycbc.psd",
    "pycbc.rate",
    "pycbc.results",
    "pycbc.scheme",
    "pycbc.sensitivity",
    "pycbc.strain",
    "pycbc.tmpltbank",
    "pycbc.transforms",
    "pycbc.types",
    "pycbc.vetoes",
    "pycbc.waveform",
    "pycbc.workflow"
   ],
   "requires": [
    "epsie",
    "fftw",
    "mpi4py",
    "openssh",
    "pip",
    "pytest",
    "mkl"
   ],
   "source_files": [
    "test",
    "pytest.ini"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "cython",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pegasus-wms.api",
    "pillow",
    "pkg-config",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw",
    "scipy",
    "setuptools",
    "six",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mkl",
    "mpi4py",
    "openssh",
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pycbc"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pycbc.json"
 },
 "raw_meta_yaml": "{% set name = \"PyCBC\" %}\n{% set version = \"2.4.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 2965b7229ee834517a6788d2af9f07a4c00b9ed6344e9f1cd8ba169bc90ee76a\n  patches:\n    # for patches see:\n    #   https://github.com/gwastro/pycbc/compare/master...duncanmmacleod:pycbc:conda-patches\n    # update patches via:\n    #   git pull --rebase upstream vX.Y.Z\n    #   git format-patch vX.Y.Z\n\n    # remove lalsuite requirement from python metadata\n    - 0001-setup.py-remove-lalsuite-install_requires.patch\n    # skip regenerating the git_version_info\n    # https://github.com/gwastro/pycbc/issues/3917\n    - 0002-setup.py-don-t-generate-version-info-in-build.patch\n    # limit pytest to tests that don't need external data files\n    - 0003-ignore-tests-that-rely-on-external-data-files.patch\n\nbuild:\n  error_overlinking: true\n  number: 0\n  skip: true  # [win or py>=312]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - cython\n    - libgomp  # [linux]\n    - numpy\n    - pip\n    - python\n    - setuptools\n  run:\n    - astropy !=4.0.5,!=4.2.1,>=2.0.3\n    - beautifulsoup4 >=4.6.0\n    - cython >=0.29\n    - dqsegdb >=2.0.0\n    - dqsegdb2 >=1.1.4\n    - gwdatafind >=1.1.3\n    - h5py >=3.0.0,!=3.7.0\n    - jinja2\n    - ligo-gracedb >=2.10.0\n    - ligo-segments\n    - lscsoft-glue >=1.59.3\n    - mako >=1.0.1\n    - matplotlib-base >=2.0.0\n    - mpld3 >=0.3\n    - {{ pin_compatible('numpy') }}\n    - numpy !=1.19.0\n    - pegasus-wms.api >=5.0.6\n    - pkg-config\n    - pillow\n    - pykerr\n    - python\n    - python-lalframe\n    - python-lalsimulation\n    - python-ligo-lw >=1.8.1\n    - scipy >=0.16.0\n    - setuptools\n    - six >=1.10.0\n    - sympy\n    - tqdm\n  run_constrained:\n    # https://github.com/gwastro/pycbc/pull/3901#issuecomment-993519319\n    - liblalmetaio !=2.1.0\n    # https://github.com/conda-forge/backports-feedstock/issues/6\n    - setuptools <71.0.0  # [py<39]\n\ntest:\n  imports:\n    - pycbc\n    - pycbc.bin_utils\n    - pycbc.boundaries\n    - pycbc.catalog\n    - pycbc.conversions\n    - pycbc.coordinates\n    - pycbc.cosmology\n    - pycbc.detector\n    - pycbc.distributions\n    - pycbc.dq\n    - pycbc.events\n    - pycbc.fft\n    - pycbc.filter\n    - pycbc.frame\n    - pycbc.inference\n    - pycbc.inference.io\n    - pycbc.inference.models\n    - pycbc.inference.sampler\n    - pycbc.inject\n    - pycbc.io\n    - pycbc.libutils\n    - pycbc.noise\n    - pycbc.opt\n    - pycbc.pnutils\n    - pycbc.pool\n    - pycbc.population\n    - pycbc.psd\n    - pycbc.rate\n    - pycbc.results\n    - pycbc.scheme\n    - pycbc.sensitivity\n    - pycbc.strain\n    - pycbc.tmpltbank\n    - pycbc.transforms\n    - pycbc.types\n    - pycbc.vetoes\n    - pycbc.waveform\n    - pycbc.workflow\n  requires:\n    - epsie\n    - fftw\n    - mpi4py\n    - openssh\n    - pip\n    - pytest\n    - mkl\n  source_files:\n    - test\n    - pytest.ini\n  commands:\n    # check requirements with pip\n    - python -m pip check\n    # test scripts\n    - python -m pytest\n    # simple check that exes load\n    - export MPLBACKEND=\"agg\"\n    - pycbc_aligned_bank_cat --help\n    - pycbc_aligned_stoch_bank --help\n    - pycbc_apply_rerank --help\n    - pycbc_average_psd --help\n    - pycbc_bank_verification --help\n    - pycbc_banksim --help\n    - pycbc_banksim_combine_banks --help\n    - pycbc_banksim_match_combine --help\n    - pycbc_banksim_plot_eff_fitting_factor --help\n    - pycbc_banksim_plot_fitting_factors --help\n    - pycbc_banksim_skymax --help\n    - pycbc_banksim_table_point_injs --help\n    - pycbc_brute_bank --help\n    - pycbc_calculate_psd --help\n    - pycbc_coinc_bank2hdf --help\n    - pycbc_coinc_findtrigs --help\n    - pycbc_coinc_hdfinjfind --help\n    - pycbc_coinc_mergetrigs --help\n    - pycbc_coinc_statmap --help\n    - pycbc_coinc_statmap_inj --help\n    - pycbc_coinc_time --help\n    - pycbc_combine_coincident_events --help\n    - pycbc_combine_statmap --help\n    - pycbc_compress_bank --help\n    - pycbc_condition_strain --help\n    - pycbc_create_html_snippet --help\n    - pycbc_create_injections --help\n    - pycbc_cut_merge_triggers_to_tmpltbank --help\n    - pycbc_data_store --help\n    - pycbc_distribute_background_bins --help\n    - pycbc_faithsim --help\n    - pycbc_fit_sngl_trigs --help\n    - pycbc_fit_sngls_binned --help\n    - pycbc_fit_sngls_by_template --help\n    - pycbc_fit_sngls_over_multiparam --help\n    - pycbc_fit_sngls_over_param --help\n    - pycbc_fit_sngls_split_binned --help\n    - pycbc_followup_file --help\n    - pycbc_foreground_censor --help\n    - pycbc_foreground_minifollowup --help\n    - pycbc_generate_hwinj --help\n    - pycbc_generate_hwinj_from_xml --help\n    - pycbc_geom_aligned_2dstack --help\n    - pycbc_geom_aligned_bank --help\n    - pycbc_geom_nonspinbank --help\n    - pycbc_get_ffinal --help\n    - pycbc_get_loudest_params --help\n    - pycbc_grb_inj_finder --help\n    - pycbc_grb_trig_cluster --help\n    - pycbc_grb_trig_combiner --help\n    - pycbc_gwosc_segment_query --help\n    - pycbc_hdf5_splitbank --help\n    - pycbc_ifar_catalog --help\n    - pycbc_inference --help\n    - pycbc_inference_extract_samples --help\n    - pycbc_inference_plot_acceptance_rate --help\n    - pycbc_inference_plot_acf --help\n    - pycbc_inference_plot_acl --help\n    - pycbc_inference_plot_gelman_rubin --help\n    - pycbc_inference_plot_geweke --help\n    - pycbc_inference_plot_inj_recovery --help\n    - pycbc_inference_plot_movie --help\n    - pycbc_inference_plot_posterior --help\n    - pycbc_inference_plot_pp --help\n    - pycbc_inference_plot_prior --help\n    - pycbc_inference_plot_samples --help\n    - pycbc_inference_plot_thermodynamic_integrand --help\n    - pycbc_inference_table_summary --help\n    - pycbc_inj_cut --help\n    - pycbc_injection_minifollowup --help\n    - pycbc_insert_frame_hwinj --help\n    - pycbc_inspiral --help\n    - pycbc_inspiral_skymax --help\n    - pycbc_live --help\n    - pycbc_live_nagios_monitor --help\n    - pycbc_make_bank_verifier_workflow --help\n    - pycbc_make_banksim --help\n    - pycbc_make_faithsim --help\n    #- pycbc_make_grb_summary_page --help\n    - pycbc_make_html_page --help\n    - pycbc_make_inference_inj_workflow --help\n    - pycbc_make_inference_workflow --help\n    - pycbc_make_offline_search_workflow --help\n    #- pycbc_make_offline_grb_workflow --help\n    - pycbc_make_psd_estimation_workflow --help\n    - pycbc_make_sbank_workflow --help\n    - pycbc_make_uberbank_workflow --help\n    - pycbc_mass_area_plot --help\n    - pycbc_mchirp_plots --help\n    - pycbc_merge_psds --help\n    - pycbc_multi_inspiral --help\n    - pycbc_add_statmap --help\n    - pycbc_coinc_findtrigs --help\n    - pycbc_coinc_statmap --help\n    - pycbc_coinc_statmap_inj --help\n    - pycbc_combine_statmap --help\n    - pycbc_dtphase --help\n    - pycbc_exclude_zerolag --help\n    - pycbc_optimal_snr --help\n    - pycbc_optimize_snr --help\n    - pycbc_page_banktriggerrate --help\n    - pycbc_page_coinc_snrchi --help\n    - pycbc_page_coincinfo --help\n    - pycbc_page_foreground --help\n    - pycbc_page_foundmissed --help\n    - pycbc_page_ifar --help\n    - pycbc_page_injinfo --help\n    - pycbc_page_injtable --help\n    - pycbc_page_recovery --help\n    - pycbc_page_segments --help\n    - pycbc_page_segplot --help\n    - pycbc_page_segtable --help\n    - pycbc_page_sensitivity --help\n    - pycbc_page_snglinfo --help\n    - pycbc_page_snrchi --help\n    - pycbc_page_snrifar --help\n    - pycbc_page_snrratehist --help\n    - pycbc_page_vetotable --help\n    - pycbc_plot_background_coincs --help\n    - pycbc_plot_bank_bins --help\n    - pycbc_plot_chigram --help\n    - pycbc_plot_gating --help\n    - pycbc_plot_hist --help\n    - pycbc_plot_hwinj --help\n    - pycbc_plot_psd_file --help\n    - pycbc_plot_psd_timefreq --help\n    - pycbc_plot_qscan --help\n    - pycbc_plot_range --help\n    - pycbc_plot_range_vs_mtot --help\n    - pycbc_plot_singles_timefreq --help\n    - pycbc_plot_singles_vs_params --help\n    - pycbc_plot_throughput --help\n    - pycbc_plot_trigger_timeseries --help\n    - pycbc_plot_trigrate --help\n    - pycbc_plot_vt_ratio --help\n    - pycbc_plot_waveform --help\n    - pycbc_population_plots --help\n    - pycbc_population_rates --help\n    - pycbc_process_sngls --help\n    - pycbc_pygrb_plot_chisq_veto --help\n    - pycbc_pygrb_plot_coh_ifosnr --help\n    - pycbc_pygrb_plot_skygrid --help\n    - pycbc_pygrb_plot_snr_timeseries --help\n    - pycbc_pygrb_pp_workflow --help\n    - pycbc_randomize_inj_dist_by_optsnr --help\n    - pycbc_reduce_template_bank --help\n    - pycbc_rerank_passthrough --help\n    - pycbc_single_template --help\n    - pycbc_single_template_plot --help\n    - pycbc_sngl_minifollowup --help\n    - pycbc_split_inspinj --help\n    - pycbc_splitbank --help\n    - pycbc_strip_injections --help\n    #- pycbc_submit_dax --help\n    - pycbc_template_recovery_hist --help\n    - pycbc_tmpltbank_to_chi_params --help\n    - pycbc_upload_xml_to_gracedb --help\n    - run_pycbc_inference --help\n\nabout:\n  home: https://pycbc.org/\n  dev_url: https://github.com/gwastro/pycbc/\n  doc_url: http://pycbc.org/pycbc/latest/html/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Core library to analyze gravitational-wave data, find signals, and study their parameters.\n  description: |\n    PyCBC is a software package used to explore astrophysical sources\n    of gravitational waves.\n    It contains algorithms that can detect coalescing compact binaries\n    and measure the astrophysical parameters of detected sources.\n    PyCBC was used in the first direct detection of gravitational\n    waves (GW150914) by LIGO and is used in the ongoing analysis of\n    LIGO and Virgo data.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - ahnitz\n    - spxiwh\n    - titodalcanton\n",
 "req": {
  "__set__": true,
  "elements": [
   "astropy",
   "beautifulsoup4",
   "c_compiler_stub",
   "c_stdlib_stub",
   "cxx_compiler_stub",
   "cython",
   "dqsegdb",
   "dqsegdb2",
   "gwdatafind",
   "h5py",
   "jinja2",
   "libgomp",
   "ligo-gracedb",
   "ligo-segments",
   "lscsoft-glue",
   "mako",
   "matplotlib-base",
   "mpld3",
   "numpy",
   "pegasus-wms.api",
   "pillow",
   "pip",
   "pkg-config",
   "pykerr",
   "python",
   "python-lalframe",
   "python-lalsimulation",
   "python-ligo-lw",
   "scipy",
   "setuptools",
   "six",
   "sympy",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "beautifulsoup4",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "cython",
    "dqsegdb",
    "dqsegdb2",
    "gwdatafind",
    "h5py",
    "jinja2",
    "ligo-gracedb",
    "ligo-segments",
    "lscsoft-glue",
    "mako",
    "matplotlib-base",
    "mpld3",
    "numpy",
    "pegasus-wms.api",
    "pillow",
    "pkg-config",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw",
    "scipy",
    "setuptools",
    "six",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mkl",
    "mpi4py",
    "openssh",
    "pip",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libgomp",
    "numpy",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy !=4.0.5,!=4.2.1,>=2.0.3",
    "beautifulsoup4 >=4.6.0",
    "cython >=0.29",
    "dqsegdb >=2.0.0",
    "dqsegdb2 >=1.1.4",
    "gwdatafind >=1.1.3",
    "h5py >=3.0.0,!=3.7.0",
    "jinja2",
    "ligo-gracedb >=2.10.0",
    "ligo-segments",
    "lscsoft-glue >=1.59.3",
    "mako >=1.0.1",
    "matplotlib-base >=2.0.0",
    "mpld3 >=0.3",
    "numpy",
    "numpy !=1.19.0",
    "pegasus-wms.api >=5.0.6",
    "pillow",
    "pkg-config",
    "pykerr",
    "python",
    "python-lalframe",
    "python-lalsimulation",
    "python-ligo-lw >=1.8.1",
    "scipy >=0.16.0",
    "setuptools",
    "six >=1.10.0",
    "sympy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "epsie",
    "fftw",
    "mkl",
    "mpi4py",
    "openssh",
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/P/PyCBC/PyCBC-2.4.2.tar.gz",
 "version": "2.4.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pycbc.json"
 }
}