{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true,
   "max_parallel": 20
  },
  "bot": {
   "abi_migration_branches": [
    "14.x",
    "13.x",
    "12.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "arrow-cpp",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cxx_compiler_stub",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cxx_compiler_stub",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cxx_compiler_stub",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/lib/libarrow_cuda.so",
      "test -L $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs",
      "pyarrow.cuda"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": [
      "*/libcuda.so.*"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.so",
      "test -L $PREFIX/lib/libarrow.so",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test ! -f $PREFIX/lib/libarrow_cuda.so",
      "test ! -f $PREFIX/lib/libarrow_cuda.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.1500.2.0-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libparquet.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.so",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.so",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf",
      "ucx"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.so",
      "test ! -f $PREFIX/lib/libarrow_flight.a",
      "test -f $PREFIX/lib/libarrow_flight_transport_ucx.so"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.so",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.so",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.so",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.so",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.so",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "cxx_compiler_stub",
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": null,
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -L $PREFIX/lib/libarrow.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.1500.2.0.dylib-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libparquet.dylib"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.dylib",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.dylib",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": null,
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -L $PREFIX/lib/libarrow.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.1500.2.0.dylib-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libparquet.dylib"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.dylib",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.dylib",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags",
      "glog"
     ],
     "missing_dso_whitelist": [
      "*/nvcuda.dll"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "openssl",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2",
      "libcrc32c",
      "libcurl"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_cuda.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_cuda.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if exist %LIBRARY_LIB%\\parquet.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\acero\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\dataset\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\types.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\sql\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "openssl",
      "re2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1",
      "if not exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if not exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_LIB%\\gandiva_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libabseil",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\engine\\substrait\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1",
      "if not exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if not exist %LIBRARY_LIB%\\parquet.lib exit 1",
      "if exist %LIBRARY_LIB%\\parquet_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": [
      "*/arrow_python.dll",
      "*/arrow_python_flight.dll"
     ],
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%\\pyarrow\\arrow_python.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\arrow_python_flight.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\include\\arrow\\python\\pyarrow.h exit 1",
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1",
      "if not exist %SP_DIR%/pyarrow/_cuda.cp%PY_VER:.=%-win_amd64.pyd exit 1",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "cd %SP_DIR%",
      "set \"ARROW_TEST_DATA=%SRC_DIR%\\testing\\data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags",
      "glog"
     ],
     "missing_dso_whitelist": [
      "*/nvcuda.dll"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "openssl",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "libcrc32c",
      "libcurl"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_cuda.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if exist %LIBRARY_LIB%\\parquet.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\acero\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\dataset\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\types.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\sql\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "openssl",
      "re2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1",
      "if not exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if not exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_LIB%\\gandiva_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libabseil",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\engine\\substrait\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1",
      "if not exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if not exist %LIBRARY_LIB%\\parquet.lib exit 1",
      "if exist %LIBRARY_LIB%\\parquet_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": [
      "*/arrow_python.dll",
      "*/arrow_python_flight.dll"
     ],
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%\\pyarrow\\arrow_python.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\arrow_python_flight.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\include\\arrow\\python\\pyarrow.h exit 1",
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "cd %SP_DIR%",
      "set \"ARROW_TEST_DATA=%SRC_DIR%\\testing\\data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "autoconf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "name": "apache-arrow",
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": null,
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -L $PREFIX/lib/libarrow.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.1500.2.0.dylib-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libparquet.dylib"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.dylib",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.dylib",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags"
     ],
     "missing_dso_whitelist": null,
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/api.h",
      "test -f $PREFIX/lib/libarrow.dylib",
      "test -L $PREFIX/lib/libarrow.dylib",
      "test ! -f $PREFIX/lib/libarrow.a",
      "test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.1500.2.0.dylib-gdb.py",
      "test ! -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libparquet.dylib"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/acero/api.h",
      "test -f $PREFIX/lib/libarrow_acero.dylib",
      "test ! -f $PREFIX/lib/libarrow_acero.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/dataset/api.h",
      "test -f $PREFIX/lib/libarrow_dataset.dylib",
      "test ! -f $PREFIX/lib/libarrow_dataset.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/types.h",
      "test -f $PREFIX/lib/libarrow_flight.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/flight/sql/api.h",
      "test -f $PREFIX/lib/libarrow_flight_sql.dylib",
      "test ! -f $PREFIX/lib/libarrow_flight_sql.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "llvm 16",
      "openssl",
      "re2"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/gandiva/engine.h",
      "test -f $PREFIX/lib/libgandiva.dylib",
      "test ! -f $PREFIX/lib/libgandiva.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/arrow/engine/substrait/api.h",
      "test -f $PREFIX/lib/libarrow_substrait.dylib",
      "test ! -f $PREFIX/lib/libarrow_substrait.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/parquet/api/reader.h",
      "test -f $PREFIX/lib/libparquet.dylib",
      "test ! -f $PREFIX/lib/libparquet.a"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": null,
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "test -f ${SP_DIR}/pyarrow/libarrow_python.dylib",
      "test -f ${SP_DIR}/pyarrow/libarrow_python_flight.dylib",
      "test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h",
      "test ! -f ${SP_DIR}/pyarrow/tests/test_array.py",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.orc",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.sh",
    "test": {
     "commands": [
      "cd ${SP_DIR}",
      "export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "apache-arrow-proc",
   "libarrow",
   "libarrow-acero",
   "libarrow-all",
   "libarrow-dataset",
   "libarrow-flight",
   "libarrow-flight-sql",
   "libarrow-gandiva",
   "libarrow-substrait",
   "libparquet",
   "pyarrow",
   "pyarrow-tests"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/arrow-cpp.json"
 },
 "raw_meta_yaml": "{% set version = \"15.0.2\" %}\n{% set cuda_enabled = cuda_compiler_version != \"None\" %}\n{% set build_ext_version = \"5.0.0\" %}\n{% set build_ext = \"cuda\" if cuda_enabled else \"cpu\" %}\n{% set proc_build_number = \"0\" %}\n{% set llvm_version = \"16\" %}\n\n# see https://github.com/apache/arrow/blob/apache-arrow-10.0.1/cpp/CMakeLists.txt#L88-L90\n{% set so_version = (version.split(\".\")[0] | int * 100 + version.split(\".\")[1] | int) ~ \".\" ~ version.split(\".\")[2] ~ \".0\" %}\n\npackage:\n  name: apache-arrow\n  version: {{ version }}\n\nsource:\n  - url: https://www.apache.org/dyn/closer.lua/arrow/arrow-{{ version }}/apache-arrow-{{ version }}.tar.gz?action=download\n    fn: apache-arrow-{{ version }}.tar.gz\n    sha256: abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6\n    patches:\n      # workaround for https://github.com/apache/arrow/issues/37692\n      - patches/0001-fixture-teardown-should-not-fail-test.patch\n      # backport https://github.com/apache/arrow/pull/40150 to unpin setuptools-scm\n      - patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch\n      # backport https://github.com/apache/arrow/pull/40230 for glog 0.7 compat\n      - patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch\n  # testing-submodule not part of release tarball\n  - git_url: https://github.com/apache/arrow-testing.git\n    git_rev: ad82a736c170e97b7c8c035ebd8a801c17eec170\n    folder: testing\n\nbuild:\n  number: 0\n  # for cuda support, building with one version is enough to be compatible with\n  # all later versions, since arrow is only using libcuda, and not libcudart.\n  skip: true  # [cuda_compiler_version not in (\"None\", cuda_compiler_version_min)]\n  # arrow promises API- & ABI-compatibility along SemVer, see #1096\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n    # needs to run protoc & grpc_cpp_plugin\n    - libgrpc                                # [build_platform != target_platform]\n    - libprotobuf                            # [build_platform != target_platform]\n    # needed for gandiva\n    - clangdev {{ llvm_version }}            # [build_platform != target_platform]\n    - llvmdev {{ llvm_version }}             # [build_platform != target_platform]\n    - gnuconfig                              # [build_platform != target_platform]\n    - cmake\n    - ninja\n    # necessary for vendored jemalloc\n    - autoconf     # [linux]\n    - make         # [linux]\n  host:\n    # for required dependencies, see\n    # https://github.com/apache/arrow/blob/apache-arrow-11.0.0/cpp/cmake_modules/ThirdpartyToolchain.cmake#L46-L75\n    - clangdev {{ llvm_version }}\n    - llvmdev {{ llvm_version }}\n    - aws-crt-cpp\n    - aws-sdk-cpp\n    - brotli\n    - bzip2\n    # not yet: https://github.com/conda-forge/cpp-opentelemetry-sdk-feedstock/issues/38\n    # - cpp-opentelemetry-sdk\n    # - proto-opentelemetry-proto =={{ cpp_opentelemetry_sdk }}\n    - gflags\n    - glog\n    # arrow uses a customized jemalloc, see #944\n    # - jemalloc\n    - libabseil\n    - libboost-headers\n    - libgoogle-cloud-devel\n    - libgoogle-cloud-storage-devel\n    - libgrpc\n    - libutf8proc\n    - lz4-c\n    - nlohmann_json\n    - orc\n    - rapidjson\n    - re2\n    - snappy\n    - thrift-cpp\n    - ucx          # [linux]\n    - xsimd\n    - zlib\n    - zstd\n\noutputs:\n  - name: apache-arrow-proc\n    version: {{ build_ext_version }}\n    build:\n      number: {{ proc_build_number }}\n      string: {{ build_ext }}\n    requirements:\n      run_constrained:\n        # avoid installation with old naming of proc package\n        - arrow-cpp-proc <0.0a0\n    test:\n      commands:\n        - exit 0\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: A meta-package to select Arrow build variant\n\n  - name: libarrow-all\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-acero\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-dataset\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-flight\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-flight-sql\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-gandiva\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libarrow-substrait\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libparquet\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-dataset\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight-sql\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-gandiva\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-substrait\", exact=True) }}\n        - {{ pin_subpackage(\"libparquet\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-dataset\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight-sql\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-gandiva\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-substrait\", exact=True) }}\n        - {{ pin_subpackage(\"libparquet\", exact=True) }}\n    test:\n      commands:\n        - echo \"tested in other outputs\"\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow\n\n  - name: libarrow\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow\", max_pin=\"x\") }}\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n        # arrow only uses headers, apparently\n        - gflags\n        # shared lib linked on unix, not on win\n        - glog                                   # [win]\n      ignore_run_exports:\n        # we don't need all of brotli's run-exports\n        - libbrotlicommon\n      track_features: {{ \"[arrow-cuda]\" if cuda_enabled else \"\" }}\n      missing_dso_whitelist:\n        - '*/libcuda.so.*'    # [linux]\n        - '*/nvcuda.dll'      # [win]\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n      host:\n        - aws-crt-cpp\n        - aws-sdk-cpp\n        - brotli\n        - bzip2\n        # not yet: https://github.com/conda-forge/cpp-opentelemetry-sdk-feedstock/issues/38\n        # - cpp-opentelemetry-sdk\n        # - proto-opentelemetry-proto =={{ cpp_opentelemetry_sdk }}\n        - gflags\n        - glog\n        # arrow uses a customized jemalloc, see #944\n        # - jemalloc\n        - libabseil\n        - libgoogle-cloud-devel\n        - libgoogle-cloud-storage-devel\n        - libutf8proc\n        - lz4-c\n        - openssl    # [win]\n        - orc\n        - re2\n        - snappy\n        - zlib\n        - zstd\n        - __cuda >={{ cuda_compiler_version_min }}  # [cuda_compiler_version != \"None\"]\n        # since libgoogle-cloud{,-storage} is static on windows, see\n        # https://github.com/conda-forge/google-cloud-cpp-feedstock/pull/108,\n        # its host deps (which aren't yet covered above) leak into the build here\n        - libcrc32c  # [win]\n        - libcurl    # [win]\n      run_constrained:\n        - apache-arrow-proc =*={{ build_ext }}\n        # avoid installation with old naming of lib package\n        - arrow-cpp <0.0a0\n        # old parquet lib output, now part of this feedstock\n        - parquet-cpp <0.0a0\n        # since all the other libarrow-* variants in this recipe depend exactly on libarrow,\n        # this avoids that libarrow-X & -Y get installed with different builds or versions.\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/api.h               # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\api.h exit 1     # [win]\n\n        {% set libs = [\"arrow\"] + (cuda_compiler_version != \"None\") * [\"arrow_cuda\"] %}\n        {% for each_lib in libs %}\n        # shared\n        - test -f $PREFIX/lib/lib{{ each_lib }}.so                 # [linux]\n        - test -f $PREFIX/lib/lib{{ each_lib }}.dylib              # [osx]\n        # Ensure symlinks are preserved\n        - test -L $PREFIX/lib/lib{{ each_lib }}.so                 # [linux]\n        - test -L $PREFIX/lib/lib{{ each_lib }}.dylib              # [osx]\n        - if not exist %LIBRARY_BIN%\\{{ each_lib }}.dll exit 1     # [win]\n        - if not exist %LIBRARY_LIB%\\{{ each_lib }}.lib exit 1     # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/lib{{ each_lib }}.a                # [unix]\n        - if exist %LIBRARY_LIB%\\{{ each_lib }}_static.lib exit 1  # [win]\n        {% endfor %}\n\n        # absence of arrow_cuda for CPU builds\n        - test ! -f $PREFIX/lib/libarrow_cuda.so                   # [(cuda_compiler_version == \"None\") and linux]\n        - test ! -f $PREFIX/lib/libarrow_cuda.a                    # [(cuda_compiler_version == \"None\") and linux]\n        - if exist %LIBRARY_BIN%\\arrow_cuda.dll exit 1             # [(cuda_compiler_version == \"None\") and win]\n        - if exist %LIBRARY_LIB%\\arrow_cuda.lib exit 1             # [(cuda_compiler_version == \"None\") and win]\n        - if exist %LIBRARY_LIB%\\arrow_cuda_static.lib exit 1      # [(cuda_compiler_version == \"None\") and win]\n\n        # gdb-wrapper (paths are stacked intentionally)\n        - test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.so.{{ so_version }}-gdb.py     # [linux]\n        - test -f $PREFIX/share/gdb/auto-load/$PREFIX/lib/libarrow.{{ so_version }}.dylib-gdb.py  # [osx]\n\n        {% set libs = [\n            \"arrow_acero\", \"arrow_dataset\", \"arrow_flight\",\n            \"arrow_flight_sql\", \"arrow_substrait\", \"gandiva\", \"parquet\"\n        ] %}\n        {% for each_lib in libs %}\n        # absence of libraries that belong in other outputs\n        - test ! -f $PREFIX/lib/lib{{ each_lib }}.so                # [linux]\n        - test ! -f $PREFIX/lib/lib{{ each_lib }}.dylib             # [osx]\n        - if exist %LIBRARY_BIN%\\{{ each_lib }}.dll exit 1          # [win]\n        - if exist %LIBRARY_LIB%\\{{ each_lib }}.lib exit 1          # [win]\n        {% endfor %}\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow core\n\n  - name: libarrow-acero\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-acero\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/acero/api.h             # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\acero\\api.h exit 1   # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libarrow_acero.so                 # [linux]\n        - test -f $PREFIX/lib/libarrow_acero.dylib              # [osx]\n        - if not exist %LIBRARY_BIN%\\arrow_acero.dll exit 1     # [win]\n        - if not exist %LIBRARY_LIB%\\arrow_acero.lib exit 1     # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow_acero.a                # [unix]\n        - if exist %LIBRARY_LIB%\\arrow_acero_static.lib exit 1  # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Acero\n\n  - name: libarrow-dataset\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-dataset\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libparquet\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libparquet\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/dataset/api.h               # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\dataset\\api.h exit 1     # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libarrow_dataset.so                   # [linux]\n        - test -f $PREFIX/lib/libarrow_dataset.dylib                # [osx]\n        - if not exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1       # [win]\n        - if not exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1       # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow_dataset.a                  # [unix]\n        - if exist %LIBRARY_LIB%\\arrow_dataset_static.lib exit 1    # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Dataset\n\n  - name: libarrow-flight\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-flight\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        # needs to run protoc & grpc_cpp_plugin\n        - libgrpc                                # [build_platform != target_platform]\n        - libprotobuf                            # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - libabseil\n        - libgrpc\n        - libprotobuf\n        - ucx          # [linux]\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/flight/types.h              # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\flight\\types.h exit 1    # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libarrow_flight.so                    # [linux]\n        - test -f $PREFIX/lib/libarrow_flight.dylib                 # [osx]\n        - if not exist %LIBRARY_BIN%\\arrow_flight.dll exit 1        # [win]\n        - if not exist %LIBRARY_LIB%\\arrow_flight.lib exit 1        # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow_flight.a                   # [unix]\n        - if exist %LIBRARY_LIB%\\arrow_flight_static.lib exit 1     # [win]\n\n        # Only check UCX on Linux\n        - test -f $PREFIX/lib/libarrow_flight_transport_ucx.so      # [linux]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Flight\n\n  - name: libarrow-flight-sql\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-flight-sql\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        # needs to run protoc & grpc_cpp_plugin\n        - libgrpc                                # [build_platform != target_platform]\n        - libprotobuf                            # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight\", exact=True) }}\n        - libprotobuf\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/flight/sql/api.h                # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\flight\\sql\\api.h exit 1      # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libarrow_flight_sql.so                    # [linux]\n        - test -f $PREFIX/lib/libarrow_flight_sql.dylib                 # [osx]\n        - if not exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1        # [win]\n        - if not exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1        # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow_flight_sql.a                   # [unix]\n        - if exist %LIBRARY_LIB%\\arrow_flight_sql_static.lib exit 1     # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Flight SQL\n\n  - name: libarrow-gandiva\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-gandiva\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      host:\n        - {{ pin_subpackage(\"libarrow\", max_pin=\"x\") }}\n        - libabseil\n        - libutf8proc\n        # gandiva requires shared libllvm; needs to match version used at build time\n        - llvm {{ llvm_version }}  # [unix]\n        - openssl\n        - re2\n        - zlib  # [win]\n        - zstd  # [win]\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/gandiva/engine.h              # [unix]\n        - if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1    # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libgandiva.so                     # [linux]\n        - test -f $PREFIX/lib/libgandiva.dylib                  # [osx]\n        - if not exist %LIBRARY_BIN%\\gandiva.dll exit 1         # [win]\n        - if not exist %LIBRARY_LIB%\\gandiva.lib exit 1         # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libgandiva.a                    # [unix]\n        - if exist %LIBRARY_LIB%\\gandiva_static.lib exit 1      # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Gandiva\n\n  - name: libarrow-substrait\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libarrow-substrait\", max_pin=\"x\") }}\n    requirements:\n      build:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - libprotobuf                            # [build_platform != target_platform]\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-dataset\", exact=True) }}\n        - libabseil  # [win]\n        - libprotobuf\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-dataset\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/arrow/engine/substrait/api.h              # [unix]\n        - if not exist %LIBRARY_INC%\\arrow\\engine\\substrait\\api.h exit 1    # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libarrow_substrait.so                         # [linux]\n        - test -f $PREFIX/lib/libarrow_substrait.dylib                      # [osx]\n        - if not exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1             # [win]\n        - if not exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1             # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libarrow_substrait.a                        # [unix]\n        - if exist %LIBRARY_LIB%\\arrow_substrait_static.lib exit 1          # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Arrow Substrait\n\n  - name: libparquet\n    script: install-libarrow.sh   # [unix]\n    script: install-libarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      run_exports:\n        - {{ pin_subpackage(\"libparquet\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - cmake\n        - ninja\n        # for strong run-exports\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      host:\n        - {{ pin_subpackage(\"libarrow\", max_pin=\"x\") }}\n        - openssl\n        - thrift-cpp\n      run:\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n      # run-constraints handled by libarrow, since we depend on it with exact=True\n\n    test:\n      commands:\n        # headers\n        - test -f $PREFIX/include/parquet/api/reader.h              # [unix]\n        - if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1    # [win]\n\n        # shared libraries\n        - test -f $PREFIX/lib/libparquet.so                         # [linux]\n        - test -f $PREFIX/lib/libparquet.dylib                      # [osx]\n        - if not exist %LIBRARY_BIN%\\parquet.dll exit 1             # [win]\n        - if not exist %LIBRARY_LIB%\\parquet.lib exit 1             # [win]\n\n        # absence of static libraries\n        - test ! -f $PREFIX/lib/libparquet.a                        # [unix]\n        - if exist %LIBRARY_LIB%\\parquet_static.lib exit 1          # [win]\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: C++ libraries for Apache Parquet\n\n  - name: pyarrow\n    script: build-pyarrow.sh   # [unix]\n    script: build-pyarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n      track_features: {{ \"[arrow-cuda]\" if cuda_enabled else \"\" }}\n      rpaths:\n        - lib/\n        - {{ SP_DIR }}/pyarrow\n      missing_dso_whitelist:\n        # not actually missing, but installed into SP_DIR, see tests\n        - '*/arrow_python.dll'                # [win]\n        - '*/arrow_python_flight.dll'         # [win]\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        # pyarrow does not require nvcc but it needs to link against libraries in libarrow=*=*cuda\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libarrow-all\", exact=True) }}\n        - clangdev {{ llvm_version }}\n        - llvmdev {{ llvm_version }}\n        - cython\n        - numpy\n        - python\n        - setuptools\n        - setuptools-scm\n      run:\n        # full set of libs because run-exports from libarrow-all aren't picked up\n        - {{ pin_subpackage(\"libarrow\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-acero\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-dataset\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-flight-sql\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-gandiva\", exact=True) }}\n        - {{ pin_subpackage(\"libarrow-substrait\", exact=True) }}\n        - {{ pin_subpackage(\"libparquet\", exact=True) }}\n        - {{ pin_compatible('numpy') }}\n        - python\n      run_constrained:\n        - apache-arrow-proc =*={{ build_ext }}\n\n    test:\n      files:\n        - test_read_parquet.py\n      imports:\n        - pyarrow\n        - pyarrow.dataset\n        - pyarrow.compute\n        - pyarrow.flight\n        - pyarrow.gandiva\n        - pyarrow.orc      # [unix]\n        - pyarrow.parquet\n        - pyarrow.fs\n        - pyarrow._s3fs\n        - pyarrow._hdfs\n        # We can only test importing cuda package but cannot run when a\n        # CUDA device is not available, for instance, when building from CI.\n        # On Windows, we cannot even do that due to `nvcuda.dll` not being found, see\n        # https://conda-forge.org/docs/maintainer/knowledge_base.html#nvcuda-dll-cannot-be-found-on-windows\n        # However, we check below for (at least) the presence of a correctly-compiled module\n        - pyarrow.cuda     # [cuda_compiler_version != \"None\" and not win]\n      commands:\n        # libraries that depend on python (and hence aren't in libarrow itself)\n        - test -f ${SP_DIR}/pyarrow/libarrow_python.so                            # [linux]\n        - test -f ${SP_DIR}/pyarrow/libarrow_python_flight.so                     # [linux]\n        - test -f ${SP_DIR}/pyarrow/libarrow_python.dylib                         # [osx]\n        - test -f ${SP_DIR}/pyarrow/libarrow_python_flight.dylib                  # [osx]\n        - if not exist %SP_DIR%\\pyarrow\\arrow_python.dll exit 1                   # [win]\n        - if not exist %SP_DIR%\\pyarrow\\arrow_python_flight.dll exit 1            # [win]\n\n        - test -f ${SP_DIR}/pyarrow/include/arrow/python/pyarrow.h                # [unix]\n        - if not exist %SP_DIR%\\pyarrow\\include\\arrow\\python\\pyarrow.h exit 1     # [win]\n\n        - test ! -f ${SP_DIR}/pyarrow/tests/test_array.py                         # [unix]\n        - if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1                    # [win]\n        # Need to remove dot from PY_VER; %MYVAR:x=y% replaces \"x\" in %MYVAR% with \"y\"\n        - if not exist %SP_DIR%/pyarrow/_cuda.cp%PY_VER:.=%-win_amd64.pyd exit 1  # [win and cuda_compiler_version != \"None\"]\n        - python test_read_parquet.py\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: Python libraries for Apache Arrow\n\n  - name: pyarrow-tests\n    script: build-pyarrow.sh   # [unix]\n    script: build-pyarrow.bat  # [win]\n    version: {{ version }}\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n      track_features: {{ \"[arrow-cuda]\" if cuda_enabled else \"\" }}\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        # pyarrow does not require nvcc but it needs to link against libraries in libarrow=*=*cuda\n        - {{ compiler(\"cuda\") }}                 # [cuda_compiler_version != \"None\"]\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage(\"libarrow-all\", exact=True) }}\n        - {{ pin_subpackage('pyarrow', exact=True) }}\n        - clangdev {{ llvm_version }}\n        - llvmdev {{ llvm_version }}\n        - cython\n        - numpy\n        - python\n        - setuptools\n        - setuptools-scm\n      run:\n        - {{ pin_subpackage('pyarrow', exact=True) }}\n        - python\n      run_constrained:\n        - apache-arrow-proc =*={{ build_ext }}\n\n    {% if not (aarch64 or ppc64le) or py == 311 %}\n    # only run the full test suite for one python version when in emulation\n    # (each run can take up to ~45min); there's essentially zero divergence\n    # in behaviour across python versions anyway\n    test:\n      requires:\n        # test_cpp_extension_in_python requires a compiler\n        - {{ compiler(\"cxx\") }}  # [linux]\n        # pytest-lazy-fixture fails with pytest 8\n        # See issue on Arrow repo: https://github.com/apache/arrow/issues/39849\n        - pytest <8\n        - pytest-lazy-fixture\n        - backports.zoneinfo     # [py<39]\n        - boto3\n        - cffi\n        - cloudpickle\n        - cython\n        - fastparquet\n        - fsspec\n        - hypothesis\n        - minio-server\n        # Pandas pin required due to: https://github.com/apache/arrow/issues/39732\n        - pandas <2.2\n        - s3fs >=2023\n        - scipy\n        # these are generally (far) behind on migrating abseil/grpc/protobuf,\n        # and using them as test dependencies blocks the migrator unnecessarily\n        # - pytorch\n        # - tensorflow\n        # we're not building java bindings\n        # - jpype1\n        # doesn't get picked up correctly\n        # - libhdfs3\n        # causes segfaults\n        # - sparse\n      source_files:\n        - testing/data\n      commands:\n        - cd ${SP_DIR}                                      # [unix]\n        - cd %SP_DIR%                                       # [win]\n        - export ARROW_TEST_DATA=\"${SRC_DIR}/testing/data\"  # [unix]\n        - set \"ARROW_TEST_DATA=%SRC_DIR%\\testing\\data\"      # [win]\n\n        {% set tests_to_skip = \"_not_a_real_test\" %}\n        # we do not have GPUs in CI --> cannot test cuda\n        {% set tests_to_skip = tests_to_skip + \" or test_cuda\" + \" or test_dlpack_cuda_not_supported\"%}\n        # skip tests that raise SIGINT and crash the test suite\n        {% set tests_to_skip = tests_to_skip + \" or (test_csv and test_cancellation)\" %}  # [linux]\n        {% set tests_to_skip = tests_to_skip + \" or (test_flight and test_interrupt)\" %}  # [linux]\n        # skip tests that make invalid(-for-conda) assumptions about the compilers setup\n        {% set tests_to_skip = tests_to_skip + \" or test_cython_api\" %}                   # [unix]\n        {% set tests_to_skip = tests_to_skip + \" or test_visit_strings\" %}                # [unix]\n        # skip tests that cannot succeed in emulation\n        {% set tests_to_skip = tests_to_skip + \" or test_debug_memory_pool_disabled\" %}   # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or test_env_var_io_thread_count\" %}      # [aarch64 or ppc64le]\n        # vvvvvvv TESTS THAT SHOULDN'T HAVE TO BE SKIPPED vvvvvvv\n        # problems with minio\n        {% set tests_to_skip = tests_to_skip + \" or (test_delete_dir and S3FileSystem)\" %}\n        {% set tests_to_skip = tests_to_skip + \" or (test_get_file_info and S3FileSystem)\" %}\n        {% set tests_to_skip = tests_to_skip + \" or (test_move_directory and S3FileSystem)\" %}\n        # XMinioInvalidObjectName on win: \"Object name contains unsupported characters\"\n        {% set tests_to_skip = tests_to_skip + \" or test_write_to_dataset_with_partitions_s3fs\" %}  # [win]\n        # flaky test that fails regularly on aarch\n        {% set tests_to_skip = tests_to_skip + \" or test_feather_format[serial]\" %}                 # [aarch64]\n        # gandiva tests are segfaulting on ppc\n        {% set tests_to_skip = tests_to_skip + \" or test_gandiva\" %}                                # [ppc64le]\n        # test failures on ppc (both failing with: Float value was truncated converting to int32)\n        {% set tests_to_skip = tests_to_skip + \" or test_safe_cast_from_float_with_nans_to_int\" %}  # [ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or test_float_with_null_as_integer\" %}             # [ppc64le]\n        # ^^^^^^^ TESTS THAT SHOULDN'T HAVE TO BE SKIPPED ^^^^^^^\n        - pytest pyarrow/ -rfEs -k \"not ({{ tests_to_skip }})\"\n    {% endif %}\n\n    about:\n      home: http://github.com/apache/arrow\n      license: Apache-2.0\n      license_file:\n        - LICENSE.txt\n      summary: Python test files for Apache Arrow\n\nabout:\n  home: http://github.com/apache/arrow\n  license: Apache-2.0\n  license_file:\n    - LICENSE.txt\n  summary: C++ and Python libraries for Apache Arrow\n\nextra:\n  recipe-maintainers:\n    - wesm\n    - xhochy\n    - leifwalsh\n    - jreback\n    - cpcloud\n    - pcmoritz\n    - robertnishihara\n    - siddharthteotia\n    - kou\n    - kszucs\n    - pitrou\n    - pearu\n    - nealrichardson\n    - jakirkham\n    - h-vetinari\n    - raulcd\n  feedstock-name: arrow-cpp\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "autoconf",
   "aws-crt-cpp",
   "aws-sdk-cpp",
   "brotli",
   "bzip2",
   "c_compiler_stub",
   "clangdev",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "gflags",
   "glog",
   "libabseil",
   "libarrow",
   "libarrow-acero",
   "libarrow-all",
   "libarrow-dataset",
   "libarrow-flight",
   "libarrow-flight-sql",
   "libarrow-gandiva",
   "libarrow-substrait",
   "libboost-headers",
   "libcrc32c",
   "libcurl",
   "libgoogle-cloud-devel",
   "libgoogle-cloud-storage-devel",
   "libgrpc",
   "libparquet",
   "libprotobuf",
   "libutf8proc",
   "llvm",
   "llvmdev",
   "lz4-c",
   "make",
   "ninja",
   "nlohmann_json",
   "numpy",
   "openssl",
   "orc",
   "pyarrow",
   "python",
   "rapidjson",
   "re2",
   "setuptools",
   "setuptools-scm",
   "snappy",
   "thrift-cpp",
   "ucx",
   "xsimd",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "c_compiler_stub",
    "clangdev",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libcrc32c",
    "libcurl",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cxx_compiler_stub",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda >=11.2",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev 16",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libcrc32c",
    "libcurl",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvm 16",
    "llvmdev 16",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "ucx",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cxx_compiler_stub",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas <2.2",
    "pytest <8",
    "pytest-lazy-fixture",
    "s3fs >=2023",
    "scipy"
   ]
  }
 },
 "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download",
 "version": "15.0.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/arrow-cpp.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "http://github.com/apache/arrow",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE.txt",
    "LICENSE.txt"
   ],
   "summary": "C++ and Python libraries for Apache Arrow"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "arrow-cpp",
   "recipe-maintainers": [
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd",
    "wesm",
    "xhochy",
    "leifwalsh",
    "jreback",
    "cpcloud",
    "pcmoritz",
    "robertnishihara",
    "siddharthteotia",
    "kou",
    "kszucs",
    "pitrou",
    "pearu",
    "nealrichardson",
    "jakirkham",
    "h-vetinari",
    "raulcd"
   ]
  },
  "outputs": [
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cuda"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "cuda_compiler_stub",
      "gflags",
      "glog"
     ],
     "missing_dso_whitelist": [
      "*/nvcuda.dll"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "openssl",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "__cuda >=11.2",
      "libcrc32c",
      "libcurl"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_cuda.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_cuda.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if exist %LIBRARY_LIB%\\parquet.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\acero\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\dataset\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\types.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\sql\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "openssl",
      "re2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1",
      "if not exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if not exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_LIB%\\gandiva_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libabseil",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\engine\\substrait\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cuda"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1",
      "if not exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if not exist %LIBRARY_LIB%\\parquet.lib exit 1",
      "if exist %LIBRARY_LIB%\\parquet_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "missing_dso_whitelist": [
      "*/arrow_python.dll",
      "*/arrow_python_flight.dll"
     ],
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%\\pyarrow\\arrow_python.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\arrow_python_flight.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\include\\arrow\\python\\pyarrow.h exit 1",
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1",
      "if not exist %SP_DIR%/pyarrow/_cuda.cp%PY_VER:.=%-win_amd64.pyd exit 1",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": [
      "cuda_compiler_stub"
     ],
     "string": "py39h1234567_0_cuda"
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cuda"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "cd %SP_DIR%",
      "set \"ARROW_TEST_DATA=%SRC_DIR%\\testing\\data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "A meta-package to select Arrow build variant"
    },
    "build": {
     "number": "0",
     "string": "cpu"
    },
    "name": "apache-arrow-proc",
    "requirements": {
     "run_constrained": [
      "arrow-cpp-proc <0.0a0"
     ]
    },
    "test": {
     "commands": [
      "exit 0"
     ]
    },
    "version": "5.0.0"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow"
    },
    "build": {
     "run_exports": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-all",
    "requirements": {
     "build": [
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "echo \"tested in other outputs\""
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow core"
    },
    "build": {
     "ignore_run_exports": [
      "libbrotlicommon"
     ],
     "ignore_run_exports_from": [
      "gflags",
      "glog"
     ],
     "missing_dso_whitelist": [
      "*/nvcuda.dll"
     ],
     "run_exports": [
      "libarrow"
     ],
     "string": "h1234567_0_cpu",
     "track_features": null
    },
    "name": "libarrow",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "aws-crt-cpp",
      "aws-sdk-cpp",
      "brotli",
      "bzip2",
      "gflags",
      "glog",
      "libabseil",
      "libgoogle-cloud-devel",
      "libgoogle-cloud-storage-devel",
      "libutf8proc",
      "lz4-c",
      "openssl",
      "orc",
      "re2",
      "snappy",
      "zlib",
      "zstd",
      "libcrc32c",
      "libcurl"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu",
      "arrow-cpp <0.0a0",
      "parquet-cpp <0.0a0"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_cuda.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_cuda_static.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if exist %LIBRARY_LIB%\\parquet.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Acero"
    },
    "build": {
     "run_exports": [
      "libarrow-acero"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-acero",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\acero\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_acero.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_acero.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_acero_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Dataset"
    },
    "build": {
     "run_exports": [
      "libarrow-dataset"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-dataset",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libparquet"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\dataset\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_dataset.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_dataset.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_dataset_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight"
    },
    "build": {
     "run_exports": [
      "libarrow-flight"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libgrpc",
      "libprotobuf"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\types.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Flight SQL"
    },
    "build": {
     "run_exports": [
      "libarrow-flight-sql"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-flight-sql",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libarrow-flight",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-flight"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\flight\\sql\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_flight_sql.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_flight_sql.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_flight_sql_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Gandiva"
    },
    "build": {
     "run_exports": [
      "libarrow-gandiva"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-gandiva",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "libabseil",
      "libutf8proc",
      "openssl",
      "re2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\gandiva\\engine.h exit 1",
      "if not exist %LIBRARY_BIN%\\gandiva.dll exit 1",
      "if not exist %LIBRARY_LIB%\\gandiva.lib exit 1",
      "if exist %LIBRARY_LIB%\\gandiva_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Arrow Substrait"
    },
    "build": {
     "run_exports": [
      "libarrow-substrait"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libarrow-substrait",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libabseil",
      "libprotobuf"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\arrow\\engine\\substrait\\api.h exit 1",
      "if not exist %LIBRARY_BIN%\\arrow_substrait.dll exit 1",
      "if not exist %LIBRARY_LIB%\\arrow_substrait.lib exit 1",
      "if exist %LIBRARY_LIB%\\arrow_substrait_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "C++ libraries for Apache Parquet"
    },
    "build": {
     "run_exports": [
      "libparquet"
     ],
     "string": "h1234567_0_cpu"
    },
    "name": "libparquet",
    "requirements": {
     "build": [
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libarrow",
      "openssl",
      "thrift-cpp"
     ],
     "run": [
      "libarrow"
     ]
    },
    "script": "install-libarrow.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\parquet\\api\\reader.h exit 1",
      "if not exist %LIBRARY_BIN%\\parquet.dll exit 1",
      "if not exist %LIBRARY_LIB%\\parquet.lib exit 1",
      "if exist %LIBRARY_LIB%\\parquet_static.lib exit 1"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python libraries for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "missing_dso_whitelist": [
      "*/arrow_python.dll",
      "*/arrow_python_flight.dll"
     ],
     "rpaths": [
      "lib/",
      "SP_DIR/pyarrow"
     ],
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "libarrow",
      "libarrow-acero",
      "libarrow-dataset",
      "libarrow-flight",
      "libarrow-flight-sql",
      "libarrow-gandiva",
      "libarrow-substrait",
      "libparquet",
      "numpy",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "if not exist %SP_DIR%\\pyarrow\\arrow_python.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\arrow_python_flight.dll exit 1",
      "if not exist %SP_DIR%\\pyarrow\\include\\arrow\\python\\pyarrow.h exit 1",
      "if exist %SP_DIR%/pyarrow/tests/test_array.py exit 1",
      "python test_read_parquet.py"
     ],
     "files": [
      "test_read_parquet.py"
     ],
     "imports": [
      "pyarrow",
      "pyarrow.dataset",
      "pyarrow.compute",
      "pyarrow.flight",
      "pyarrow.gandiva",
      "pyarrow.parquet",
      "pyarrow.fs",
      "pyarrow._s3fs",
      "pyarrow._hdfs"
     ]
    },
    "version": "15.0.2"
   },
   {
    "about": {
     "home": "http://github.com/apache/arrow",
     "license": "Apache-2.0",
     "license_file": [
      "LICENSE.txt"
     ],
     "summary": "Python test files for Apache Arrow"
    },
    "build": {
     "ignore_run_exports_from": null,
     "string": "py39h1234567_0_cpu",
     "track_features": null
    },
    "name": "pyarrow-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libarrow-all",
      "pyarrow",
      "clangdev 16",
      "llvmdev 16",
      "cython",
      "numpy",
      "python",
      "setuptools",
      "setuptools-scm"
     ],
     "run": [
      "pyarrow",
      "python"
     ],
     "run_constrained": [
      "apache-arrow-proc =*=cpu"
     ]
    },
    "script": "build-pyarrow.bat",
    "test": {
     "commands": [
      "cd %SP_DIR%",
      "set \"ARROW_TEST_DATA=%SRC_DIR%\\testing\\data\"",
      "pytest pyarrow/ -rfEs -k \"not (_not_a_real_test or test_cuda or test_dlpack_cuda_not_supported or (test_csv and test_cancellation) or (test_flight and test_interrupt) or test_cython_api or test_visit_strings or test_debug_memory_pool_disabled or test_env_var_io_thread_count or (test_delete_dir and S3FileSystem) or (test_get_file_info and S3FileSystem) or (test_move_directory and S3FileSystem) or test_write_to_dataset_with_partitions_s3fs or test_feather_format[serial] or test_gandiva or test_safe_cast_from_float_with_nans_to_int or test_float_with_null_as_integer)\""
     ],
     "requires": [
      "pytest <8",
      "pytest-lazy-fixture",
      "boto3",
      "cffi",
      "cloudpickle",
      "cython",
      "fastparquet",
      "fsspec",
      "hypothesis",
      "minio-server",
      "pandas <2.2",
      "s3fs >=2023",
      "scipy"
     ],
     "source_files": [
      "testing/data"
     ]
    },
    "version": "15.0.2"
   }
  ],
  "package": {
   "name": "apache-arrow",
   "version": "15.0.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd",
    "clangdev 16",
    "llvmdev 16",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "gflags",
    "glog",
    "libabseil",
    "libboost-headers",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libutf8proc",
    "lz4-c",
    "nlohmann_json",
    "orc",
    "rapidjson",
    "re2",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   },
   {
    "fn": "apache-arrow-15.0.2.tar.gz",
    "patches": [
     "patches/0001-fixture-teardown-should-not-fail-test.patch",
     "patches/0002-Revert-GH-37803-CI-Dev-Python-Release-and-merge-scri.patch",
     "patches/0003-GH-40181-C-Support-glog-0.7-build-40230.patch"
    ],
    "sha256": "abbf97176db6a9e8186fe005e93320dac27c64562755c77de50a882eb6179ac6",
    "url": "https://www.apache.org/dyn/closer.lua/arrow/arrow-15.0.2/apache-arrow-15.0.2.tar.gz?action=download"
   },
   {
    "folder": "testing",
    "git_rev": "ad82a736c170e97b7c8c035ebd8a801c17eec170",
    "git_url": "https://github.com/apache/arrow-testing.git"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "__cuda",
    "aws-crt-cpp",
    "aws-sdk-cpp",
    "brotli",
    "bzip2",
    "clangdev",
    "cython",
    "gflags",
    "glog",
    "libabseil",
    "libarrow",
    "libarrow-acero",
    "libarrow-all",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libboost-headers",
    "libcrc32c",
    "libcurl",
    "libgoogle-cloud-devel",
    "libgoogle-cloud-storage-devel",
    "libgrpc",
    "libparquet",
    "libprotobuf",
    "libutf8proc",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "orc",
    "pyarrow",
    "python",
    "rapidjson",
    "re2",
    "setuptools",
    "setuptools-scm",
    "snappy",
    "thrift-cpp",
    "xsimd",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarrow",
    "libarrow-acero",
    "libarrow-dataset",
    "libarrow-flight",
    "libarrow-flight-sql",
    "libarrow-gandiva",
    "libarrow-substrait",
    "libparquet",
    "numpy",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "boto3",
    "cffi",
    "cloudpickle",
    "cython",
    "fastparquet",
    "fsspec",
    "hypothesis",
    "minio-server",
    "pandas",
    "pytest",
    "pytest-lazy-fixture",
    "s3fs",
    "scipy"
   ]
  }
 }
}