{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "cudnn",
 "linux_64_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.9.1.23"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17"
   ],
   "host": [
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done"
   ],
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "c_compiler_stub",
    "c_compiler_stub"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libzlib",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.9.1.23"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17"
   ],
   "host": [
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*"
   ],
   "run_constrained": [
    "__glibc >=2.28",
    "arm-variant * sbsa",
    "__glibc >=2.28",
    "arm-variant * sbsa"
   ]
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done"
   ],
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "c_compiler_stub",
    "c_compiler_stub"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-aarch64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libzlib",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.9.1.23"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17"
   ],
   "host": [
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*"
   ],
   "run_constrained": [
    "__glibc >=2.17",
    "__glibc >=2.17"
   ]
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done"
   ],
   "files": [
    "test_load_elf.c",
    "test_load_elf.c"
   ],
   "requires": [
    "c_compiler_stub",
    "c_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-ppc64le"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libzlib",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit",
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir -p $PREFIX/include",
    "cp include/cudnn*.h $PREFIX/include/",
    "mkdir -p $PREFIX/lib",
    "mv lib/libcudnn*.so* $PREFIX/lib/",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.9.1.23"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "arm-variant * sbsa",
    "sysroot_linux-aarch64 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-ppc64le 2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "patchelf >=0.12",
    "libzlib",
    "cuda-version 11.0",
    "libzlib-wapi",
    "cuda-version 11.0",
    "libzlib-wapi"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*"
   ],
   "run_constrained": null
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "test -f $PREFIX/include/cudnn.h",
    "test -f $PREFIX/include/cudnn_adv_train.h",
    "test -f $PREFIX/lib/libcudnn.so",
    "test -f $PREFIX/lib/libcudnn_adv_train.so",
    "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
    "for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ],
   "files": null,
   "requires": null
  }
 },
 "name": "cudnn",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cudnn"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cudnn.json"
 },
 "raw_meta_yaml": "{% set version = \"8.9.1.23\" %}\n{% set cuda_major = (cuda_compiler_version|default(\"12.0.0\")).split(\".\")[0] %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-ppc64le\" %}  # [ppc64le]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: cudnn\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}\n  sha256: a6d9887267e28590c9db95ce65cbe96a668df0352338b7d337e0532ded33485c  # [linux64 and cuda_major == \"11\"]\n  sha256: 35163c5c542be0c511738b27e25235193cbeedc5e0e006e44b1cdeaf1922e83e  # [linux64 and cuda_major == \"12\"]\n  sha256: 0a61fae873a046a0a86b2e6d8cdb039da155bc2fcfa215acef6fc61ce618cb2f  # [aarch64 and cuda_major == \"11\"]\n  sha256: 823e0e2e19849cf645500d1239b8bd7e7aa1f21d5c98309eada363f943e2f486  # [aarch64 and cuda_major == \"12\"]\n  sha256: aaa5582ba9951c3645b103abe08a0b8b046da2b277b2c1d696216f3392225394  # [ppc64le and cuda_major == \"11\"]\n  sha256: 8dc6e639688979f5cc424560f06e41aed26199396c905db22151dbf81314f559  # [ppc64le and cuda_major == \"12\"]\n  sha256: 5a1522fd8351f2c00f0afc12bb6970458d1ba171f11c9cb483fb7f281e7dea1a  # [win and cuda_major == \"11\"]\n  sha256: 474c75d809e15d023de83e96715dce28ccfba19cdf43c47377ae80384ff96c96  # [win and cuda_major == \"12\"]\n\nbuild:\n  number: 0\n  skip: True  # [osx]\n  skip: True  # [cuda_compiler_version == \"11.2\"]\n  # Disable binary relocation to workaround patchelf issue\n  # xref: https://github.com/NixOS/patchelf/issues/492\n  binary_relocation: false\n  script:\n    - mkdir -p $PREFIX/include               # [linux]\n    - cp include/cudnn*.h $PREFIX/include/   # [linux]\n    - mkdir -p $PREFIX/lib                   # [linux]\n    - mv lib/libcudnn*.so* $PREFIX/lib/      # [linux]\n\n    - mkdir %LIBRARY_INC%                                   # [win]\n    - copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\     # [win]\n    - mkdir %LIBRARY_LIB%                                   # [win]\n    - copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\  # [win]\n    - mkdir %LIBRARY_BIN%                                   # [win]\n    - copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\       # [win]\n  ignore_run_exports:\n    - cudatoolkit\n  run_exports:\n    - {{ pin_subpackage('cudnn') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    - sysroot_{{ target_platform }} 2.17  # [linux]\n  host:\n    - cuda-version {{ cuda_major }}.0\n    - patchelf >=0.12  # [linux]\n    # to suppress \".so not found\" errors\n    - libzlib       # [linux]\n    - libzlib-wapi  # [win64]\n  run:\n    - {{ pin_compatible(\"cuda-version\", max_pin=\"x\") }}\n    {% if cuda_major == \"11\" %}\n    - cudatoolkit 11.*\n    {% else %}\n    - cuda-nvrtc\n    - libcublas\n    {% endif %}\n  run_constrained:\n    - __glibc >=2.17                        # [linux and not aarch64]\n    - __glibc >=2.28                        # [linux and aarch64]\n    - arm-variant * {{ arm_variant_type }}  # [aarch64]\n\ntest:\n  requires:\n    - {{ compiler('c') }}  # [linux]\n  files:\n    - test_load_elf.c      # [linux]\n  commands:\n    - if not exist %LIBRARY_INC%/cudnn.h exit 1                       # [win]\n    - if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1             # [win]\n    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1                     # [win]\n    - if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1           # [win]\n    - if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1                 # [win]\n    - if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1       # [win]\n    - test -f $PREFIX/include/cudnn.h                                 # [linux]\n    - test -f $PREFIX/include/cudnn_adv_train.h                       # [linux]\n    - test -f $PREFIX/lib/libcudnn.so                                 # [linux]\n    - test -f $PREFIX/lib/libcudnn_adv_train.so                       # [linux]\n    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf   # [linux]\n    - for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done  # [linux]\n\nabout:\n  home: https://developer.nvidia.com/cudnn\n  license: LicenseRef-cuDNN-Software-License-Agreement\n  license_file: LICENSE\n  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  summary: \"NVIDIA's cuDNN deep neural network acceleration library\"\n  description: |\n    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\n    primitives for deep neural networks. It provides highly tuned\n    implementations of routines arising frequently in DNN applications.\n\n    License Agreements:- The packages are governed by the NVIDIA cuDNN\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuDNN EULA -\n    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  doc_url: https://docs.nvidia.com/deeplearning/cudnn/\n  dev_url: https://developer.nvidia.com/rdp/cudnn-download\n\nextra:\n  recipe-maintainers:\n    - adibbley\n    - bdice\n    - jakirkham\n    - vyasr\n",
 "req": {
  "__set__": true,
  "elements": [
   "arm-variant",
   "c_compiler_stub",
   "cuda-version",
   "cuda_compiler_stub",
   "cudatoolkit",
   "cxx_compiler_stub",
   "libzlib",
   "libzlib-wapi",
   "patchelf",
   "sysroot_linux-64",
   "sysroot_linux-aarch64",
   "sysroot_linux-ppc64le"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libzlib",
    "libzlib-wapi",
    "patchelf"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cudatoolkit",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "arm-variant * sbsa",
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 2.17",
    "sysroot_linux-aarch64 2.17",
    "sysroot_linux-ppc64le 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version 11.0",
    "libzlib",
    "libzlib-wapi",
    "patchelf >=0.12"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit 11.*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip",
 "version": "8.9.1.23",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cudnn.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
   "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
   "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
   "home": "https://developer.nvidia.com/cudnn",
   "license": "LicenseRef-cuDNN-Software-License-Agreement",
   "license_file": "LICENSE",
   "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
   "summary": "NVIDIA's cuDNN deep neural network acceleration library"
  },
  "build": {
   "binary_relocation": false,
   "ignore_run_exports": [
    "cudatoolkit",
    "cudatoolkit"
   ],
   "number": "0",
   "run_exports": [
    "cudnn",
    "cudnn"
   ],
   "script": [
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\",
    "mkdir %LIBRARY_INC%",
    "copy %SRC_DIR%\\\\include\\\\cudnn*.h %LIBRARY_INC%\\\\",
    "mkdir %LIBRARY_LIB%",
    "copy %SRC_DIR%\\\\lib\\\\x64\\\\cudnn*.lib %LIBRARY_LIB%\\\\",
    "mkdir %LIBRARY_BIN%",
    "copy %SRC_DIR%\\\\bin\\\\cudnn*.dll %LIBRARY_BIN%\\\\"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr",
    "adibbley",
    "bdice",
    "jakirkham",
    "vyasr"
   ]
  },
  "package": {
   "name": "cudnn",
   "version": "8.9.1.23"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "cuda-version 11.0",
    "libzlib-wapi",
    "cuda-version 11.0",
    "libzlib-wapi"
   ],
   "run": [
    "cuda-version",
    "cudatoolkit 11.*",
    "cuda-version",
    "cudatoolkit 11.*"
   ],
   "run_constrained": null
  },
  "source": {
   "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-8.9.1.23_cuda11-archive.zip"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1",
    "if not exist %LIBRARY_INC%/cudnn.h exit 1",
    "if not exist %LIBRARY_INC%/cudnn_adv_train.h exit 1",
    "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
    "if not exist %LIBRARY_LIB%/cudnn_adv_train.lib exit 1",
    "if not exist %LIBRARY_BIN%/cudnn64_8.dll exit 1",
    "if not exist %LIBRARY_BIN%/cudnn_adv_train64_8.dll exit 1"
   ],
   "files": null,
   "requires": null
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libzlib-wapi"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudatoolkit"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}