{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "store_build_artifacts": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": 2
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "pytensor-suite",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "gxx",
    "logical-unification",
    "minikanren",
    "mkl-service",
    "numpy",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli",
      "ninja"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "ninja",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "gxx",
    "logical-unification",
    "minikanren",
    "numpy",
    "openblas",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "ninja"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli",
      "ninja"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "gxx",
      "openblas",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "name": "pytensor-suite",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "logical-unification",
    "minikanren",
    "mkl-service",
    "numpy",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "accelerate",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "accelerate",
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "logical-unification",
    "minikanren",
    "numpy",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytensor",
   "pytensor-base"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pytensor-suite.json"
 },
 "raw_meta_yaml": "{% set version = \"2.20.0\" %}\n\npackage:\n  # https://github.com/conda/conda-build/issues/3933\n  name: pytensor-suite\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pytensor/pytensor-{{ version }}.tar.gz\n  sha256: d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2\n  patches:\n\nbuild:\n  number: 0\n\noutputs:\n  - name: pytensor-base\n    build:\n      # NOTE: Keep this line synchronized with the identical one below.\n      skip: true  # [py<310]\n      script:\n        - python -m pip install . --no-deps -vv\n      entry_points:\n        - pytensor-cache = bin.pytensor_cache:main\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - python                                 # [build_platform != target_platform]\n        - setuptools >=48.0.0                    # [build_platform != target_platform]\n        - cython                                 # [build_platform != target_platform]\n        # Allow numpy pinnings to be managed by conda-forge global dependencies\n        - numpy                                  # [build_platform != target_platform]\n        - versioneer ==0.28                      # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - tomli                                  # [build_platform != target_platform]\n        - ninja                                  # [aarch64 and (python_impl == 'pypy')]\n      host:\n        - python\n        - setuptools >=48.0.0\n        - cython\n        # Allow numpy pinnings to be managed by conda-forge global dependencies\n        - numpy\n        - versioneer ==0.28\n        - pip\n        - tomli\n        - ninja                                  # [aarch64 and (python_impl == 'pypy')]\n      run:\n        - python\n        - setuptools >=48.0.0\n        - scipy >=0.14\n        - filelock\n        - etuples\n        - logical-unification\n        - minikanren\n        - cons\n        - typing_extensions\n        - {{ pin_compatible(\"numpy\") }}\n\n    test:\n      imports:\n        - pytensor\n      commands:\n        - pytensor-cache help\n        - pip check\n        - python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"\n        - python check-for-warnings.py allowed-warnings-base.txt\n      requires:\n        - pip\n      files:\n        - check-for-warnings.py\n        - allowed-warnings-base.txt\n\n  - name: pytensor\n    build:\n      # NOTE: Keep this line synchronized with the identical one above.\n      skip: true  # [py<310]\n      script:\n        - echo \"Nothing to build here, just add dependencies.\"\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('pytensor-base', exact=True) }}\n        - {{ compiler('c') }}  # [not win]\n        - {{ compiler('cxx') }}  # [not win]\n        - gxx  # [linux]\n        - {{ compiler('m2w64_c') }}  # [win]\n        - {{ compiler('m2w64_cxx') }}  # [win]\n\n        - m2w64-toolchain  # [win]\n        # The libpython conda-forge package seems to be a wrapper package\n        # which configures m2w64-toolchain for Python.\n        # <https://github.com/conda-forge/libpython-feedstock/blob/main/recipe/bld.bat>\n        - libpython >=2.2  # [win]\n\n        # mkl-service is only available for linux-64, win-64, and osx-64.\n        # Use accelerate for osx-arm64.\n        # For everything else, use openblas.\n        - mkl-service  # [linux64 or win64 or (osx and not arm64)]\n        - accelerate  # [osx and arm64]\n        - openblas  # [not (linux64 or win64 or osx)]\n        # For some reason we also need the \"blas\" package. Otherwise we get reports\n        # of \"cblas.h: No such file or directory\" at import time.\n        # Ref: <https://github.com/conda-forge/aesara-feedstock/issues/80>\n        - blas\n    test:\n      imports:\n        - pytensor\n        - pytensor.configdefaults\n      commands:\n        - pytensor-cache help\n        - pip check\n        - python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"\n        - python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"\n        - python check-for-warnings.py allowed-warnings-main.txt\n      requires:\n        - pip\n      files:\n        - check-for-warnings.py\n        - allowed-warnings-main.txt\n\nabout:\n  home: https://github.com/pymc-devs/pytensor\n  license: BSD-3-Clause\n  summary: An optimizing compiler for evaluating mathematical expressions.\n  license_file: LICENSE.txt\n  dev_url: https://github.com/pymc-devs/pytensor/\n  doc_url: https://pytensor.readthedocs.io/en/latest/\n\nextra:\n  recipe-maintainers:\n    - aseyboldt\n    - maresb\n    - michaelosthege\n    - twiecki\n",
 "req": {
  "__set__": true,
  "elements": [
   "accelerate",
   "blas",
   "c_compiler_stub",
   "cons",
   "cxx_compiler_stub",
   "cython",
   "etuples",
   "filelock",
   "gxx",
   "libpython",
   "logical-unification",
   "m2w64-toolchain",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "minikanren",
   "mkl-service",
   "ninja",
   "numpy",
   "openblas",
   "pip",
   "pytensor-base",
   "python",
   "scipy",
   "setuptools",
   "tomli",
   "typing_extensions",
   "versioneer"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "ninja",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "accelerate",
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "gxx",
    "libpython",
    "logical-unification",
    "m2w64-toolchain",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "minikanren",
    "mkl-service",
    "numpy",
    "openblas",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "ninja",
    "numpy",
    "pip",
    "python",
    "setuptools >=48.0.0",
    "tomli",
    "versioneer ==0.28"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "accelerate",
    "blas",
    "c_compiler_stub",
    "cons",
    "cxx_compiler_stub",
    "etuples",
    "filelock",
    "gxx",
    "libpython >=2.2",
    "logical-unification",
    "m2w64-toolchain",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "minikanren",
    "mkl-service",
    "numpy",
    "openblas",
    "pytensor-base",
    "python",
    "scipy >=0.14",
    "setuptools >=48.0.0",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz",
 "version": "2.20.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pytensor-suite.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/pymc-devs/pytensor/",
   "doc_url": "https://pytensor.readthedocs.io/en/latest/",
   "home": "https://github.com/pymc-devs/pytensor",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "An optimizing compiler for evaluating mathematical expressions."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "aseyboldt",
    "maresb",
    "michaelosthege",
    "twiecki"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "pytensor-cache = bin.pytensor_cache:main"
     ],
     "script": [
      "python -m pip install . --no-deps -vv"
     ]
    },
    "name": "pytensor-base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python",
      "setuptools >=48.0.0",
      "cython",
      "numpy",
      "versioneer ==0.28",
      "pip",
      "tomli"
     ],
     "run": [
      "python",
      "setuptools >=48.0.0",
      "scipy >=0.14",
      "filelock",
      "etuples",
      "logical-unification",
      "minikanren",
      "cons",
      "typing_extensions",
      "numpy"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python check-for-warnings.py allowed-warnings-base.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-base.txt"
     ],
     "imports": [
      "pytensor"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "script": [
      "echo \"Nothing to build here, just add dependencies.\""
     ]
    },
    "name": "pytensor",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python",
      "pytensor-base",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64-toolchain",
      "libpython >=2.2",
      "mkl-service",
      "blas"
     ]
    },
    "test": {
     "commands": [
      "pytensor-cache help",
      "pip check",
      "python -c \"import pytensor; print(pytensor.config.blas__ldflags); print(pytensor.config)\"",
      "python -c \"import pytensor; assert pytensor.config.blas__ldflags != '', 'Blas flags are empty'\"",
      "python check-for-warnings.py allowed-warnings-main.txt"
     ],
     "files": [
      "check-for-warnings.py",
      "allowed-warnings-main.txt"
     ],
     "imports": [
      "pytensor",
      "pytensor.configdefaults"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "pytensor-suite",
   "version": "2.20.0"
  },
  "source": {
   "patches": null,
   "sha256": "d88a5c84d04366d5224b5705a9d0daab7d9b0b84ed43c76fc9aae7760fe3eac2",
   "url": "https://pypi.io/packages/source/p/pytensor/pytensor-2.20.0.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tomli",
    "versioneer"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "blas",
    "cons",
    "etuples",
    "filelock",
    "libpython",
    "logical-unification",
    "m2w64-toolchain",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "minikanren",
    "mkl-service",
    "numpy",
    "pytensor-base",
    "python",
    "scipy",
    "setuptools",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}