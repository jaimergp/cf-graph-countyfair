{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true,
   "inspection": "update-grayskull"
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "lm-format-enforcer",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/noamgat/lm-format-enforcer",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Enforce the output format (JSON Schema, Regex etc) of a language model"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "rxm7706"
   ]
  },
  "package": {
   "name": "lm-format-enforcer",
   "version": "0.10.3"
  },
  "requirements": {
   "host": [
    "python >=3.8,<4.0",
    "poetry-core >=1.1.0",
    "pip"
   ],
   "run": [
    "python >=3.8,<4.0",
    "pydantic >=1.10.8",
    "interegular >=0.3.2",
    "packaging",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "673ebee1bc9efa43418d178a62be912ffdd7c728665b9a8a01bdf60826b4c563",
   "url": "https://pypi.io/packages/source/l/lm-format-enforcer/lm_format_enforcer-0.10.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "lmformatenforcer"
   ],
   "requires": [
    "pip",
    "numpy >=1.21.0"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "interegular",
    "packaging",
    "pydantic",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/noamgat/lm-format-enforcer",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Enforce the output format (JSON Schema, Regex etc) of a language model"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "rxm7706"
   ]
  },
  "package": {
   "name": "lm-format-enforcer",
   "version": "0.10.3"
  },
  "requirements": {
   "host": [
    "python >=3.8,<4.0",
    "poetry-core >=1.1.0",
    "pip"
   ],
   "run": [
    "python >=3.8,<4.0",
    "pydantic >=1.10.8",
    "interegular >=0.3.2",
    "packaging",
    "pyyaml"
   ]
  },
  "source": {
   "sha256": "673ebee1bc9efa43418d178a62be912ffdd7c728665b9a8a01bdf60826b4c563",
   "url": "https://pypi.io/packages/source/l/lm-format-enforcer/lm_format_enforcer-0.10.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "lmformatenforcer"
   ],
   "requires": [
    "pip",
    "numpy >=1.21.0"
   ]
  }
 },
 "name": "lm-format-enforcer",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lm-format-enforcer"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/lm-format-enforcer.json"
 },
 "raw_meta_yaml": "{% set name = \"lm-format-enforcer\" %}\n{% set version = \"0.10.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/lm_format_enforcer-{{ version }}.tar.gz\n  sha256: 673ebee1bc9efa43418d178a62be912ffdd7c728665b9a8a01bdf60826b4c563\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 0\n\nrequirements:\n  host:\n    - python >=3.8,<4.0\n    - poetry-core >=1.1.0\n    - pip\n  run:\n    - python >=3.8,<4.0\n    - pydantic >=1.10.8\n    - interegular >=0.3.2\n    - packaging\n    - pyyaml\n\ntest:\n  imports:\n    - lmformatenforcer\n  commands:\n    - pip check\n  requires:\n    - pip\n    - numpy >=1.21.0\n\nabout:\n  home: https://github.com/noamgat/lm-format-enforcer\n  summary: Enforce the output format (JSON Schema, Regex etc) of a language model\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - rxm7706\n",
 "req": {
  "__set__": true,
  "elements": [
   "interegular",
   "packaging",
   "pip",
   "poetry-core",
   "pydantic",
   "python",
   "pyyaml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "interegular",
    "packaging",
    "pydantic",
    "python",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry-core >=1.1.0",
    "python >=3.8,<4.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "interegular >=0.3.2",
    "packaging",
    "pydantic >=1.10.8",
    "python >=3.8,<4.0",
    "pyyaml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy >=1.21.0",
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/l/lm-format-enforcer/lm_format_enforcer-0.10.3.tar.gz",
 "version": "0.10.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/lm-format-enforcer.json"
 }
}