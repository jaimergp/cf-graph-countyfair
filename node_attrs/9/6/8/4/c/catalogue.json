{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  },
  "test": "native_and_emulated",
  "travis": {
   "secure": {
    "BINSTAR_TOKEN": "il6iMh1sxDFAejD6QSOLv0AbpeZGQe0BP9N8d3KvnCmlCPAvAT4HcoCWLqq+WqEAG2wRHdqzfeIqfT26Nn4juEMbWPb+GpgXdu/KDMYPMVFpocR8m8jIuZy2U1L4KLHtHt20WFrf+uTmd2w6RIJi7pNFDUJE49EZGUHrtrI9awQmCBVlrTtP+xR2PFqqf3qZD1xoqKTv9shozdvBoU1Y01RpLthOu+OpgBBZFj8gUuY28v3SXseI9l278oqKPaqiAsdxVSJL8cDE1YTdrOiD5Aq0kcYlh8i3L+UXuxFRAPiUQBFiWndqao9Cghl60gWqCk1HAvI69UCKGxm6tj82m0jpEfYvocpEfUlk/UB+HXzh+hfzy+Iv3yRytUWM6y93ecVzlPFOptd0TA63btqrRiEkRTpQHvFrXpFUrxgacyG4XXeDlv+78hLop4gbOmulHAlLEREIN5p07gztMP73AtxMmSjcLPHTbXCMW5+MpSty3/TcLHQNQZu0zNCa2u4Vb7Dfl5ll8s4GLLVtW+kddX7p3DglJilcUXjKP7lN4+5g88CSZeIGtSW3rkT1SXXyYMYqcVi1z7ypPQ1i4UtB88Dz5wp9Gw99++cTALe/3tf2tFnC+4EfLQMeDW3dAJDeGnzqwDCxTWWnV+72Ah2C3XSgJOtvkk8wdwpibZP3O4U="
   }
  }
 },
 "feedstock_name": "catalogue",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "name": "catalogue",
 "osx_64_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "catalogue"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/catalogue.json"
 },
 "raw_meta_yaml": "{% set name = \"catalogue\" %}\n{% set version = \"2.0.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - zipp >=0.5  # [py<=37]\n    - typing-extensions >=3.6.4  # [py<=37]\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - catalogue\n  commands:\n    - python -m pytest --tb=native --pyargs {{ name }}\n\nabout:\n  home: https://github.com/explosion/catalogue\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Super lightweight function registries for your library\n  description: |\n    catalogue is a tiny, zero-dependencies library that makes it easy to add\n    function (or object) registries to your code. Function registries are helpful\n    when you have objects that need to be both easily serializable and fully\n    customizable. Instead of passing a function into your object, you pass in\n    an identifier name, which the object can use to lookup the function from\n    the registry. This makes the object easy to serialize, because the name\n    is a simple string. If you instead saved the function, you'd have to use\n    Pickle for serialization, which has many drawbacks.\n  doc_url: https://github.com/explosion/catalogue\n  dev_url: https://github.com/explosion/catalogue\n\nextra:\n  recipe-maintainers:\n    - honnibal\n    - ines\n    - adrianeboyd\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz",
 "version": "2.0.10",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/catalogue.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "catalogue is a tiny, zero-dependencies library that makes it easy to add\nfunction (or object) registries to your code. Function registries are helpful\nwhen you have objects that need to be both easily serializable and fully\ncustomizable. Instead of passing a function into your object, you pass in\nan identifier name, which the object can use to lookup the function from\nthe registry. This makes the object easy to serialize, because the name\nis a simple string. If you instead saved the function, you'd have to use\nPickle for serialization, which has many drawbacks.\n",
   "dev_url": "https://github.com/explosion/catalogue",
   "doc_url": "https://github.com/explosion/catalogue",
   "home": "https://github.com/explosion/catalogue",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Super lightweight function registries for your library"
  },
  "build": {
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd",
    "honnibal",
    "ines",
    "adrianeboyd"
   ]
  },
  "package": {
   "name": "catalogue",
   "version": "2.0.10"
  },
  "requirements": {
   "build": [],
   "host": [
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python",
    "python",
    "python"
   ]
  },
  "source": {
   "sha256": "4f56daa940913d3f09d589c191c74e5a6d51762b3a9e37dd53b7437afd6cda15",
   "url": "https://pypi.io/packages/source/c/catalogue/catalogue-2.0.10.tar.gz"
  },
  "test": {
   "commands": [
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue",
    "python -m pytest --tb=native --pyargs catalogue"
   ],
   "imports": [
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue",
    "catalogue"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}