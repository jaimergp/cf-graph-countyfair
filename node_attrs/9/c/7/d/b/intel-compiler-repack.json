{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_with_mambabuild": false,
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  }
 },
 "feedstock_name": "intel-compiler-repack",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "964"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "ocl-icd",
      "zlib"
     ],
     "run": []
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "patchelf"
     ],
     "host": [
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": null,
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 2.17",
      "patchelf"
     ],
     "host": [
      "tbb-devel 2021.*",
      "ocl-icd",
      "zlib",
      "libxml2",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt 2024.1.0"
     ]
    },
    "script": "opencl-rt-build.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so",
      "export OCL_ICD_DEBUG=7",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "export PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libze_loader.so.1"
     ]
    },
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "ocl-icd"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-opencl-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "__glibc >=2.17,<3.0.a0"
      ]
     }
    },
    "name": "dpcpp_impl_linux-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "ocl-icd",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "sysroot_linux-64 2.17",
      "gcc_impl_linux-64",
      "gxx_impl_linux-64"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "__glibc >=2.17,<3.0.a0"
      ]
     }
    },
    "name": "dpcpp_linux-64",
    "requirements": {
     "run": [
      "dpcpp_impl_linux-64"
     ]
    },
    "script": "install_activate.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "309"
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "mpich",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    },
    "version": "2021.12.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.1.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lic-rt/2024.1.0/download/linux-64/intel-cmplr-lic-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://anaconda.org/intel/intel-fortran-rt/2024.1.0/download/linux-64/intel-fortran-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://anaconda.org/intel/dpcpp-cpp-rt/2024.1.0/download/linux-64/dpcpp-cpp-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lib-rt/2024.1.0/download/linux-64/intel-cmplr-lib-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_linux-64",
    "url": "https://anaconda.org/intel/dpcpp_impl_linux-64/2024.1.0/download/linux-64/dpcpp_impl_linux-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_linux-64",
    "url": "https://anaconda.org/intel/dpcpp_linux-64/2024.1.0/download/linux-64/dpcpp_linux-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://anaconda.org/intel/intel-opencl-rt/2024.1.0/download/linux-64/intel-opencl-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "oneccl-devel",
    "url": "https://anaconda.org/intel/oneccl-devel/2021.12.0/download/linux-64/oneccl-devel-2021.12.0-intel_309.tar.bz2"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patchelf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "libxml2",
    "mpich",
    "ocl-icd",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "gcc_impl_linux-64",
    "gxx_impl_linux-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "964"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "ocl-icd",
      "zlib"
     ],
     "run": []
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "patchelf"
     ],
     "host": [
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": null,
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "sysroot_linux-64 2.17",
      "patchelf"
     ],
     "host": [
      "tbb-devel 2021.*",
      "ocl-icd",
      "zlib",
      "libxml2",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt 2024.1.0"
     ]
    },
    "script": "opencl-rt-build.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so",
      "export OCL_ICD_DEBUG=7",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "export PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libze_loader.so.1"
     ]
    },
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "ocl-icd"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-opencl-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "__glibc >=2.17,<3.0.a0"
      ]
     }
    },
    "name": "dpcpp_impl_linux-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "ocl-icd",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "sysroot_linux-64 2.17",
      "gcc_impl_linux-64",
      "gxx_impl_linux-64"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "__glibc >=2.17,<3.0.a0"
      ]
     }
    },
    "name": "dpcpp_linux-64",
    "requirements": {
     "run": [
      "dpcpp_impl_linux-64"
     ]
    },
    "script": "install_activate.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "309"
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "mpich",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    },
    "version": "2021.12.0"
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "zlib"
     ],
     "run": []
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports": [
      "python_abi",
      "python"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "tbb-devel 2021.*",
      "khronos-opencl-icd-loader",
      "zlib",
      "libxml2",
      "intel-cmplr-lib-rt",
      "python"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt 2024.1.0"
     ]
    },
    "script": "opencl-rt-bld.bat",
    "test": {
     "commands": [
      "type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "set PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libze_loader.so.1"
     ]
    },
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "khronos-opencl-icd-loader"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-opencl-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_impl_win-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_win-64",
    "requirements": {
     "run": [
      "dpcpp_impl_win-64"
     ]
    },
    "script": "install_activate.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "309",
     "skip": true
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "test": {
     "commands": null
    },
    "version": "2021.12.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.1.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lic-rt/2024.1.0/download/linux-64/intel-cmplr-lic-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://anaconda.org/intel/intel-fortran-rt/2024.1.0/download/linux-64/intel-fortran-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://anaconda.org/intel/dpcpp-cpp-rt/2024.1.0/download/linux-64/dpcpp-cpp-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lib-rt/2024.1.0/download/linux-64/intel-cmplr-lib-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_linux-64",
    "url": "https://anaconda.org/intel/dpcpp_impl_linux-64/2024.1.0/download/linux-64/dpcpp_impl_linux-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_linux-64",
    "url": "https://anaconda.org/intel/dpcpp_linux-64/2024.1.0/download/linux-64/dpcpp_linux-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://anaconda.org/intel/intel-opencl-rt/2024.1.0/download/linux-64/intel-opencl-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "oneccl-devel",
    "url": "https://anaconda.org/intel/oneccl-devel/2021.12.0/download/linux-64/oneccl-devel-2021.12.0-intel_309.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lic-rt/2024.1.0/download/win-64/intel-cmplr-lic-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://anaconda.org/intel/intel-fortran-rt/2024.1.0/download/win-64/intel-fortran-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://anaconda.org/intel/dpcpp-cpp-rt/2024.1.0/download/win-64/dpcpp-cpp-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lib-rt/2024.1.0/download/win-64/intel-cmplr-lib-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_win-64",
    "url": "https://anaconda.org/intel/dpcpp_impl_win-64/2024.1.0/download/win-64/dpcpp_impl_win-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_win-64",
    "url": "https://anaconda.org/intel/dpcpp_win-64/2024.1.0/download/win-64/dpcpp_win-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://anaconda.org/intel/intel-opencl-rt/2024.1.0/download/win-64/intel-opencl-rt-2024.1.0-intel_964.tar.bz2"
   }
  ]
 },
 "name": "intel-compiler-repack",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dpcpp-cpp-rt",
   "dpcpp_impl_linux-64",
   "dpcpp_impl_win-64",
   "dpcpp_linux-64",
   "dpcpp_win-64",
   "intel-cmplr-lib-rt",
   "intel-cmplr-lic-rt",
   "intel-fortran-rt",
   "intel-opencl-rt",
   "oneccl-devel"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/intel-compiler-repack.json"
 },
 "raw_meta_yaml": "{% set version = \"2024.1.0\" %}          # [linux]\n{% set version = \"2024.1.0\" %}          # [win]\n{% set intel_build_number = \"963\" %}   # [linux]\n{% set intel_build_number = \"964\" %}   # [win]\n\n{% set oneccl_version = \"2021.12.0\" %}\n{% set oneccl_build_number = \"309\" %}\n\n{% set tbb_version = \"2021.12.0\" %}\n{% set intel_ch = \"https://anaconda.org/intel\" %}\n\n# use this if our build script changes and we need to increment beyond intel's version\n{% set dst_build_number = '0' %}\n{% set build_number = intel_build_number|int + dst_build_number|int %}\n\npackage:\n  name: intel-compiler-repack\n  version: {{ version }}\n\nsource:\n  # Is there a better way to specify skipping the source if it does not exist? (so it matches 'skip: True' selectors)\n  - url: {{ intel_ch }}/intel-cmplr-lic-rt/{{ version }}/download/{{ target_platform }}/intel-cmplr-lic-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-cmplr-lic-rt\n  - url: {{ intel_ch }}/intel-fortran-rt/{{ version }}/download/{{ target_platform }}/intel-fortran-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-fortran-rt\n  - url: {{ intel_ch }}/dpcpp-cpp-rt/{{ version }}/download/{{ target_platform }}/dpcpp-cpp-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [not win32]\n    folder: dpcpp-cpp-rt  # [not win32]\n  - url: {{ intel_ch }}/intel-cmplr-lib-rt/{{ version }}/download/{{ target_platform }}/intel-cmplr-lib-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-cmplr-lib-rt\n  - url: {{ intel_ch }}/dpcpp_impl_{{ target_platform }}/{{ version }}/download/{{ target_platform }}/dpcpp_impl_{{ target_platform }}-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: dpcpp_impl_{{ target_platform }}  # [linux64 or win64]\n  - url: {{ intel_ch }}/dpcpp_{{ target_platform }}/{{ version }}/download/{{ target_platform }}/dpcpp_{{ target_platform }}-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: dpcpp_{{ target_platform }}  # [linux64 or win64]\n  - url: {{ intel_ch }}/intel-opencl-rt/{{ version }}/download/{{ target_platform }}/intel-opencl-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: intel-opencl-rt  # [linux64 or win64]\n  - url: {{ intel_ch }}/oneccl-devel/{{ oneccl_version }}/download/{{ target_platform }}/oneccl-devel-{{ oneccl_version }}-intel_{{ oneccl_build_number }}.tar.bz2  # [linux64]\n    folder: oneccl-devel  # [linux64]\n\nbuild:\n  number: {{ build_number }}\n  binary_relocation: False\n  detect_binary_files_with_prefix: False\n  skip: True                                  # [not (linux64 or win)]\n\noutputs:\n  - name: intel-cmplr-lic-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      summary: Intel End User License Agreement for Developer Tools\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-cmplr-lic-rt/info/licenses/license.txt\n        - intel-cmplr-lic-rt/info/licenses/tpp.txt\n      description: |\n        Intel End User License Agreement for Developer Tools.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/licensing/compiler/*  # [unix]\n        - dir %PREFIX%\\licensing\\compiler\\*  # [win]\n\n  - name: intel-cmplr-lib-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - ocl-icd  # [linux]\n        - khronos-opencl-icd-loader  # [win]\n        - zlib\n      run:\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE C++ Compiler Classic\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-cmplr-lib-rt/info/licenses/license.txt\n        - intel-cmplr-lib-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE C++ Compiler Classic.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: intel-fortran-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - patchelf                 # [linux]\n      host:\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n      run:\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-fortran-rt/info/licenses/license.txt\n        - intel-fortran-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: intel-opencl-rt\n    script: opencl-rt-build.sh   # [unix]\n    script: opencl-rt-bld.bat  # [win]\n    build:\n      skip: True  # [win32]\n      binary_relocation: False   # [win]\n      ignore_run_exports:        # [win]\n        - python_abi             # [win]\n        - python                 # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - sysroot_linux-64 2.17  # [linux]\n        - patchelf               # [linux]\n      host:\n        - tbb-devel {{ tbb_version.split('.')[0] }}.*\n        - ocl-icd  # [linux]\n        - khronos-opencl-icd-loader  # [win]\n        - zlib\n        - libxml2\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - python  # [win]\n      run:\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        # TODO figure out why pin_subpackage does not work for below\n        - intel-cmplr-lib-rt {{ version }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/tools.html\n      summary: Intel\u00AE CPU Runtime for OpenCL(TM) Applications\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-opencl-rt/info/licenses/license.txt\n        - intel-opencl-rt/info/licenses/tpp.txt\n      description: |\n        Intel\u00AE CPU Runtime for OpenCL(TM) Applications\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      requires:\n        - pyopencl\n        - curl\n      commands:\n        - test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so          # [linux]\n        - type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg            # [win]\n        - export OCL_ICD_DEBUG=7                                    # [linux]\n        - curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py\n        - export PYOPENCL_CTX=intel  # [unix]\n        - set PYOPENCL_CTX=intel     # [win]\n        - python demo.py\n\n  - name: dpcpp-cpp-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      skip: True  # [win32]\n      missing_dso_whitelist:\n        - '**/libze_loader.so.1'\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - ocl-icd   # [linux]\n        - khronos-opencl-icd-loader  # [win]\n      run:\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-opencl-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - dpcpp-cpp-rt/info/licenses/license.txt\n        - dpcpp-cpp-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 $PREFIX/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: dpcpp_impl_{{ target_platform }}\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      skip: True  # [not (linux64 or win64)]\n      binary_relocation: False\n      overlinking_ignore_patterns:\n        - \"**\"\n      run_exports:\n        # 1. strong so it gets added if this package is in the build requirement section.\n        # 2. Pin to year for now, similar to MKL.\n        strong:\n          - {{ pin_subpackage(\"dpcpp-cpp-rt\", max_pin=\"x\") }}\n          - __glibc >=2.17,<3.0.a0  # [linux64]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - zlib\n        - libxml2\n        - ocl-icd  # [linux]\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        # FIXME due to a conda-build bug, we need to tell conda-build that dpcpp-cpp-rt depends\n        # on llvm openmp instead of gnu\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n      run:\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        - sysroot_linux-64 2.17  # [linux64]\n        - gcc_impl_linux-64      # [linux64]\n        - gxx_impl_linux-64      # [linux64]\n\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - dpcpp_impl_{{ target_platform }}/info/licenses/license.txt  # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/tpp.txt      # [linux64 or win64]\n      description: |\n        Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/bin/*         # [unix]\n        - ls -A1 ${PREFIX}/include/*     # [unix]\n        - ls -A1 ${PREFIX}/lib/*         # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n        - dir %PREFIX%\\Library\\lib\\*  # [win]\n\n  - name: dpcpp_{{ target_platform }}\n    script: install_activate.sh   # [unix]\n    script: install_activate.bat  # [win]\n    build:\n      skip: True  # [not (linux64 or win64)]\n      run_exports:\n        # 1. strong so it gets added if this package is in the build requirement section.\n        # 2. Pin to year for now, similar to MKL.\n        strong:\n          - {{ pin_subpackage(\"dpcpp-cpp-rt\", max_pin=\"x\") }}\n          - __glibc >=2.17,<3.0.a0  # [linux64]\n    requirements:   # [linux64 or win64]\n      run:          # [linux64 or win64]\n        - {{ pin_subpackage('dpcpp_impl_linux-64', exact=True) }}  # [linux64]\n        - {{ pin_subpackage('dpcpp_impl_win-64', exact=True) }}    # [win64]\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:                                                   # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/license.txt  # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/tpp.txt      # [linux64 or win64]\n      description: |\n        Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      files:\n        - simple.cpp\n      commands:\n        - ls -A1 ${PREFIX}/bin/*         # [unix]\n        - ls -A1 ${PREFIX}/include/*     # [unix]\n        - ls -A1 ${PREFIX}/lib/*         # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n        - dir %PREFIX%\\Library\\lib\\*  # [win]\n        - icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe  # [unix]\n        - icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe  # [win]\n\n  - name: oneccl-devel\n    version: {{ oneccl_version }}\n    script: repack.sh   # [unix]\n    build:\n      number: {{ oneccl_build_number|int + dst_build_number|int }}\n      skip: True  # [not linux64]\n      missing_dso_whitelist:\n        - '**/libfabric.so.1'\n        - '**/libze_loader.so.1'\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - mpich                    # [linux]\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        # FIXME due to a conda-build bug, we need to tell conda-build that dpcpp-cpp-rt depends\n        # on llvm openmp instead of gnu\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n      run:\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html\n      summary: Intel\u00AE oneAPI Collective Communications Library*\n      license: LicenseRef-Proprietary-Intel-Simplified-Software-License\n      license_family: Proprietary\n      license_file:\n        - oneccl-devel/info/licenses/license.txt\n        - oneccl-devel/info/licenses/tpp.txt\n      description: |\n        Intel\u00AE oneAPI Collective Communications Library*.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 $PREFIX/lib/*  # [unix]\n\nabout:\n  home: https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock\n  license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n  license_family: Proprietary\n  summary: 'Repackaged Intel\u00AE compilers and runtimes.'\n\nextra:\n  recipe-maintainers:\n    - napetrov\n    - tomashek\n    - oleksandr-pavlyk\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "c_compiler_stub",
   "cxx_compiler_stub",
   "dpcpp-cpp-rt",
   "dpcpp_impl_linux-64",
   "dpcpp_impl_win-64",
   "gcc_impl_linux-64",
   "gxx_impl_linux-64",
   "intel-cmplr-lib-rt",
   "intel-cmplr-lic-rt",
   "intel-opencl-rt",
   "khronos-opencl-icd-loader",
   "libxml2",
   "llvm-openmp",
   "mpich",
   "ocl-icd",
   "patchelf",
   "python",
   "sysroot_linux-64",
   "tbb-devel",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patchelf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "intel-compiler-repack",
    "khronos-opencl-icd-loader",
    "libxml2",
    "llvm-openmp",
    "mpich",
    "ocl-icd",
    "python",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "dpcpp_impl_win-64",
    "gcc_impl_linux-64",
    "gxx_impl_linux-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lic-rt",
    "intel-compiler-repack",
    "intel-opencl-rt",
    "llvm-openmp",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "strong_exports": true,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patchelf",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex * *_llvm",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "khronos-opencl-icd-loader",
    "libxml2",
    "llvm-openmp",
    "mpich",
    "ocl-icd",
    "python",
    "tbb-devel 2021.*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex * *_llvm",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "dpcpp_impl_win-64",
    "gcc_impl_linux-64",
    "gxx_impl_linux-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-rt 2024.1.0",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "llvm-openmp",
    "sysroot_linux-64 2.17"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "url": "https://anaconda.org/intel/intel-cmplr-lic-rt/2024.1.0/download/linux-64/intel-cmplr-lic-rt-2024.1.0-intel_964.tar.bz2",
 "version": "2024.1.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/intel-compiler-repack.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "964"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "zlib"
     ],
     "run": []
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports": [
      "python_abi",
      "python"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "tbb-devel 2021.*",
      "khronos-opencl-icd-loader",
      "zlib",
      "libxml2",
      "intel-cmplr-lib-rt",
      "python"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt 2024.1.0"
     ]
    },
    "script": "opencl-rt-bld.bat",
    "test": {
     "commands": [
      "type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "set PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libze_loader.so.1"
     ]
    },
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "khronos-opencl-icd-loader"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-opencl-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_impl_win-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_win-64",
    "requirements": {
     "run": [
      "dpcpp_impl_win-64"
     ]
    },
    "script": "install_activate.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "309",
     "skip": true
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "test": {
     "commands": null
    },
    "version": "2021.12.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.1.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lic-rt/2024.1.0/download/win-64/intel-cmplr-lic-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://anaconda.org/intel/intel-fortran-rt/2024.1.0/download/win-64/intel-fortran-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://anaconda.org/intel/dpcpp-cpp-rt/2024.1.0/download/win-64/dpcpp-cpp-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://anaconda.org/intel/intel-cmplr-lib-rt/2024.1.0/download/win-64/intel-cmplr-lib-rt-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_win-64",
    "url": "https://anaconda.org/intel/dpcpp_impl_win-64/2024.1.0/download/win-64/dpcpp_impl_win-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "dpcpp_win-64",
    "url": "https://anaconda.org/intel/dpcpp_win-64/2024.1.0/download/win-64/dpcpp_win-64-2024.1.0-intel_964.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://anaconda.org/intel/intel-opencl-rt/2024.1.0/download/win-64/intel-opencl-rt-2024.1.0-intel_964.tar.bz2"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "khronos-opencl-icd-loader",
    "libxml2",
    "llvm-openmp",
    "python",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dpcpp-cpp-rt",
    "dpcpp_impl_win-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 }
}