{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_build_tool": "conda-build",
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  }
 },
 "feedstock_name": "intel-compiler-repack",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "978"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk",
    "ZzEeKkAa"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lic-rt"
     ]
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-rt"
     ]
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "intel-cmplr-lic-rt"
     ],
     "host": [
      "zlib",
      "intel-cmplr-lic-rt"
     ],
     "run": []
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-ur/info/licenses/license.txt",
      "intel-cmplr-lib-ur/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-ur"
     ]
    },
    "name": "intel-cmplr-lib-ur",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "ocl-icd",
      "level-zero-devel",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*",
      "test -f ${PREFIX}/lib/libur_loader.so"
     ]
    }
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-sycl-rt/info/licenses/license.txt",
      "intel-sycl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-sycl-rt"
     ]
    },
    "name": "intel-sycl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "ocl-icd",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "build": {
     "run_exports": [
      "intel-fortran-rt"
     ]
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "patchelf"
     ],
     "host": [
      "mpich",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "run_exports": [
      "intel-opencl-rt"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "patchelf"
     ],
     "host": [
      "tbb-devel 2021.*",
      "ocl-icd",
      "zlib",
      "libxml2",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "opencl-rt-build.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so",
      "export OCL_ICD_DEBUG=7",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "export PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": null,
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt",
      "ocl-icd"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports_from": [
      "sysroot_linux-64"
     ],
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "libgcc-ng",
       "libstdcxx-ng"
      ]
     }
    },
    "name": "dpcpp_impl_linux-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "ocl-icd",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "binutils_impl_linux-64 >=2.30",
      "libgcc-devel_linux-64 >=7.5.0",
      "libstdcxx-devel_linux-64 >=7.5.0",
      "sysroot_linux-64"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "test -f ${PREFIX}/include/sycl/CL/sycl.hpp",
      "icx --version",
      "icpx --version"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_linux-64",
    "requirements": {
     "run": [
      "dpcpp_impl_linux-64",
      "binutils_linux-64 >=2.30",
      "sysroot_linux-64"
     ]
    },
    "script": "install_activate.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "299"
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "intel-sycl-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "intel-sycl-rt",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    },
    "version": "2021.13.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.2.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "sha256": "ab37ae3b142ea2cdd5bfed4389ea3299e66cc6da14e8751d8a609f970ae732ff",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lic-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "sha256": "a9b1c6fa0547f2c28a5b1b560fd656859af30933259f1c2b3e30f1bec5d9b259",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lib-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-ur",
    "sha256": "7b39b7446b875408045a3b578ad467060db66be1c71dbbf25e1310c53a0857ea",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lib-ur-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-sycl-rt",
    "sha256": "98a5503a47feb2e72b2fce045d7edc177c333828b5eee3dd337dfd7441c8c11a",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-sycl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "sha256": "f28118cd4029d708f35a8493473f9a24b20b9eb413007ff6fac93cb9f2d3643f",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-fortran-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "sha256": "1a33749a1696c0c0f2d572b76a98891c032e8e58354d6969036451f0848dff05",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-opencl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "sha256": "bb430763d0ee6029d6befa911605faf514ce83584933f64647c8fff527f5d136",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp-cpp-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_linux-64",
    "sha256": "958dc668d49d2ae9dbe0f0e55f8f5025b3e280be0a5b294a3898bc6efbc74627",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp_impl_linux-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_linux-64",
    "sha256": "7bfef6c455ae87a034e6efef1bbbbd7079875fcb4bdb3d5edbda950d1a1f0ee7",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp_linux-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "oneccl-devel",
    "sha256": "1734013a1238bff9eede84adb37290a0ef2d9a9d7057ab46bef95779089f2ab0",
    "url": "https://software.repos.intel.com/python/conda/linux-64/oneccl-devel-2021.13.0-intel_299.tar.bz2"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "intel-cmplr-lic-rt",
    "patchelf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "level-zero-devel",
    "libxml2",
    "mpich",
    "ocl-icd",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "binutils_impl_linux-64",
    "binutils_linux-64",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "libgcc-devel_linux-64",
    "libstdcxx-devel_linux-64",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "978"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk",
    "ZzEeKkAa"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lic-rt"
     ]
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-rt"
     ]
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "intel-cmplr-lic-rt"
     ],
     "host": [
      "zlib",
      "intel-cmplr-lic-rt"
     ],
     "run": []
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-ur/info/licenses/license.txt",
      "intel-cmplr-lib-ur/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-ur"
     ]
    },
    "name": "intel-cmplr-lib-ur",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "ocl-icd",
      "level-zero-devel",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*",
      "test -f ${PREFIX}/lib/libur_loader.so"
     ]
    }
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-sycl-rt/info/licenses/license.txt",
      "intel-sycl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-sycl-rt"
     ]
    },
    "name": "intel-sycl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "ocl-icd",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/licensing/compiler/*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "build": {
     "run_exports": [
      "intel-fortran-rt"
     ]
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "patchelf"
     ],
     "host": [
      "mpich",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "run_exports": [
      "intel-opencl-rt"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "patchelf"
     ],
     "host": [
      "tbb-devel 2021.*",
      "ocl-icd",
      "zlib",
      "libxml2",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "opencl-rt-build.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so",
      "export OCL_ICD_DEBUG=7",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "export PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": null,
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt",
      "ocl-icd"
     ],
     "run": [
      "_openmp_mutex * *_llvm",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports_from": [
      "sysroot_linux-64"
     ],
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt",
       "libgcc-ng",
       "libstdcxx-ng"
      ]
     }
    },
    "name": "dpcpp_impl_linux-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "ocl-icd",
      "dpcpp-cpp-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "binutils_impl_linux-64 >=2.30",
      "libgcc-devel_linux-64 >=7.5.0",
      "libstdcxx-devel_linux-64 >=7.5.0",
      "sysroot_linux-64"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "test -f ${PREFIX}/include/sycl/CL/sycl.hpp",
      "icx --version",
      "icpx --version"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_linux-64/info/licenses/license.txt",
      "dpcpp_impl_linux-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_linux-64",
    "requirements": {
     "run": [
      "dpcpp_impl_linux-64",
      "binutils_linux-64 >=2.30",
      "sysroot_linux-64"
     ]
    },
    "script": "install_activate.sh",
    "test": {
     "commands": [
      "ls -A1 ${PREFIX}/bin/*",
      "ls -A1 ${PREFIX}/include/*",
      "ls -A1 ${PREFIX}/lib/*",
      "icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "299"
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "intel-sycl-rt",
      "_openmp_mutex * *_llvm"
     ],
     "run": [
      "intel-sycl-rt",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "script": "repack.sh",
    "test": {
     "commands": [
      "ls -A1 $PREFIX/lib/*"
     ]
    },
    "version": "2021.13.0"
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lic-rt"
     ]
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-rt"
     ]
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "intel-cmplr-lic-rt"
     ],
     "host": [
      "zlib",
      "intel-cmplr-lic-rt"
     ],
     "run": []
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-ur/info/licenses/license.txt",
      "intel-cmplr-lib-ur/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-ur"
     ]
    },
    "name": "intel-cmplr-lib-ur",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-sycl-rt/info/licenses/license.txt",
      "intel-sycl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-sycl-rt"
     ]
    },
    "name": "intel-sycl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "build": {
     "run_exports": [
      "intel-fortran-rt"
     ]
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports": [
      "python_abi",
      "python"
     ],
     "run_exports": [
      "intel-opencl-rt"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "tbb-devel 2021.*",
      "khronos-opencl-icd-loader",
      "zlib",
      "libxml2",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "python"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "opencl-rt-bld.bat",
    "test": {
     "commands": [
      "type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "set PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": null,
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt",
      "khronos-opencl-icd-loader"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports_from": [
      "vs_win-64"
     ],
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_impl_win-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "khronos-opencl-icd-loader",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "vs_win-64"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icx --version",
      "icpx --version"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_win-64",
    "requirements": {
     "run": [
      "dpcpp_impl_win-64",
      "vs_win-64"
     ]
    },
    "script": "install_activate.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "299",
     "skip": true
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "intel-sycl-rt",
      "llvm-openmp"
     ],
     "run": [
      "intel-sycl-rt",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "test": {
     "commands": null
    },
    "version": "2021.13.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.2.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "sha256": "ab37ae3b142ea2cdd5bfed4389ea3299e66cc6da14e8751d8a609f970ae732ff",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lic-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "sha256": "a9b1c6fa0547f2c28a5b1b560fd656859af30933259f1c2b3e30f1bec5d9b259",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lib-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-ur",
    "sha256": "7b39b7446b875408045a3b578ad467060db66be1c71dbbf25e1310c53a0857ea",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lib-ur-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-sycl-rt",
    "sha256": "98a5503a47feb2e72b2fce045d7edc177c333828b5eee3dd337dfd7441c8c11a",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-sycl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "sha256": "f28118cd4029d708f35a8493473f9a24b20b9eb413007ff6fac93cb9f2d3643f",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-fortran-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "sha256": "1a33749a1696c0c0f2d572b76a98891c032e8e58354d6969036451f0848dff05",
    "url": "https://software.repos.intel.com/python/conda/linux-64/intel-opencl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "sha256": "bb430763d0ee6029d6befa911605faf514ce83584933f64647c8fff527f5d136",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp-cpp-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_linux-64",
    "sha256": "958dc668d49d2ae9dbe0f0e55f8f5025b3e280be0a5b294a3898bc6efbc74627",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp_impl_linux-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_linux-64",
    "sha256": "7bfef6c455ae87a034e6efef1bbbbd7079875fcb4bdb3d5edbda950d1a1f0ee7",
    "url": "https://software.repos.intel.com/python/conda/linux-64/dpcpp_linux-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "oneccl-devel",
    "sha256": "1734013a1238bff9eede84adb37290a0ef2d9a9d7057ab46bef95779089f2ab0",
    "url": "https://software.repos.intel.com/python/conda/linux-64/oneccl-devel-2021.13.0-intel_299.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lic-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lib-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-ur",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lib-ur-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-sycl-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-sycl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-fortran-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-opencl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp-cpp-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_win-64",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp_impl_win-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_win-64",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp_win-64-2024.2.0-intel_978.tar.bz2"
   }
  ]
 },
 "name": "intel-compiler-repack",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dpcpp-cpp-rt",
   "dpcpp_impl_linux-64",
   "dpcpp_impl_win-64",
   "dpcpp_linux-64",
   "dpcpp_win-64",
   "intel-cmplr-lib-rt",
   "intel-cmplr-lib-ur",
   "intel-cmplr-lic-rt",
   "intel-fortran-rt",
   "intel-opencl-rt",
   "intel-sycl-rt",
   "oneccl-devel"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/intel-compiler-repack.json"
 },
 "raw_meta_yaml": "{% set version = \"2024.2.0\" %}\n{% set intel_build_number = \"981\" %}   # [linux]\n{% set intel_build_number = \"978\" %}   # [win]\n\n{% set oneccl_version = \"2021.13.0\" %}\n{% set oneccl_build_number = \"299\" %}\n\n{% set tbb_version = \"2021.13.0\" %}\n{% set intel_ch = \"https://software.repos.intel.com/python/conda\" %}\n\n# use this if our build script changes and we need to increment beyond intel's version\n{% set dst_build_number = '0' %}\n{% set build_number = intel_build_number|int + dst_build_number|int %}\n\npackage:\n  name: intel-compiler-repack\n  version: {{ version }}\n\nsource:\n  # Is there a better way to specify skipping the source if it does not exist? (so it matches 'skip: True' selectors)\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-cmplr-lic-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-cmplr-lic-rt\n    sha256: ab37ae3b142ea2cdd5bfed4389ea3299e66cc6da14e8751d8a609f970ae732ff  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-cmplr-lib-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-cmplr-lib-rt\n    sha256: a9b1c6fa0547f2c28a5b1b560fd656859af30933259f1c2b3e30f1bec5d9b259  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-cmplr-lib-ur-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-cmplr-lib-ur\n    sha256: 7b39b7446b875408045a3b578ad467060db66be1c71dbbf25e1310c53a0857ea  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-sycl-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-sycl-rt\n    sha256: 98a5503a47feb2e72b2fce045d7edc177c333828b5eee3dd337dfd7441c8c11a  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-fortran-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2\n    folder: intel-fortran-rt\n    sha256: f28118cd4029d708f35a8493473f9a24b20b9eb413007ff6fac93cb9f2d3643f  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/intel-opencl-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: intel-opencl-rt  # [linux64 or win64]\n    sha256: 1a33749a1696c0c0f2d572b76a98891c032e8e58354d6969036451f0848dff05  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/dpcpp-cpp-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [not win32]\n    folder: dpcpp-cpp-rt  # [not win32]\n    sha256: bb430763d0ee6029d6befa911605faf514ce83584933f64647c8fff527f5d136  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/dpcpp_impl_{{ target_platform }}-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: dpcpp_impl_{{ target_platform }}  # [linux64 or win64]\n    sha256: 958dc668d49d2ae9dbe0f0e55f8f5025b3e280be0a5b294a3898bc6efbc74627  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/dpcpp_{{ target_platform }}-{{ version }}-intel_{{ intel_build_number }}.tar.bz2  # [linux64 or win64]\n    folder: dpcpp_{{ target_platform }}  # [linux64 or win64]\n    sha256: 7bfef6c455ae87a034e6efef1bbbbd7079875fcb4bdb3d5edbda950d1a1f0ee7  # [linux64]\n  - url: {{ intel_ch }}/{{ target_platform }}/oneccl-devel-{{ oneccl_version }}-intel_{{ oneccl_build_number }}.tar.bz2  # [linux64]\n    folder: oneccl-devel  # [linux64]\n    sha256: 1734013a1238bff9eede84adb37290a0ef2d9a9d7057ab46bef95779089f2ab0  # [linux64]\n\nbuild:\n  number: {{ build_number }}\n  binary_relocation: False\n  detect_binary_files_with_prefix: False\n  skip: True                                  # [not (linux64 or win)]\n\noutputs:\n  - name: intel-cmplr-lic-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      run_exports:\n        # This is just a license file package, so let's pin it strict.\n        - {{ pin_subpackage(\"intel-cmplr-lic-rt\", exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      summary: Intel End User License Agreement for Developer Tools\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-cmplr-lic-rt/info/licenses/license.txt\n        - intel-cmplr-lic-rt/info/licenses/tpp.txt\n      description: |\n        Intel End User License Agreement for Developer Tools.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/licensing/compiler/*  # [unix]\n        - dir %PREFIX%\\licensing\\compiler\\*  # [win]\n\n  - name: intel-cmplr-lib-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      run_exports:\n        # Pin to year for now, similar to MKL.\n        - {{ pin_subpackage(\"intel-cmplr-lib-rt\", max_pin=\"x\") }}\n    requirements:\n      # Since it is repack, we do not need these packages in the build and host\n      # sections. However it is limitation of conda-build to check for library\n      # linking only for the packages that are presented in build and host and\n      # have run_export section.\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n      host:\n        - zlib\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n      run:\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE C++ Compiler Classic\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-cmplr-lib-rt/info/licenses/license.txt\n        - intel-cmplr-lib-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE C++ Compiler Classic.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: intel-cmplr-lib-ur\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      run_exports:\n        # Pin to year for now, similar to MKL.\n        - {{ pin_subpackage(\"intel-cmplr-lib-ur\", max_pin=\"x\") }}\n    requirements:\n      # Since it is repack, we do not need these packages in the build and host\n      # sections. However it is limitation of conda-build to check for library\n      # linking only for the packages that are presented in build and host and\n      # have run_export section.\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - ocl-icd  # [linux]\n        - khronos-opencl-icd-loader  # [win]\n        # Pinning it on linux for now, because on windows it should be\n        # distributed with driver and because of the specific of the system\n        # level zero loader may be searched only in the system directories.\n        # TODO: check if windows libraries may be loaded from conda environment.\n        - level-zero-devel  # [linux]\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n      run:\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE C++ Compiler Classic\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-cmplr-lib-ur/info/licenses/license.txt\n        - intel-cmplr-lib-ur/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE C++ Compiler Classic.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n        - test -f ${PREFIX}/lib/libur_loader.so  # [linux]\n\n  - name: intel-sycl-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      run_exports:\n        # Pin to year for now, similar to MKL.\n        - {{ pin_subpackage(\"intel-sycl-rt\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - ocl-icd                    # [linux]\n        - khronos-opencl-icd-loader  # [not linux]\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-ur', exact=True) }}\n      run:\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-ur', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html\n      summary: Intel End User License Agreement for Developer Tools\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-sycl-rt/info/licenses/license.txt\n        - intel-sycl-rt/info/licenses/tpp.txt\n      description: |\n        Intel End User License Agreement for Developer Tools.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/licensing/compiler/*  # [unix]\n        - dir %PREFIX%\\licensing\\compiler\\*  # [win]\n\n  - name: intel-fortran-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      run_exports:\n        # Pin to year for now, similar to MKL.\n        - {{ pin_subpackage(\"intel-fortran-rt\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - patchelf                 # [linux]\n      host:\n        - mpich                    # [linux]\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n      run:\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-fortran-rt/info/licenses/license.txt\n        - intel-fortran-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: intel-opencl-rt\n    script: opencl-rt-build.sh   # [unix]\n    script: opencl-rt-bld.bat  # [win]\n    build:\n      skip: True  # [win32]\n      binary_relocation: False   # [win]\n      ignore_run_exports:        # [win]\n        - python_abi             # [win]\n        - python                 # [win]\n      run_exports:\n        # Pin to year for now, similar to MKL.\n        - {{ pin_subpackage(\"intel-opencl-rt\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - patchelf               # [linux]\n      host:\n        # We don't dynamically link to tbb, ocl loader and zlib, libxml2 the way\n        # conda can detect, but we need to add them anyway to make it run.\n        - tbb-devel {{ tbb_version.split('.')[0] }}.*\n        # OpenCL loader is not in dependency of this package, but without it\n        # the library is useless. Should user request OpenCL loader explicitly\n        # in downstream recipes?\n        - ocl-icd  # [linux]\n        - khronos-opencl-icd-loader  # [win]\n        # TODO: do we need zlib and libxml2 here?\n        - zlib\n        - libxml2\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - python  # [win]\n      run:\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/tools.html\n      summary: Intel\u00AE CPU Runtime for OpenCL(TM) Applications\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - intel-opencl-rt/info/licenses/license.txt\n        - intel-opencl-rt/info/licenses/tpp.txt\n      description: |\n        Intel\u00AE CPU Runtime for OpenCL(TM) Applications\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      requires:\n        - pyopencl\n        - curl\n      commands:\n        - test -f $PREFIX/lib/intel-ocl-cpu/libintelocl.so          # [linux]\n        - type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg            # [win]\n        - export OCL_ICD_DEBUG=7                                    # [linux]\n        - curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py\n        - export PYOPENCL_CTX=intel  # [unix]\n        - set PYOPENCL_CTX=intel     # [win]\n        - python demo.py\n\n  - name: dpcpp-cpp-rt\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      skip: True  # [win32]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-ur', exact=True) }}\n        - {{ pin_subpackage('intel-opencl-rt', exact=True) }}\n        - {{ pin_subpackage('intel-sycl-rt', exact=True) }}\n        - ocl-icd   # [linux]\n        - khronos-opencl-icd-loader  # [win]\n      run:\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n        # intel-cmplr-lic-rt is a license file, please do not remove.\n        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-ur', exact=True) }}\n        - {{ pin_subpackage('intel-opencl-rt', exact=True) }}\n        - {{ pin_subpackage('intel-sycl-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - dpcpp-cpp-rt/info/licenses/license.txt\n        - dpcpp-cpp-rt/info/licenses/tpp.txt\n      description: |\n        Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 $PREFIX/lib/*  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n\n  - name: dpcpp_impl_{{ target_platform }}\n    script: repack.sh   # [unix]\n    script: repack.bat  # [win]\n    build:\n      skip: True  # [not (linux64 or win64)]\n      binary_relocation: False\n      overlinking_ignore_patterns:\n        - \"**\"\n      ignore_run_exports_from:\n        - {{ c_stdlib }}_{{ target_platform }}\n      run_exports:\n        # 1. strong so it gets added if this package is in the build requirement section.\n        # 2. Pin to year for now, similar to MKL.\n        strong:\n          - {{ pin_subpackage(\"dpcpp-cpp-rt\", max_pin=\"x\") }}\n          - {{ pin_compatible(\"libgcc-ng\") }}     # [linux64]\n          - {{ pin_compatible(\"libstdcxx-ng\") }}  # [linux64] \n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - zlib\n        - libxml2\n        - ocl-icd                    # [linux]\n        - khronos-opencl-icd-loader  # [not linux]\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        # FIXME due to a conda-build bug, we need to tell conda-build that dpcpp-cpp-rt depends\n        # on llvm openmp instead of gnu\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n      run:\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        - binutils_impl_{{ target_platform }} >={{ binutils_version }}        # [linux]\n        - libgcc-devel_{{ target_platform }} >={{ c_compiler_version }}       # [linux]\n        - libstdcxx-devel_{{ target_platform }} >={{ cxx_compiler_version }}  # [linux]\n        # None of the other compilers pin to sysroot, so we don't either. It\n        # also appears that sysroot version must be aligned with host system,\n        # e.g.:\n        # https://github.com/conda-forge/ctng-compiler-activation-feedstock/issues/108\n        - {{ c_stdlib }}_{{ target_platform }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:\n        - dpcpp_impl_{{ target_platform }}/info/licenses/license.txt  # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/tpp.txt      # [linux64 or win64]\n      description: |\n        Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 ${PREFIX}/bin/*         # [unix]\n        - ls -A1 ${PREFIX}/include/*     # [unix]\n        - ls -A1 ${PREFIX}/lib/*         # [unix]\n        - test -f ${PREFIX}/include/sycl/CL/sycl.hpp  # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n        - dir %PREFIX%\\Library\\lib\\*  # [win]\n        - icx --version\n        - icpx --version\n\n  - name: dpcpp_{{ target_platform }}\n    script: install_activate.sh   # [unix]\n    script: install_activate.bat  # [win]\n    build:\n      skip: True  # [not (linux64 or win64)]\n      run_exports:\n        # 1. strong so it gets added if this package is in the build requirement section.\n        # 2. Pin to year for now, similar to MKL.\n        strong:\n          - {{ pin_subpackage(\"dpcpp-cpp-rt\", max_pin=\"x\") }}\n    requirements:\n      run:\n        - {{ pin_subpackage('dpcpp_impl_' ~ target_platform, exact=True) }}\n        - binutils_{{ target_platform }} >={{ binutils_version }}  # [linux]\n        - {{ c_stdlib }}_{{ target_platform }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html\n      summary: Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler\n      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n      license_family: Proprietary\n      license_file:                                                   # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/license.txt  # [linux64 or win64]\n        - dpcpp_impl_{{ target_platform }}/info/licenses/tpp.txt      # [linux64 or win64]\n      description: |\n        Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      files:\n        - simple.cpp\n      commands:\n        - ls -A1 ${PREFIX}/bin/*         # [unix]\n        - ls -A1 ${PREFIX}/include/*     # [unix]\n        - ls -A1 ${PREFIX}/lib/*         # [unix]\n        - dir %PREFIX%\\Library\\bin\\*  # [win]\n        - dir %PREFIX%\\Library\\lib\\*  # [win]\n        - icpx -fsycl ${CXXFLAGS} simple.cpp ${LDFLAGS} -lpthread -o simple.exe  # [unix]\n        - icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe  # [win]\n\n  - name: oneccl-devel\n    version: {{ oneccl_version }}\n    script: repack.sh   # [unix]\n    build:\n      number: {{ oneccl_build_number|int + dst_build_number|int }}\n      skip: True  # [not linux64]\n      missing_dso_whitelist:\n        - '**/libfabric.so.1'\n        - '**/libze_loader.so.1'\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n        - {{ pin_subpackage('intel-sycl-rt', exact=True) }}\n        # FIXME due to a conda-build bug, we need to tell conda-build that dpcpp-cpp-rt depends\n        # on llvm openmp instead of gnu\n        - _openmp_mutex * *_llvm   # [linux]\n        - llvm-openmp              # [not linux]\n      run:\n        - {{ pin_subpackage('intel-sycl-rt', exact=True) }}\n        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}\n        - {{ pin_subpackage('dpcpp-cpp-rt', exact=True) }}\n    about:\n      home: https://software.intel.com/content/www/us/en/develop/tools.html\n      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm\n      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html\n      summary: Intel\u00AE oneAPI Collective Communications Library*\n      license: LicenseRef-Proprietary-Intel-Simplified-Software-License\n      license_family: Proprietary\n      license_file:\n        - oneccl-devel/info/licenses/license.txt\n        - oneccl-devel/info/licenses/tpp.txt\n      description: |\n        Intel\u00AE oneAPI Collective Communications Library*.\n        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n    test:\n      commands:\n        - ls -A1 $PREFIX/lib/*  # [unix]\n\nabout:\n  home: https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock\n  license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools\n  license_family: Proprietary\n  summary: 'Repackaged Intel\u00AE compilers and runtimes.'\n\nextra:\n  recipe-maintainers:\n    - napetrov\n    - tomashek\n    - oleksandr-pavlyk\n    - ZzEeKkAa\n",
 "req": {
  "__set__": true,
  "elements": [
   "_openmp_mutex",
   "binutils_impl_linux-64",
   "binutils_linux-64",
   "c_compiler_stub",
   "c_stdlib_stub",
   "cxx_compiler_stub",
   "dpcpp-cpp-rt",
   "dpcpp_impl_linux-64",
   "dpcpp_impl_win-64",
   "intel-cmplr-lib-rt",
   "intel-cmplr-lib-ur",
   "intel-cmplr-lic-rt",
   "intel-opencl-rt",
   "intel-sycl-rt",
   "khronos-opencl-icd-loader",
   "level-zero-devel",
   "libgcc-devel_linux-64",
   "libstdcxx-devel_linux-64",
   "libxml2",
   "llvm-openmp",
   "mpich",
   "ocl-icd",
   "patchelf",
   "python",
   "sysroot_linux-64",
   "tbb-devel",
   "vs_win-64",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "intel-cmplr-lic-rt",
    "patchelf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compiler-activation",
    "ctng-compilers",
    "cxx_compiler_stub",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-compiler-repack",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "khronos-opencl-icd-loader",
    "level-zero-devel",
    "libxml2",
    "linux-sysroot",
    "llvm-openmp",
    "mpich",
    "ocl-icd",
    "openmp",
    "python",
    "tbb-devel",
    "vc",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex",
    "binutils_impl_linux-64",
    "binutils_linux-64",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compiler-activation",
    "ctng-compilers",
    "cxx_compiler_stub",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "dpcpp_impl_win-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-compiler-repack",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "libgcc-devel_linux-64",
    "libstdcxx-devel_linux-64",
    "linux-sysroot",
    "llvm-openmp",
    "openmp",
    "sysroot_linux-64",
    "vc",
    "vs_win-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "strong_exports": true,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "intel-cmplr-lic-rt",
    "patchelf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "_openmp_mutex * *_llvm",
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "khronos-opencl-icd-loader",
    "level-zero-devel",
    "libxml2",
    "llvm-openmp",
    "mpich",
    "ocl-icd",
    "python",
    "tbb-devel 2021.*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_openmp_mutex * *_llvm",
    "binutils_impl_linux-64 >=2.30",
    "binutils_linux-64 >=2.30",
    "dpcpp-cpp-rt",
    "dpcpp_impl_linux-64",
    "dpcpp_impl_win-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "libgcc-devel_linux-64 >=7.5.0",
    "libstdcxx-devel_linux-64 >=7.5.0",
    "llvm-openmp",
    "sysroot_linux-64",
    "vs_win-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 },
 "url": "https://software.repos.intel.com/python/conda/linux-64/intel-cmplr-lic-rt-2024.2.0-intel_978.tar.bz2",
 "version": "2024.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/intel-compiler-repack.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock",
   "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
   "license_family": "Proprietary",
   "summary": "Repackaged Intel\u00AE compilers and runtimes."
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "978"
  },
  "extra": {
   "recipe-maintainers": [
    "napetrov",
    "tomashek",
    "oleksandr-pavlyk",
    "ZzEeKkAa"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lic-rt/info/licenses/license.txt",
      "intel-cmplr-lic-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lic-rt"
     ]
    },
    "name": "intel-cmplr-lic-rt",
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-rt/info/licenses/license.txt",
      "intel-cmplr-lib-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-rt"
     ]
    },
    "name": "intel-cmplr-lib-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "intel-cmplr-lic-rt"
     ],
     "host": [
      "zlib",
      "intel-cmplr-lic-rt"
     ],
     "run": []
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE C++ Compiler Classic.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-cmplr-lib-ur/info/licenses/license.txt",
      "intel-cmplr-lib-ur/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE C++ Compiler Classic"
    },
    "build": {
     "run_exports": [
      "intel-cmplr-lib-ur"
     ]
    },
    "name": "intel-cmplr-lib-ur",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ],
     "run": [
      "intel-cmplr-lib-rt",
      "intel-cmplr-lic-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel End User License Agreement for Developer Tools.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-sycl-rt/info/licenses/license.txt",
      "intel-sycl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel End User License Agreement for Developer Tools"
    },
    "build": {
     "run_exports": [
      "intel-sycl-rt"
     ]
    },
    "name": "intel-sycl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "khronos-opencl-icd-loader",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\licensing\\compiler\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta).\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-fortran-rt/info/licenses/license.txt",
      "intel-fortran-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE Fortran Compiler Classic and Intel\u00AE Fortran Compiler (Beta)"
    },
    "build": {
     "run_exports": [
      "intel-fortran-rt"
     ]
    },
    "name": "intel-fortran-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "intel-opencl-rt/info/licenses/license.txt",
      "intel-opencl-rt/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE CPU Runtime for OpenCL(TM) Applications"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports": [
      "python_abi",
      "python"
     ],
     "run_exports": [
      "intel-opencl-rt"
     ]
    },
    "name": "intel-opencl-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "tbb-devel 2021.*",
      "khronos-opencl-icd-loader",
      "zlib",
      "libxml2",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "python"
     ],
     "run": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt"
     ]
    },
    "script": "opencl-rt-bld.bat",
    "test": {
     "commands": [
      "type %PREFIX%\\Library\\bin\\intel-ocl-cpu\\cl.cfg",
      "curl -O https://raw.githubusercontent.com/inducer/pyopencl/v2021.2.13/examples/demo.py",
      "set PYOPENCL_CTX=intel",
      "python demo.py"
     ],
     "requires": [
      "pyopencl",
      "curl"
     ]
    }
   },
   {
    "about": {
     "description": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp-cpp-rt/info/licenses/license.txt",
      "dpcpp-cpp-rt/info/licenses/tpp.txt"
     ],
     "summary": "Runtime for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": null,
    "name": "dpcpp-cpp-rt",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt",
      "khronos-opencl-icd-loader"
     ],
     "run": [
      "llvm-openmp",
      "intel-cmplr-lic-rt",
      "intel-cmplr-lib-rt",
      "intel-cmplr-lib-ur",
      "intel-opencl-rt",
      "intel-sycl-rt"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*"
     ]
    }
   },
   {
    "about": {
     "description": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "binary_relocation": false,
     "ignore_run_exports_from": [
      "vs_win-64"
     ],
     "overlinking_ignore_patterns": [
      "**"
     ],
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_impl_win-64",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "zlib",
      "libxml2",
      "khronos-opencl-icd-loader",
      "dpcpp-cpp-rt",
      "llvm-openmp"
     ],
     "run": [
      "dpcpp-cpp-rt",
      "vs_win-64"
     ]
    },
    "script": "repack.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icx --version",
      "icpx --version"
     ]
    }
   },
   {
    "about": {
     "description": "Activation for Intel\u00AE oneAPI DPC++/C++ Compiler.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneapi-dpcpp-cpp-compiler-dev-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools",
     "license_family": "Proprietary",
     "license_file": [
      "dpcpp_impl_win-64/info/licenses/license.txt",
      "dpcpp_impl_win-64/info/licenses/tpp.txt"
     ],
     "summary": "Implementation for Intel\u00AE oneAPI DPC++/C++ Compiler"
    },
    "build": {
     "run_exports": {
      "strong": [
       "dpcpp-cpp-rt"
      ]
     }
    },
    "name": "dpcpp_win-64",
    "requirements": {
     "run": [
      "dpcpp_impl_win-64",
      "vs_win-64"
     ]
    },
    "script": "install_activate.bat",
    "test": {
     "commands": [
      "dir %PREFIX%\\Library\\bin\\*",
      "dir %PREFIX%\\Library\\lib\\*",
      "icpx -fsycl simple.cpp -I%PREFIX%\\include -o simple.exe"
     ],
     "files": [
      "simple.cpp"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ]
    }
   },
   {
    "about": {
     "description": "Intel\u00AE oneAPI Collective Communications Library*.\nThis package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.\n",
     "dev_url": "https://software.intel.com/content/www/us/en/develop/documentation/oneccl-developer-guide-and-reference/top.html",
     "doc_url": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/oneccl.htm",
     "home": "https://software.intel.com/content/www/us/en/develop/tools.html",
     "license": "LicenseRef-Proprietary-Intel-Simplified-Software-License",
     "license_family": "Proprietary",
     "license_file": [
      "oneccl-devel/info/licenses/license.txt",
      "oneccl-devel/info/licenses/tpp.txt"
     ],
     "summary": "Intel\u00AE oneAPI Collective Communications Library*"
    },
    "build": {
     "missing_dso_whitelist": [
      "**/libfabric.so.1",
      "**/libze_loader.so.1"
     ],
     "number": "299",
     "skip": true
    },
    "name": "oneccl-devel",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub"
     ],
     "host": [
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt",
      "intel-sycl-rt",
      "llvm-openmp"
     ],
     "run": [
      "intel-sycl-rt",
      "intel-cmplr-lib-rt",
      "dpcpp-cpp-rt"
     ]
    },
    "test": {
     "commands": null
    },
    "version": "2021.13.0"
   }
  ],
  "package": {
   "name": "intel-compiler-repack",
   "version": "2024.2.0"
  },
  "source": [
   {
    "folder": "intel-cmplr-lic-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lic-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lib-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-cmplr-lib-ur",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-cmplr-lib-ur-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-sycl-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-sycl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-fortran-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-fortran-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "intel-opencl-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/intel-opencl-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp-cpp-rt",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp-cpp-rt-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_impl_win-64",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp_impl_win-64-2024.2.0-intel_978.tar.bz2"
   },
   {
    "folder": "dpcpp_win-64",
    "url": "https://software.repos.intel.com/python/conda/win-64/dpcpp_win-64-2024.2.0-intel_978.tar.bz2"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "intel-cmplr-lic-rt"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "dpcpp-cpp-rt",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "khronos-opencl-icd-loader",
    "libxml2",
    "llvm-openmp",
    "python",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dpcpp-cpp-rt",
    "dpcpp_impl_win-64",
    "intel-cmplr-lib-rt",
    "intel-cmplr-lib-ur",
    "intel-cmplr-lic-rt",
    "intel-opencl-rt",
    "intel-sycl-rt",
    "llvm-openmp",
    "vs_win-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "curl",
    "cxx_compiler_stub",
    "pyopencl"
   ]
  }
 }
}