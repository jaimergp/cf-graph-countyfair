{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "fenics-ffcx",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
   "dev_url": "https://github.com/fenics/ffcx",
   "doc_url": "https://docs.fenicsproject.org/ffcx/v0.8.0/",
   "home": "https://fenicsproject.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING.LESSER",
   "summary": "The FEniCSx Form Compiler"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "fenics-ffcx",
   "recipe-maintainers": [
    "minrk"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "c_compiler_stub"
     ],
     "noarch": "generic"
    },
    "name": "fenics-ufcx",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "c_compiler_stub",
      "c_stdlib_stub"
     ]
    },
    "script": "build-ufcx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/ufcx.h",
      "pkg-config --cflags ufcx"
     ],
     "files": [
      "test-ufcx"
     ],
     "requires": [
      "pkg-config",
      "cmake",
      "make",
      "cxx_compiler_stub"
     ],
     "script": "test-ufcx.sh"
    }
   },
   {
    "build": {
     "noarch": "python",
     "script": "$PYTHON -m pip install -vv --no-deps ."
    },
    "name": "fenics-ffcx",
    "requirements": {
     "host": [
      "python >=3.9",
      "pip",
      "setuptools >=62",
      "wheel"
     ],
     "run": [
      "python >=3.9",
      "setuptools",
      "numpy >=1.21",
      "cffi",
      "fenics-basix 0.8.*",
      "fenics-ufl 2024.1.*"
     ]
    },
    "test": {
     "commands": [
      "pytest -v test/test_jit_expression.py"
     ],
     "imports": [
      "ffcx"
     ],
     "requires": [
      "pip",
      "pytest >=6",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "source_files": [
      "test"
     ]
    }
   }
  ],
  "package": {
   "name": "fenics-ffcx-ufcx",
   "version": "0.8.0"
  },
  "source": {
   "sha256": "8a854782dbd119ec1c23c4522a2134d5281e7f1bd2f37d64489f75da055282e3",
   "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.8.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "fenics-basix",
    "fenics-ufl",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pip",
    "pkg-config",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
   "dev_url": "https://github.com/fenics/ffcx",
   "doc_url": "https://docs.fenicsproject.org/ffcx/v0.8.0/",
   "home": "https://fenicsproject.org",
   "license": "LGPL-3.0-or-later",
   "license_family": "LGPL",
   "license_file": "COPYING.LESSER",
   "summary": "The FEniCSx Form Compiler"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "fenics-ffcx",
   "recipe-maintainers": [
    "minrk"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "c_compiler_stub"
     ],
     "noarch": "generic"
    },
    "name": "fenics-ufcx",
    "requirements": {
     "build": [
      "cmake",
      "make",
      "c_compiler_stub",
      "c_stdlib_stub"
     ]
    },
    "script": "build-ufcx.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/ufcx.h",
      "pkg-config --cflags ufcx"
     ],
     "files": [
      "test-ufcx"
     ],
     "requires": [
      "pkg-config",
      "cmake",
      "make",
      "cxx_compiler_stub"
     ],
     "script": "test-ufcx.sh"
    }
   },
   {
    "build": {
     "noarch": "python",
     "script": "$PYTHON -m pip install -vv --no-deps ."
    },
    "name": "fenics-ffcx",
    "requirements": {
     "host": [
      "python >=3.9",
      "pip",
      "setuptools >=62",
      "wheel"
     ],
     "run": [
      "python >=3.9",
      "setuptools",
      "numpy >=1.21",
      "cffi",
      "fenics-basix 0.8.*",
      "fenics-ufl 2024.1.*"
     ]
    },
    "test": {
     "commands": [
      "pytest -v test/test_jit_expression.py"
     ],
     "imports": [
      "ffcx"
     ],
     "requires": [
      "pip",
      "pytest >=6",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "source_files": [
      "test"
     ]
    }
   }
  ],
  "package": {
   "name": "fenics-ffcx-ufcx",
   "version": "0.8.0"
  },
  "source": {
   "sha256": "8a854782dbd119ec1c23c4522a2134d5281e7f1bd2f37d64489f75da055282e3",
   "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.8.0.tar.gz"
  }
 },
 "name": "fenics-ffcx-ufcx",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fenics-ffcx",
   "fenics-ufcx"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/fenics-ffcx.json"
 },
 "raw_meta_yaml": "{% set name = \"fenics-ffcx-ufcx\" %}\n{% set version = \"0.8.0\" %}\n\n# pins are usually updated on minor bumps:\n# basix is currently co-versioned with ffcx\n{% set major_minor = version.rsplit(\".\", 1)[0] %}\n{% set ufl_version = \"2024.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/fenics/ffcx/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 8a854782dbd119ec1c23c4522a2134d5281e7f1bd2f37d64489f75da055282e3\nbuild:\n  number: 0\n  skip: true  # [win]\n\noutputs:\n  - name: fenics-ufcx\n    script: build-ufcx.sh\n    build:\n      noarch: generic\n      ignore_run_exports:\n        # we don't use the compiler, but cmake still needs it\n        - {{ compiler(\"c\") }}  # [linux]\n    requirements:\n      build:\n        - cmake\n        - make\n        - {{ compiler(\"c\") }}  # [linux]\n        - {{ stdlib(\"c\") }}    # [linux]\n    test:\n      script: test-ufcx.sh\n      files:\n        - test-ufcx\n      requires:\n        - pkg-config\n        - cmake\n        - make\n        - {{ compiler(\"cxx\") }}\n      commands:\n        - test -f ${PREFIX}/include/ufcx.h\n        - pkg-config --cflags ufcx\n  - name: fenics-ffcx\n    build:\n      script: $PYTHON -m pip install -vv --no-deps .\n      noarch: python\n    requirements:\n      host:\n        - python >=3.9\n        - pip\n        - setuptools >=62\n        - wheel\n      run:\n        - python >=3.9\n        - setuptools\n        - numpy >=1.21\n        - cffi\n        - fenics-basix {{ major_minor }}.*\n        - fenics-ufl {{ ufl_version }}.*\n    test:\n      source_files:\n        - test\n      requires:\n        - pip\n        - pytest >=6\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      imports:\n        - ffcx\n      commands:\n        - pytest -v test/test_jit_expression.py\n\nabout:\n  home: https://fenicsproject.org\n  summary: The FEniCSx Form Compiler\n  description: |\n    FFCx is a new version of the FEniCS Form Compiler.\n    It is being actively developed and is compatible with DOLFINx.\n\n    FFCx is a compiler for finite element variational forms.\n    From a high-level description of the form in the Unified Form Language (UFL),\n    it generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\n    In particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\n    FFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  doc_url: https://docs.fenicsproject.org/ffcx/v{{ version }}/\n  dev_url: https://github.com/fenics/ffcx\n\nextra:\n  feedstock-name: fenics-ffcx\n  recipe-maintainers:\n    - minrk\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "cffi",
   "cmake",
   "fenics-basix",
   "fenics-ufl",
   "make",
   "numpy",
   "pip",
   "python",
   "setuptools",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "cxx_compiler_stub",
    "fenics-basix",
    "fenics-ufl",
    "numpy",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pip",
    "pkg-config",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.9",
    "setuptools >=62",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cffi",
    "fenics-basix 0.8.*",
    "fenics-ufl 2024.1.*",
    "numpy >=1.21",
    "python >=3.9",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make",
    "pip",
    "pkg-config",
    "pytest >=6"
   ]
  }
 },
 "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.8.0.tar.gz",
 "version": "0.8.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/fenics-ffcx.json"
 }
}