{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "conda-pypi",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/conda-incubator/conda-pypi",
   "doc_url": "https://conda-incubator.github.io/conda-pypi",
   "home": "https://github.com/conda-incubator/conda-pypi",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Better PyPI interoperability for the conda ecosystem"
  },
  "build": {
   "number": "1",
   "script": [
    "set -x",
    "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
    "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "jezdez"
   ]
  },
  "package": {
   "name": "conda-pypi",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "hatchling >=1.12.2",
    "hatch-vcs >=0.2.0"
   ],
   "run": [
    "python",
    "conda >=23.9.0",
    "pip >=23.0.1",
    "grayskull",
    "packaging"
   ]
  },
  "source": {
   "sha256": "e8b923e3cbb7f2df83b73a65d272e268a72dea92381236092fa9c776f616715c",
   "url": "https://pypi.io/packages/source/c/conda-pypi/conda_pypi-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "conda pip --help",
    "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
    "pip install requests && exit 1 || exit 0"
   ],
   "imports": [
    "conda_pypi",
    "conda_pypi.main"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatch-vcs",
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "grayskull",
    "packaging",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/conda-incubator/conda-pypi",
   "doc_url": "https://conda-incubator.github.io/conda-pypi",
   "home": "https://github.com/conda-incubator/conda-pypi",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Better PyPI interoperability for the conda ecosystem"
  },
  "build": {
   "number": "1",
   "script": [
    "set -x",
    "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
    "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\"",
    "@ECHO ON"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "jezdez"
   ]
  },
  "package": {
   "name": "conda-pypi",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "hatchling >=1.12.2",
    "hatch-vcs >=0.2.0"
   ],
   "run": [
    "python",
    "conda >=23.9.0",
    "pip >=23.0.1",
    "grayskull",
    "packaging"
   ]
  },
  "source": {
   "sha256": "e8b923e3cbb7f2df83b73a65d272e268a72dea92381236092fa9c776f616715c",
   "url": "https://pypi.io/packages/source/c/conda-pypi/conda_pypi-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "conda pip --help",
    "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
    "pip install requests && exit 1 || exit 0"
   ],
   "imports": [
    "conda_pypi",
    "conda_pypi.main"
   ]
  }
 },
 "name": "conda-pypi",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/conda-incubator/conda-pypi",
   "doc_url": "https://conda-incubator.github.io/conda-pypi",
   "home": "https://github.com/conda-incubator/conda-pypi",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Better PyPI interoperability for the conda ecosystem"
  },
  "build": {
   "number": "1",
   "script": [
    "set -x",
    "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
    "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "jezdez"
   ]
  },
  "package": {
   "name": "conda-pypi",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "hatchling >=1.12.2",
    "hatch-vcs >=0.2.0"
   ],
   "run": [
    "python",
    "conda >=23.9.0",
    "pip >=23.0.1",
    "grayskull",
    "packaging"
   ]
  },
  "source": {
   "sha256": "e8b923e3cbb7f2df83b73a65d272e268a72dea92381236092fa9c776f616715c",
   "url": "https://pypi.io/packages/source/c/conda-pypi/conda_pypi-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "conda pip --help",
    "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
    "pip install requests && exit 1 || exit 0"
   ],
   "imports": [
    "conda_pypi",
    "conda_pypi.main"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatch-vcs",
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "grayskull",
    "packaging",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "conda-pypi"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/conda-pypi.json"
 },
 "raw_meta_yaml": "{% set name = \"conda-pypi\" %}\n{% set version = \"0.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/conda_pypi-{{ version }}.tar.gz\n  sha256: e8b923e3cbb7f2df83b73a65d272e268a72dea92381236092fa9c776f616715c\n\nbuild:\n  skip: true  # [py<38]\n  # can't be noarch because we can't place EXTERNALLY-MANAGED in stdlib (first level is site-packages)\n  number: 1\n  script:\n    - set -x  # [unix]\n    - \"@ECHO ON\"  # [win]\n    - {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv\n    - {{ PYTHON }} -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\"\n\nrequirements:\n  host:\n    - python\n    - pip\n    - hatchling >=1.12.2\n    - hatch-vcs >=0.2.0\n    - importlib_resources  # [py<39]\n  run:\n    - python\n    - conda >=23.9.0\n    - pip >=23.0.1\n    - grayskull\n    - importlib_resources  # [py<39]\n    - packaging\n\ntest:\n  imports:\n    - conda_pypi\n    - conda_pypi.main\n  commands:\n    - conda pip --help\n    - python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"\n    - pip install requests && exit 1 || exit 0\n\nabout:\n  home: https://github.com/conda-incubator/conda-pypi\n  license: MIT\n  license_file: LICENSE\n  summary: Better PyPI interoperability for the conda ecosystem\n  dev_url: https://github.com/conda-incubator/conda-pypi\n  doc_url: https://conda-incubator.github.io/conda-pypi\n\nextra:\n  recipe-maintainers:\n    - jaimergp\n    - jezdez\n",
 "req": {
  "__set__": true,
  "elements": [
   "conda",
   "grayskull",
   "hatch-vcs",
   "hatchling",
   "packaging",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatch-vcs",
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "grayskull",
    "packaging",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatch-vcs >=0.2.0",
    "hatchling >=1.12.2",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda >=23.9.0",
    "grayskull",
    "packaging",
    "pip >=23.0.1",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/c/conda-pypi/conda_pypi-0.1.1.tar.gz",
 "version": "0.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/conda-pypi.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/conda-incubator/conda-pypi",
   "doc_url": "https://conda-incubator.github.io/conda-pypi",
   "home": "https://github.com/conda-incubator/conda-pypi",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Better PyPI interoperability for the conda ecosystem"
  },
  "build": {
   "number": "1",
   "script": [
    "@ECHO ON",
    "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
    "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jaimergp",
    "jezdez"
   ]
  },
  "package": {
   "name": "conda-pypi",
   "version": "0.1.1"
  },
  "requirements": {
   "host": [
    "python",
    "pip",
    "hatchling >=1.12.2",
    "hatch-vcs >=0.2.0"
   ],
   "run": [
    "python",
    "conda >=23.9.0",
    "pip >=23.0.1",
    "grayskull",
    "packaging"
   ]
  },
  "source": {
   "sha256": "e8b923e3cbb7f2df83b73a65d272e268a72dea92381236092fa9c776f616715c",
   "url": "https://pypi.io/packages/source/c/conda-pypi/conda_pypi-0.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "conda pip --help",
    "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
    "pip install requests && exit 1 || exit 0"
   ],
   "imports": [
    "conda_pypi",
    "conda_pypi.main"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatch-vcs",
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "conda",
    "grayskull",
    "packaging",
    "pip",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}