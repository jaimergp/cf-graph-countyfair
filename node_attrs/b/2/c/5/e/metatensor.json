{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "metatensor",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "THIRDPARTY_LICENSES.yaml"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "cmake",
    "ninja",
    "cargo-bundle-licenses"
   ],
   "run": []
  },
  "source": {
   "patches": [
    "mktemp-mkdir.patch"
   ],
   "sha256": "8ecac73604d79d7f3e46880cd14370d85b26ade3c9aa8ab9594678e8f3083a4f",
   "url": "https://github.com/lab-cosmo/metatensor/releases/download/metatensor-core-v0.1.5/metatensor-core-cxx-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmetatensor$SHLIB_EXT"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cargo-bundle-licenses",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "THIRDPARTY_LICENSES.yaml"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "cmake",
    "ninja",
    "cargo-bundle-licenses"
   ],
   "run": [
    "__osx >=10.12"
   ]
  },
  "source": {
   "patches": [
    "mktemp-mkdir.patch"
   ],
   "sha256": "8ecac73604d79d7f3e46880cd14370d85b26ade3c9aa8ab9594678e8f3083a4f",
   "url": "https://github.com/lab-cosmo/metatensor/releases/download/metatensor-core-v0.1.5/metatensor-core-cxx-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmetatensor$SHLIB_EXT",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\metatensor.dll exit 1"
   ]
  }
 },
 "name": "metatensor",
 "osx_64_meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "THIRDPARTY_LICENSES.yaml"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "cmake",
    "ninja",
    "cargo-bundle-licenses"
   ],
   "run": [
    "__osx >=10.12"
   ]
  },
  "source": {
   "patches": [
    "mktemp-mkdir.patch"
   ],
   "sha256": "8ecac73604d79d7f3e46880cd14370d85b26ade3c9aa8ab9594678e8f3083a4f",
   "url": "https://github.com/lab-cosmo/metatensor/releases/download/metatensor-core-v0.1.5/metatensor-core-cxx-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libmetatensor$SHLIB_EXT"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cargo-bundle-licenses",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "metatensor"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "raw_meta_yaml": "{% set version = \"0.1.5\" %}\n{% set url_base = \"https://github.com/lab-cosmo/metatensor/releases/download\" %}\n\npackage:\n  name: metatensor\n  version: {{ version }}\n\nsource:\n  url: {{ url_base }}/metatensor-core-v{{ version }}/metatensor-core-cxx-{{ version }}.tar.gz\n  sha256: 8ecac73604d79d7f3e46880cd14370d85b26ade3c9aa8ab9594678e8f3083a4f\n  patches:\n    - mktemp-mkdir.patch\n\nbuild:\n  number: 0\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('rust') }}\n    - cmake\n    - ninja\n    - cargo-bundle-licenses\n  run:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libmetatensor$SHLIB_EXT  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\metatensor.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/lab-cosmo/metatensor\n  summary: 'Self-describing sparse tensor data format for atomistic machine learning and beyond'\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file:\n    - LICENSE\n    - THIRDPARTY_LICENSES.yaml\n  doc_url: https://lab-cosmo.github.io/metatensor/\n\nextra:\n  recipe-maintainers:\n    - Luthaf\n    - PicoCentauri\n",
 "req": {
  "__set__": true,
  "elements": [
   "__osx",
   "cargo-bundle-licenses",
   "cmake",
   "cxx_compiler_stub",
   "ninja",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cargo-bundle-licenses",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cargo-bundle-licenses",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx >=10.12"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/lab-cosmo/metatensor/releases/download/metatensor-core-v0.1.5/metatensor-core-cxx-0.1.5.tar.gz",
 "version": "0.1.5",
 "win_64_meta_yaml": {
  "about": {
   "doc_url": "https://lab-cosmo.github.io/metatensor/",
   "home": "https://github.com/lab-cosmo/metatensor",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "THIRDPARTY_LICENSES.yaml"
   ],
   "summary": "Self-describing sparse tensor data format for atomistic machine learning and beyond"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "Luthaf",
    "PicoCentauri"
   ]
  },
  "package": {
   "name": "metatensor",
   "version": "0.1.5"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "rust_compiler_stub",
    "cmake",
    "ninja",
    "cargo-bundle-licenses"
   ],
   "run": []
  },
  "source": {
   "patches": [
    "mktemp-mkdir.patch"
   ],
   "sha256": "8ecac73604d79d7f3e46880cd14370d85b26ade3c9aa8ab9594678e8f3083a4f",
   "url": "https://github.com/lab-cosmo/metatensor/releases/download/metatensor-core-v0.1.5/metatensor-core-cxx-0.1.5.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\metatensor.dll exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cargo-bundle-licenses",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}