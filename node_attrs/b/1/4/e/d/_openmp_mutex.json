{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  },
  "travis": {
   "secure": {
    "BINSTAR_TOKEN": "BElrzjls8ReWq2L9nYb8MUuqMx4LJZpbyfnbwWDPlFrT/6G8q6Lr2X4QJxIAz/m1jEPRl7NlL1j6bfJnbJMWDMYULDVbzurWk9Ss0Rb5nB1vowoWncHUW1ZOtXq4G4QHWjKXoqcPrt767LrBfjRxOf+fC7zzaeJJxWnJ/Qa0A/pWUjl74dgcokazXTa6m4y4IObMvsjD5KBjnm1D7006k59nROEyZqlhQJOzXSBREYVqfs9GdfGkZMjn8apXTP5/GqmK7QPucxoraWmOwDP8OFWhUCNd+5ofVTFX86dEAfa+ajjGvWefTQkkNw8A85GFC4SFQyeB2NRviU7TrrUXTCZ76HJY5YL6Wr4gibM+Z6dOKgTe/ZfdcbbZhPs2lwf24fjTGhZc0FMqNzeqlKJWnSxpdm+zy5Xye9elglWYS4ZbO2eN4mHX9aVnQ9ft/W1gIa6jfteNq4T3ZsW/pz4p1xfjsvAEvaFqTK7KXFTeHdeuTUjcbEOXrVL2J45llCvVjsDwXSqqpN+jfp8xDplt5Zp0yOE6WYO0pJBKd88qNFFUGP0+EIK+GEQeezw7yqVMok1l0/26kIHKdVPOMmxCTnw7O/83TlLrQRub3pQthuuJioWS9Wn0O9V0zkEm5s+0/8GPsV4GesKzKKYX5Mv5UmEXhQd9fGqnGkZ51zS6k90="
   }
  }
 },
 "feedstock_name": "_openmp_mutex",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/openmp-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "OpenMP Implementation Mutex"
  },
  "build": {
   "always_include_files": [
    "lib/libgomp.so.1"
   ],
   "ignore_run_exports": [
    "_openmp_mutex"
   ],
   "number": "2",
   "run_exports": [
    "_openmp_mutex"
   ],
   "string": "2_kmp_llvm"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "beckermr"
   ]
  },
  "package": {
   "name": "_openmp_mutex",
   "version": "4.5"
  },
  "requirements": {
   "host": [],
   "run": [
    "llvm-openmp >=9.0.1",
    "_libgcc_mutex 0.1 conda_forge"
   ]
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
   ],
   "files": [
    "omp_hello.c"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "_libgcc_mutex",
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/openmp-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "OpenMP Implementation Mutex"
  },
  "build": {
   "always_include_files": [
    "lib/libgomp.so.1"
   ],
   "ignore_run_exports": [
    "_openmp_mutex"
   ],
   "number": "2",
   "run_exports": [
    "_openmp_mutex"
   ],
   "string": "2_kmp_llvm"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "beckermr"
   ]
  },
  "package": {
   "name": "_openmp_mutex",
   "version": "4.5"
  },
  "requirements": {
   "host": [],
   "run": [
    "llvm-openmp >=9.0.1"
   ]
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
   ],
   "files": [
    "omp_hello.c"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/openmp-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "OpenMP Implementation Mutex"
  },
  "build": {
   "always_include_files": [
    "lib/libgomp.so.1"
   ],
   "ignore_run_exports": [
    "_openmp_mutex"
   ],
   "number": "2",
   "run_exports": [
    "_openmp_mutex"
   ],
   "string": "2_kmp_llvm"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "beckermr"
   ]
  },
  "package": {
   "name": "_openmp_mutex",
   "version": "4.5"
  },
  "requirements": {
   "host": [],
   "run": [
    "llvm-openmp >=9.0.1",
    "_libgcc_mutex 0.1 conda_forge"
   ]
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
   ],
   "files": [
    "omp_hello.c"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "_libgcc_mutex",
    "llvm-openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/openmp-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "OpenMP Implementation Mutex"
  },
  "build": {
   "always_include_files": [
    "lib/libgomp.so.1"
   ],
   "ignore_run_exports": [
    "_openmp_mutex"
   ],
   "number": "2",
   "run_exports": [
    "_openmp_mutex"
   ],
   "string": "2_kmp_llvm"
  },
  "extra": {
   "recipe-maintainers": [
    "isuruf",
    "beckermr"
   ]
  },
  "package": {
   "name": "_openmp_mutex",
   "version": "4.5"
  },
  "requirements": {
   "host": [],
   "run": [
    "llvm-openmp >=9.0.1",
    "_libgcc_mutex 0.1 conda_forge"
   ]
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libgomp.so.1",
    "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
    "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
    "ldd omp_hello",
    "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
   ],
   "files": [
    "omp_hello.c"
   ],
   "requires": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "name": "_openmp_mutex",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "_openmp_mutex"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/_openmp_mutex.json"
 },
 "raw_meta_yaml": "{% set name = \"_openmp_mutex\" %}\n{% set version = \"4.5\" %}\n{% set build = \"2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  number: {{ build }}\n  string: {{ build }}_kmp_llvm\n  skip: true  # [not linux]\n  always_include_files:\n    # this major version has to match the libgomp version from gcc\n    - lib/libgomp.so.1\n  # Remove track_features because directly depending on mutex=*=*llvm\n  # would make the downstream package have low priority\n  # For eg: newer blas packages are not used by the solver\n  # track_features:\n  #  - llvm_openmp\n  ignore_run_exports:\n    - _openmp_mutex\n  run_exports:\n    - {{ pin_subpackage('_openmp_mutex', max_pin=None) }}\n\nrequirements:\n  host:\n  run:\n    - llvm-openmp >=9.0.1\n    - _libgcc_mutex {{ _libgcc_mutex }}  # [linux64 or ppc64le]\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  commands:\n    - test -f $PREFIX/lib/libgomp.so.1\n    - if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi\n    - rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n    - rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n  files:\n    - omp_hello.c\n\nabout:\n  summary: OpenMP Implementation Mutex\n  license: BSD-3-Clause\n  license_file: LICENSE\n  home: https://github.com/conda-forge/openmp-feedstock\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - beckermr\n",
 "req": {
  "__set__": true,
  "elements": [
   "_libgcc_mutex",
   "llvm-openmp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "_libgcc_mutex",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "_libgcc_mutex 0.1 conda_forge",
    "llvm-openmp >=9.0.1"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "url": null,
 "version": "4.5",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/_openmp_mutex.json"
 }
}