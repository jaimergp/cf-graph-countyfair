{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "microarch-level",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/microarch-level-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Meta package to build conda recipes with microarchitecture levels"
  },
  "build": {
   "noarch": "generic",
   "number": "1",
   "string": "1_power10le"
  },
  "extra": {
   "feedstock-name": "microarch-level",
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   }
  ],
  "package": {
   "name": "microarch-level-split",
   "version": "10"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__archspec",
    "__unix"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/conda-forge/microarch-level-feedstock",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Meta package to build conda recipes with microarchitecture levels"
  },
  "build": {
   "noarch": "generic",
   "number": "1",
   "string": "1_power10le"
  },
  "extra": {
   "feedstock-name": "microarch-level",
   "recipe-maintainers": [
    "isuruf"
   ]
  },
  "outputs": [
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   },
   {
    "about": {
     "description": "The meta-package _ppc64le-microarch-level enforces the microarchitecture in the\nuser system.\n\nNote that a user would need the archspec conda package installed\nin the base environment where conda/mamba is run from.\n\nSee ppc64le-microarch-level for using this in conda recipes\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "_ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__archspec  1=power10le"
     ]
    }
   },
   {
    "about": {
     "description": "Use the meta-package ppc64le-microarch-level in requirements/build in conda\nrecipes to set up the compiler flags and set up the virtual package\nrequirements in the run requirements.\n\nWhen building packages on CI, level=4 will not be guaranteed, so\nyou can only use level<=3 to build.\n\nThe run_exports only has a lower bound and therefore a level=2\nbuild can be installed on a level=3 user system. A tighter bound\nis not added because we want to be able to test both level=2 and\nlevel=3 on a CI machine with level=3.\nTherefore in order to prioritise the highest level, use the build\nnumber to prioritise the level.\n\nOnly supported on Linux and macOS.\n",
     "home": "https://github.com/conda-forge/microarch-level-feedstock",
     "license": "BSD-3-Clause",
     "license_file": "LICENSE.txt",
     "summary": "Meta package to build conda recipes with microarchitecture levels"
    },
    "build": {
     "noarch": "generic",
     "number": "1",
     "run_exports": {
      "strong": [
       "_ppc64le-microarch-level >=10"
      ]
     },
     "string": "1_power10le"
    },
    "name": "ppc64le-microarch-level",
    "requirements": {
     "run": [
      "__unix"
     ]
    },
    "script": "install_scripts.sh"
   }
  ],
  "package": {
   "name": "microarch-level-split",
   "version": "10"
  }
 },
 "name": "microarch-level-split",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "_ppc64le-microarch-level",
   "ppc64le-microarch-level"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/microarch-level.json"
 },
 "raw_meta_yaml": "{% set number = 1 %}\n\npackage:\n  name: microarch-level-split\n  version: {{ level }}\n\nbuild:\n  number: {{ number }}\n  string: {{ number }}_{{ microarchitecture }}\n  noarch: generic\n\noutputs:\n  - name: _{{ family }}-microarch-level\n    build:\n      number: {{ number }}\n      string: {{ number }}_{{ microarchitecture }}\n      noarch: generic\n      run_exports:\n        strong:\n          - _{{ family }}-microarch-level >={{ level }}\n    requirements:\n      run:\n        - __archspec  1={{ microarchitecture }}\n\n    about:\n      home: https://github.com/conda-forge/microarch-level-feedstock\n      summary: 'Meta package to build conda recipes with microarchitecture levels'\n      description: |\n        The meta-package _{{ family }}-microarch-level enforces the microarchitecture in the\n        user system.\n    \n        Note that a user would need the archspec conda package installed\n        in the base environment where conda/mamba is run from.\n\n        See {{ family }}-microarch-level for using this in conda recipes\n      license: BSD-3-Clause\n      license_file: LICENSE.txt\n    \n  - name: {{ family }}-microarch-level\n    script: install_scripts.sh\n    build:\n      number: {{ number }}\n      string: {{ number }}_{{ microarchitecture }}\n      noarch: generic\n      run_exports:\n        strong:\n          - _{{ family }}-microarch-level >={{ level }}\n    requirements:\n      run:\n        - __unix\n    about:\n      home: https://github.com/conda-forge/microarch-level-feedstock\n      summary: 'Meta package to build conda recipes with microarchitecture levels'\n      description: |\n        Use the meta-package {{ family }}-microarch-level in requirements/build in conda\n        recipes to set up the compiler flags and set up the virtual package\n        requirements in the run requirements.\n    \n        When building packages on CI, level=4 will not be guaranteed, so\n        you can only use level<=3 to build.\n\n        The run_exports only has a lower bound and therefore a level=2\n        build can be installed on a level=3 user system. A tighter bound\n        is not added because we want to be able to test both level=2 and\n        level=3 on a CI machine with level=3.\n        Therefore in order to prioritise the highest level, use the build\n        number to prioritise the level.\n\n        Only supported on Linux and macOS.\n      license: BSD-3-Clause\n      license_file: LICENSE.txt\n\nabout:\n  home: https://github.com/conda-forge/microarch-level-feedstock\n  summary: 'Meta package to build conda recipes with microarchitecture levels'\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n\nextra:\n  feedstock-name: microarch-level\n  recipe-maintainers:\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "__archspec",
   "__unix"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__archspec",
    "__unix"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": true,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__archspec  1=power10le",
    "__unix"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "version": "10",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/microarch-level.json"
 }
}