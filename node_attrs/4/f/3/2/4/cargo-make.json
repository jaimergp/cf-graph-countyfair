{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "cargo-make",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.\nA task is a command, script, rust code, or other sub tasks to execute.\nTasks can have dependencies which are also tasks that will be executed before the task itself.\nWith a simple toml based configuration file, you can define a multi platform build script that\ncan run build, test, generate documentation, run bench tests, run security validations and more,\nexecuted by running a single command.\n",
   "doc_url": "https://sagiegurari.github.io/cargo-make/",
   "home": "https://github.com/sagiegurari/cargo-make",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Rust task runner and build tool."
  },
  "build": {
   "binary_relocation": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "package": {
   "name": "cargo-make",
   "version": "0.37.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "c4f36ed50ee2f6786a29c20567a70aedca5e0e101a7388f44de1ba5445f3ec3e",
   "url": "https://github.com/sagiegurari/cargo-make/archive/refs/tags/0.37.11.tar.gz"
  },
  "test": {
   "commands": [
    "cargo-make --help",
    "makers --help"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.\nA task is a command, script, rust code, or other sub tasks to execute.\nTasks can have dependencies which are also tasks that will be executed before the task itself.\nWith a simple toml based configuration file, you can define a multi platform build script that\ncan run build, test, generate documentation, run bench tests, run security validations and more,\nexecuted by running a single command.\n",
   "doc_url": "https://sagiegurari.github.io/cargo-make/",
   "home": "https://github.com/sagiegurari/cargo-make",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml",
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Rust task runner and build tool."
  },
  "build": {
   "binary_relocation": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "MementoRC",
    "MementoRC",
    "MementoRC"
   ]
  },
  "package": {
   "name": "cargo-make",
   "version": "0.37.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [],
   "run": [
    "__osx >=10.12"
   ]
  },
  "source": {
   "sha256": "c4f36ed50ee2f6786a29c20567a70aedca5e0e101a7388f44de1ba5445f3ec3e",
   "url": "https://github.com/sagiegurari/cargo-make/archive/refs/tags/0.37.11.tar.gz"
  },
  "test": {
   "commands": [
    "cargo-make --help",
    "makers --help",
    "cargo-make --help",
    "makers --help",
    "cargo-make --help",
    "makers --help"
   ]
  }
 },
 "name": "cargo-make",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.\nA task is a command, script, rust code, or other sub tasks to execute.\nTasks can have dependencies which are also tasks that will be executed before the task itself.\nWith a simple toml based configuration file, you can define a multi platform build script that\ncan run build, test, generate documentation, run bench tests, run security validations and more,\nexecuted by running a single command.\n",
   "doc_url": "https://sagiegurari.github.io/cargo-make/",
   "home": "https://github.com/sagiegurari/cargo-make",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Rust task runner and build tool."
  },
  "build": {
   "binary_relocation": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "package": {
   "name": "cargo-make",
   "version": "0.37.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [],
   "run": [
    "__osx >=10.12"
   ]
  },
  "source": {
   "sha256": "c4f36ed50ee2f6786a29c20567a70aedca5e0e101a7388f44de1ba5445f3ec3e",
   "url": "https://github.com/sagiegurari/cargo-make/archive/refs/tags/0.37.11.tar.gz"
  },
  "test": {
   "commands": [
    "cargo-make --help",
    "makers --help"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cargo-make"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cargo-make.json"
 },
 "raw_meta_yaml": "{% set name = \"cargo-make\" %}\n{% set version = \"0.37.11\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/sagiegurari/cargo-make/archive/refs/tags/{{ version }}.tar.gz\n  sha256: c4f36ed50ee2f6786a29c20567a70aedca5e0e101a7388f44de1ba5445f3ec3e\n\nbuild:\n  binary_relocation: false\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('rust') }}\n    - cargo-bundle-licenses\n  host:\n  run:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n\ntest:\n  commands:\n    - cargo-make --help\n    - makers --help\n\nabout:\n  home: https://github.com/sagiegurari/cargo-make\n  summary: 'Rust task runner and build tool.'\n  description: |\n    The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.\n    A task is a command, script, rust code, or other sub tasks to execute.\n    Tasks can have dependencies which are also tasks that will be executed before the task itself.\n    With a simple toml based configuration file, you can define a multi platform build script that\n    can run build, test, generate documentation, run bench tests, run security validations and more,\n    executed by running a single command.\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - THIRDPARTY.yml\n\n  doc_url: https://sagiegurari.github.io/cargo-make/\n\nextra:\n  recipe-maintainers:\n    - MementoRC\n",
 "req": {
  "__set__": true,
  "elements": [
   "__osx",
   "c_compiler_stub",
   "cargo-bundle-licenses",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "c_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx >=10.12"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/sagiegurari/cargo-make/archive/refs/tags/0.37.11.tar.gz",
 "version": "0.37.11",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cargo-make.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The cargo-make task runner enables to define and configure sets of tasks and run them as a flow.\nA task is a command, script, rust code, or other sub tasks to execute.\nTasks can have dependencies which are also tasks that will be executed before the task itself.\nWith a simple toml based configuration file, you can define a multi platform build script that\ncan run build, test, generate documentation, run bench tests, run security validations and more,\nexecuted by running a single command.\n",
   "doc_url": "https://sagiegurari.github.io/cargo-make/",
   "home": "https://github.com/sagiegurari/cargo-make",
   "license": "Apache-2.0",
   "license_file": [
    "LICENSE",
    "THIRDPARTY.yml"
   ],
   "summary": "Rust task runner and build tool."
  },
  "build": {
   "binary_relocation": false,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "package": {
   "name": "cargo-make",
   "version": "0.37.11"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "sha256": "c4f36ed50ee2f6786a29c20567a70aedca5e0e101a7388f44de1ba5445f3ec3e",
   "url": "https://github.com/sagiegurari/cargo-make/archive/refs/tags/0.37.11.tar.gz"
  },
  "test": {
   "commands": [
    "cargo-make --help",
    "makers --help"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}