{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "cppinterop",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libstdcxx-ng 12"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libstdcxx-ng 12"
   ],
   "run": [
    "libstdcxx-ng >=12"
   ],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libstdcxx-ng",
    "llvm",
    "llvmdev",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "clangdev",
    "libstdcxx-ng",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libstdcxx-ng"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libstdcxx-ng 12"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib",
    "zstd",
    "libstdcxx-ng 12"
   ],
   "run": [
    "libstdcxx-ng >=12"
   ],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libstdcxx-ng",
    "llvm",
    "llvmdev",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "libstdcxx-ng",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libstdcxx-ng"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev",
    "alexander-penev",
    "vgvassilev",
    "alexander-penev",
    "vgvassilev",
    "alexander-penev",
    "vgvassilev",
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libstdcxx-ng 12",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libstdcxx-ng 12",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libcxx 16",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libcxx 16",
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libstdcxx-ng 12",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib",
    "zstd",
    "libstdcxx-ng 12",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib"
   ],
   "run": [
    "libstdcxx-ng >=12",
    "libstdcxx-ng >=12",
    "libcxx 16",
    "libcxx 16"
   ],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   },
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   },
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   },
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   },
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}",
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}",
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}",
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}",
    "if not exist %LIBRARY_BIN%\\\\clangCppInterOp.dll exit 1"
   ]
  }
 },
 "name": "cppinterop",
 "osx_64_meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libcxx 16"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16"
   ],
   "run": [
    "libcxx 16"
   ],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libcxx",
    "llvm",
    "llvmdev",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "clangdev",
    "libcxx",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "make",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs",
    "libcxx 16"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16"
   ],
   "run": [
    "libcxx 16"
   ],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libcxx",
    "llvm",
    "llvmdev",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "libcxx",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cppinterop"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cppinterop.json"
 },
 "raw_meta_yaml": "{% set name = \"CppInterOp\" %}\n{% set build_number = 3 %}\n{% set version = \"1.2.0\" %}\n{% set revision_tag = \"v\"+version %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/compiler-research/CppInterOp/archive/refs/tags/{{ revision_tag }}.tar.gz\n    sha256: b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806\n    folder: cppinterop\n    patches:\n      - patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch\n      - patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch\n      - patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch\n      - patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch\n  - path: patches\n    folder: add_patches\n\nbuild:\n  number: {{ build_number }}\n  string: clang{{ (clangdev or \"None\").split(\".\")[0] }}_repl_h{{ PKG_HASH }}_{{ build_number }}\n\nrequirements:\n  build:\n    - cmake\n    #- clang  # [osx]\n    - make  # [unix]\n    - ninja  # [win]\n    - {{ compiler('cxx') }}\n    - llvm {{ clangdev }}\n    - llvmdev {{ clangdev }}\n    - clangdev {{ clangdev }}\n    - git-lfs\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    - libstdcxx-ng {{ cxx_compiler_version }}  # [linux]\n  host:\n    - llvm {{ clangdev }}\n    - llvmdev {{ clangdev }}\n    - clangdev {{ clangdev }}\n    - backtrace  # [unix and x86]\n    - libxml2\n    - zlib\n    - zstd  # [not win]\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    - libstdcxx-ng {{ cxx_compiler_version }}  # [linux]\n  run_constrained:\n    - llvm {{ clangdev }}\n    - llvmdev {{ clangdev }}\n    - clangdev {{ clangdev }}\n  run:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    - libstdcxx-ng >={{ cxx_compiler_version }}  # [linux]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libclangCppInterOp${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_BIN%\\\\clangCppInterOp.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/compiler-research/CppInterOp\n  license: Apache-2.0 WITH LLVM-exception\n  license_family: Apache\n  license_file: cppinterop/LICENSE.txt\n  summary: |\n    The CppInterOp library provides a minimalist approach for other languages\n    to interoperate with C++ entities.\n  description: |\n    CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\n    The API support downstream tools that utilize interactive C++ by using\n    the compiler as a service. That is, embed Clang and LLVM as a libraries\n    in their codebases. The API are designed to be minimalistic and aid\n    non-trivial tasks such as language interoperability on the fly. In such\n    scenarios CppInterOp can be used to provide the necessary introspection\n    information to the other side helping the language cross talk.\n  doc_url: https://cppinterop.readthedocs.io/en/{{ version }}\n  dev_url: https://cppinterop.readthedocs.io/en/{{ version }}/DevelopersDocumentation.html\n\nextra:\n  recipe-maintainers:\n    - alexander-penev\n    - vgvassilev\n",
 "req": {
  "__set__": true,
  "elements": [
   "backtrace",
   "clangdev",
   "cmake",
   "cxx_compiler_stub",
   "git-lfs",
   "libcxx",
   "libstdcxx-ng",
   "libxml2",
   "llvm",
   "llvmdev",
   "make",
   "ninja",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libcxx",
    "libstdcxx-ng",
    "llvm",
    "llvmdev",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "clangdev",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libcxx",
    "libstdcxx-ng",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ctng-compilers",
    "cxx_compiler_stub",
    "libcxx",
    "libstdcxx-ng"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev 17.*",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "libcxx 16",
    "libstdcxx-ng 12",
    "llvm 17.*",
    "llvmdev 17.*",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "clangdev 17.*",
    "libcxx 16",
    "libstdcxx-ng 12",
    "libxml2",
    "llvm 17.*",
    "llvmdev 17.*",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx 16",
    "libstdcxx-ng >=12"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz",
 "version": "1.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cppinterop.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "CppInterOp exposes API from Clang and LLVM in a backward compatibe way.\nThe API support downstream tools that utilize interactive C++ by using\nthe compiler as a service. That is, embed Clang and LLVM as a libraries\nin their codebases. The API are designed to be minimalistic and aid\nnon-trivial tasks such as language interoperability on the fly. In such\nscenarios CppInterOp can be used to provide the necessary introspection\ninformation to the other side helping the language cross talk.\n",
   "dev_url": "https://cppinterop.readthedocs.io/en/1.2.0/DevelopersDocumentation.html",
   "doc_url": "https://cppinterop.readthedocs.io/en/1.2.0",
   "home": "https://github.com/compiler-research/CppInterOp",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "cppinterop/LICENSE.txt",
   "summary": "The CppInterOp library provides a minimalist approach for other languages\nto interoperate with C++ entities.\n"
  },
  "build": {
   "number": "3",
   "string": "clang17_repl_h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "alexander-penev",
    "vgvassilev"
   ]
  },
  "package": {
   "name": "cppinterop",
   "version": "1.2.0"
  },
  "requirements": {
   "build": [
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "git-lfs"
   ],
   "host": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*",
    "libxml2",
    "zlib"
   ],
   "run": [],
   "run_constrained": [
    "llvm 17.*",
    "llvmdev 17.*",
    "clangdev 17.*"
   ]
  },
  "source": [
   {
    "folder": "cppinterop",
    "patches": [
     "patches/cppinterop/0001-cmake-Work-around-a-bug-in-the-llvm-config.patch",
     "patches/cppinterop/0002-cmake-CppInterOp-install-fix.patch",
     "patches/cppinterop/0003-Implement-detection-of-resource-and-include-dirs.patch",
     "patches/cppinterop/0004-cmake-config-fix-library-suffix-and-prefix.patch"
    ],
    "sha256": "b3cf25f500624fe12ffc40f858a04c46daea808298e64d924b594eb35ca1c806",
    "url": "https://github.com/compiler-research/CppInterOp/archive/refs/tags/v1.2.0.tar.gz"
   },
   {
    "folder": "add_patches",
    "path": "patches"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_BIN%\\\\clangCppInterOp.dll exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cmake",
    "cxx_compiler_stub",
    "git-lfs",
    "llvm",
    "llvmdev",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "libxml2",
    "llvm",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}