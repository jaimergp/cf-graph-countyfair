{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "openmm-plumed",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This project provides a connection between OpenMM and PLUMED.\nIt allows you to bias or analyze an OpenMM simulation based\non collective variables.\n",
   "dev_url": "https://github.com/openmm/openmm-plumed",
   "doc_url": "https://github.com/openmm/openmm-plumed",
   "home": "https://github.com/openmm/openmm-plumed",
   "license": "MIT",
   "license_file": "README.md",
   "summary": "A connection between OpenMM and PLUMED"
  },
  "build": {
   "missing_dso_whitelist": [
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*",
    "*/libcuda.*"
   ],
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-plumed",
   "version": "2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make"
   ],
   "host": [
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd"
   ],
   "run": [
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system"
   ]
  },
  "source": {
   "sha256": "41687553ffe6a03df5938496003755db27649bf1ab9de8548e332a6eb436a15c",
   "url": "https://github.com/openmm/openmm-plumed/archive/v2.0.tar.gz"
  },
  "test": {
   "commands": "cd ${PREFIX}/share/openmm-plumed/tests\nset +e\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  ./${f}\n  ((exitcode+=$?))\ndone\nexit $exitcode\n",
   "imports": [
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "ocl-icd",
    "openmm",
    "pip",
    "plumed",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ocl-icd",
    "ocl-icd-system",
    "openmm",
    "plumed",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This project provides a connection between OpenMM and PLUMED.\nIt allows you to bias or analyze an OpenMM simulation based\non collective variables.\n",
   "dev_url": "https://github.com/openmm/openmm-plumed",
   "doc_url": "https://github.com/openmm/openmm-plumed",
   "home": "https://github.com/openmm/openmm-plumed",
   "license": "MIT",
   "license_file": "README.md",
   "summary": "A connection between OpenMM and PLUMED"
  },
  "build": {
   "missing_dso_whitelist": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-plumed",
   "version": "2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build"
   ],
   "host": [
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "ocl-icd",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "ocl-icd",
    "ocl-icd-system",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple"
   ]
  },
  "source": {
   "sha256": "41687553ffe6a03df5938496003755db27649bf1ab9de8548e332a6eb436a15c",
   "url": "https://github.com/openmm/openmm-plumed/archive/v2.0.tar.gz"
  },
  "test": {
   "commands": "cd ${PREFIX}/share/openmm-plumed/tests\nset +e\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  ./${f}\n  ((exitcode+=$?))\ndone\nexit $exitcode\n",
   "imports": [
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed"
   ]
  }
 },
 "name": "openmm-plumed",
 "osx_64_meta_yaml": {
  "about": {
   "description": "This project provides a connection between OpenMM and PLUMED.\nIt allows you to bias or analyze an OpenMM simulation based\non collective variables.\n",
   "dev_url": "https://github.com/openmm/openmm-plumed",
   "doc_url": "https://github.com/openmm/openmm-plumed",
   "home": "https://github.com/openmm/openmm-plumed",
   "license": "MIT",
   "license_file": "README.md",
   "summary": "A connection between OpenMM and PLUMED"
  },
  "build": {
   "missing_dso_whitelist": null,
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman",
    "RaulPPelaez",
    "raimis",
    "jaimergp",
    "peastman"
   ]
  },
  "package": {
   "name": "openmm-plumed",
   "version": "2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "conda-build"
   ],
   "host": [
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader",
    "python",
    "pip",
    "openmm",
    "plumed",
    "swig",
    "khronos-opencl-icd-loader"
   ],
   "run": [
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "python",
    "openmm",
    "plumed",
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple"
   ]
  },
  "source": {
   "sha256": "41687553ffe6a03df5938496003755db27649bf1ab9de8548e332a6eb436a15c",
   "url": "https://github.com/openmm/openmm-plumed/archive/v2.0.tar.gz"
  },
  "test": {
   "commands": "cd ${PREFIX}/share/openmm-plumed/tests\nset +e\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  ./${f}\n  ((exitcode+=$?))\ndone\nexit $exitcode\n",
   "imports": [
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed",
    "openmmplumed"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "conda-build",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "openmm",
    "pip",
    "plumed",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl_icd_wrapper_apple",
    "openmm",
    "plumed",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmm-plumed"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/openmm-plumed.json"
 },
 "raw_meta_yaml": "{% set name = \"openmm-plumed\" %}\n{% set version = \"2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openmm/openmm-plumed/archive/v{{ version }}.tar.gz\n  sha256: 41687553ffe6a03df5938496003755db27649bf1ab9de8548e332a6eb436a15c\n\nbuild:\n  number: 0\n  skip: true  # [win or (linux and cuda_compiler_version in (undefined, 'None'))]\n  missing_dso_whitelist:\n    - \"*/libcuda.*\"    # [linux64 or ppc64le]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux and cuda_compiler_version != 'None']\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - cmake\n    - make\n    - conda-build  # [osx]\n  host:\n    - python\n    - pip\n    - openmm\n    - plumed\n    - swig\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n  run:\n    - python\n    - {{ pin_compatible('openmm', min_pin='x.x', max_pin='x.x') }}\n    - {{ pin_compatible('plumed', min_pin='x.x', max_pin='x.x') }}\n    - ocl-icd  # [linux]\n    - ocl-icd-system  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n    - ocl_icd_wrapper_apple      # [osx]\n\ntest:\n  imports:\n    - openmmplumed\n  commands: |\n    cd ${PREFIX}/share/openmm-plumed/tests\n    set +e\n    for f in Test*; do\n      if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n        continue\n      fi\n      ./${f}\n      ((exitcode+=$?))\n    done\n    exit $exitcode\n\n\nabout:\n  home: https://github.com/openmm/openmm-plumed\n  license: MIT\n  license_file: README.md\n  summary: 'A connection between OpenMM and PLUMED'\n  description: |\n    This project provides a connection between OpenMM and PLUMED.\n    It allows you to bias or analyze an OpenMM simulation based\n    on collective variables.\n  doc_url: https://github.com/openmm/openmm-plumed\n  dev_url: https://github.com/openmm/openmm-plumed\n\nextra:\n  recipe-maintainers:\n    - RaulPPelaez\n    - raimis\n    - jaimergp\n    - peastman\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "conda-build",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "khronos-opencl-icd-loader",
   "make",
   "ocl-icd",
   "ocl-icd-system",
   "ocl_icd_wrapper_apple",
   "openmm",
   "pip",
   "plumed",
   "python",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "conda-build",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "openmm",
    "pip",
    "plumed",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "openmm",
    "plumed",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "conda-build",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "openmm",
    "pip",
    "plumed",
    "python",
    "swig"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "khronos-opencl-icd-loader",
    "ocl-icd",
    "ocl-icd-system",
    "ocl_icd_wrapper_apple",
    "openmm",
    "plumed",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/openmm/openmm-plumed/archive/v2.0.tar.gz",
 "version": "2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/openmm-plumed.json"
 }
}