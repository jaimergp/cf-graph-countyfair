{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "capytaine",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "2.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy <=1.26.2",
    "meson-python",
    "charset-normalizer"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "rich"
   ]
  },
  "source": {
   "sha256": "f1945c02609fe16f58b691e7ad2f297087980fa6e7d1d1ca5826e478204e408e",
   "url": "https://github.com/capytaine/capytaine/archive/refs/tags/v2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine"
   ],
   "requires": [
    "pytest",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "charset-normalizer",
    "meson-python",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "rich",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "2.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy <=1.26.2",
    "meson-python",
    "charset-normalizer",
    "llvm-openmp",
    "m2w64-toolchain",
    "libpython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "rich",
    "llvm-openmp"
   ]
  },
  "source": {
   "sha256": "f1945c02609fe16f58b691e7ad2f297087980fa6e7d1d1ca5826e478204e408e",
   "url": "https://github.com/capytaine/capytaine/archive/refs/tags/v2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine"
   ],
   "requires": [
    "pytest",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "name": "capytaine",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "2.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "numpy <=1.26.2",
    "meson-python",
    "charset-normalizer",
    "llvm-openmp"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "rich",
    "llvm-openmp"
   ]
  },
  "source": {
   "sha256": "f1945c02609fe16f58b691e7ad2f297087980fa6e7d1d1ca5826e478204e408e",
   "url": "https://github.com/capytaine/capytaine/archive/refs/tags/v2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine"
   ],
   "requires": [
    "pytest",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "charset-normalizer",
    "llvm-openmp",
    "meson-python",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "numpy",
    "pandas",
    "python",
    "rich",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "capytaine"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/capytaine.json"
 },
 "raw_meta_yaml": "{% set version = \"2.1\" %}\n{% set hash = \"f1945c02609fe16f58b691e7ad2f297087980fa6e7d1d1ca5826e478204e408e\" %}\n\npackage:\n  name: capytaine\n  version: {{ version }}\n\nsource:\n  url: https://github.com/capytaine/capytaine/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: {{ hash }}\n\nbuild:\n  skip: True  # [py<38]\n  skip: True  # [python_impl == 'pypy']\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - capytaine = capytaine.ui.cli:main\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}  # [unix]\n    - {{ compiler('c') }}  # [unix]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - llvm-openmp  # [osx]\n  host:\n    - python\n    - pip\n    - numpy <=1.26.2\n    - meson-python\n    - charset-normalizer\n    - llvm-openmp  # [osx]\n    - m2w64-toolchain  # [win]\n    - libpython  # [win]\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - pandas\n    - xarray\n    - rich\n    - llvm-openmp  # [osx]\n\ntest:\n  imports:\n    - capytaine\n  requires:\n    - pytest\n    - pip\n  source_files:\n    - pytest/*.py\n    - pytest/**/*\n  commands:\n    - pytest\n    - capytaine --help\n\nabout:\n  home: https://github.com/capytaine/capytaine\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: A Python-based linear potential flow solver based on Nemoh\n\nextra:\n  recipe-maintainers:\n    - mancellin\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "charset-normalizer",
   "fortran_compiler_stub",
   "libpython",
   "llvm-openmp",
   "m2w64-toolchain",
   "m2w64_c_compiler_stub",
   "m2w64_fortran_compiler_stub",
   "meson-python",
   "numpy",
   "pandas",
   "pip",
   "python",
   "rich",
   "scipy",
   "xarray"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "charset-normalizer",
    "fortran_compiler_stub",
    "libpython",
    "llvm-openmp",
    "m2w64-toolchain",
    "meson-python",
    "numpy",
    "openmp",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "numpy",
    "openmp",
    "pandas",
    "python",
    "rich",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "fortran_compiler_stub",
    "llvm-openmp",
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "charset-normalizer",
    "libpython",
    "llvm-openmp",
    "m2w64-toolchain",
    "meson-python",
    "numpy <=1.26.2",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "numpy",
    "pandas",
    "python",
    "rich",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/capytaine/capytaine/archive/refs/tags/v2.1.tar.gz",
 "version": "2.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/capytaine.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/capytaine/capytaine",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "A Python-based linear potential flow solver based on Nemoh"
  },
  "build": {
   "entry_points": [
    "capytaine = capytaine.ui.cli:main"
   ],
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mancellin"
   ]
  },
  "package": {
   "name": "capytaine",
   "version": "2.1"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "numpy <=1.26.2",
    "meson-python",
    "charset-normalizer",
    "m2w64-toolchain",
    "libpython"
   ],
   "run": [
    "python",
    "numpy",
    "scipy",
    "pandas",
    "xarray",
    "rich"
   ]
  },
  "source": {
   "sha256": "f1945c02609fe16f58b691e7ad2f297087980fa6e7d1d1ca5826e478204e408e",
   "url": "https://github.com/capytaine/capytaine/archive/refs/tags/v2.1.tar.gz"
  },
  "test": {
   "commands": [
    "pytest",
    "capytaine --help"
   ],
   "imports": [
    "capytaine"
   ],
   "requires": [
    "pytest",
    "pip"
   ],
   "source_files": [
    "pytest/*.py",
    "pytest/**/*"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "m2w64_c_compiler_stub",
    "m2w64_fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "charset-normalizer",
    "libpython",
    "m2w64-toolchain",
    "meson-python",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "python",
    "rich",
    "scipy",
    "xarray"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 }
}