{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "torchani",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "PYTHON -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "PYTHON -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
   ],
   "string": "cpu_py311h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "cuda-version ==12.0",
    "cuda-version ==11.8",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==65.3.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "cuda-version ==11.2",
    "cuda-version ==12.0",
    "cuda-version ==11.8"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani.cuaev"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "PYTHON -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps",
    "PYTHON -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
   ],
   "string": "cpu_py311h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cuda*",
    "cuda-version ==11.2",
    "cuda-version ==12.0",
    "cuda-version ==11.8",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==65.3.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy",
    "cuda-version ==11.2",
    "cuda-version ==12.0",
    "cuda-version ==11.8"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani",
    "torchani.cuaev"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "name": "torchani",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "PYTHON -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
   ],
   "string": "cpu_py311h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==65.3.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/aiqm/torchani",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Accurate Neural Network Potential on PyTorch"
  },
  "build": {
   "number": "3",
   "script": [
    "PYTHON -m pip install . -vvv --no-deps"
   ],
   "script_env": [
    "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
   ],
   "string": "cpu_py311h1234567_3"
  },
  "extra": {
   "recipe-maintainers": [
    "yueyericardo",
    "mikemhenry"
   ]
  },
  "package": {
   "name": "torchani",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "pytorch",
    "pytorch =*=cpu*"
   ],
   "run": [
    "python",
    "pip",
    "setuptools ==65.3.0",
    "setuptools_scm ==6.3.2",
    "importlib_metadata",
    "lark-parser",
    "requests",
    "h5py",
    "numpy"
   ],
   "run_constrained": [
    "pytorch =*=cpu*"
   ]
  },
  "source": {
   "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
   "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "./download.sh",
    "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
    "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
    "cd tests; python -m pytest -v -s *.py"
   ],
   "imports": [
    "torchani"
   ],
   "requires": [
    "wget",
    "unzip",
    "tensorboard",
    "tqdm",
    "ase",
    "h5py",
    "pillow",
    "pyyaml",
    "pytest",
    "expecttest",
    "pkbar"
   ],
   "source_files": [
    "torchani/resources/*",
    "tests/*",
    "tools/*",
    "download.sh",
    "dataset/*",
    "test_requirements.txt"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "torchani"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/torchani.json"
 },
 "raw_meta_yaml": "# Notes: this receipt is based on torchvision-feedstock:\n# https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml\n\n{% set version = \"2.2.4\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: torchani\n  version: {{ version }}\n\nsource:\n  url: https://github.com/aiqm/torchani/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d\n\nbuild:\n  number: 3\n  skip: true  # [win]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n  script_env:\n  - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script:\n    - \"{{ PYTHON }} -m pip install . --global-option='--cuaev-all-sms' -vvv --no-deps\"  # [cuda_compiler_version != \"None\"]\n    - \"{{ PYTHON }} -m pip install . -vvv --no-deps\"                                    # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}              # [cuda_compiler_version != \"None\"]\n    - sysroot_linux-64 ==2.17             # [linux64]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - python                              # [build_platform != target_platform]\n    - numpy                               # [build_platform != target_platform]\n    - cython                              # [build_platform != target_platform]\n  host:\n    - python\n    - numpy\n    - pip\n    - setuptools\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  run:\n    - python\n    - pip\n    - setuptools ==65.3.0\n    - setuptools_scm ==6.3.2\n    - importlib_metadata\n    - lark-parser\n    - requests\n    - h5py\n    - {{ pin_compatible('numpy') }}\n    # cuda-version is added here to prevent the conda-forge runner to download a different version during testing, which makes it run out of memory. \n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchani\n    - torchani.cuaev                     # [cuda_compiler_version != \"None\"]\n  source_files:\n    - torchani/resources/*\n    - tests/*\n    - tools/*\n    - download.sh\n    - dataset/*\n    - test_requirements.txt\n  requires:\n    - wget\n    - unzip\n    - tensorboard\n    - tqdm\n    - ase\n    - h5py\n    - pillow\n    - pyyaml\n    - pytest\n    - expecttest\n    - pkbar\n  commands:\n    # download testing datasets\n    - ./download.sh                                                           # [unix]\n    # broken symlink that got ignored when copying\n    - ln -s ../download/dataset/ani-1x/ dataset/ani-1x                        # [unix]\n    - ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4      # [unix]\n    - cd tests; python -m pytest -v -s *.py  # [unix]\nabout:\n  home: https://github.com/aiqm/torchani\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Accurate Neural Network Potential on PyTorch'\n\nextra:\n  recipe-maintainers:\n    - yueyericardo\n    - mikemhenry\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda-version",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "importlib_metadata",
   "lark-parser",
   "numpy",
   "pip",
   "python",
   "pytorch",
   "requests",
   "setuptools",
   "setuptools_scm",
   "sysroot_linux-64"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools",
    "setuptools_scm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "sysroot_linux-64 ==2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version ==11.2",
    "cuda-version ==11.8",
    "cuda-version ==12.0",
    "importlib_metadata",
    "numpy",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cpu*",
    "pytorch =*=cuda*",
    "setuptools",
    "setuptools_scm ==6.3.2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version ==11.2",
    "cuda-version ==11.8",
    "cuda-version ==12.0",
    "h5py",
    "importlib_metadata",
    "lark-parser",
    "numpy",
    "pip",
    "python",
    "requests",
    "setuptools ==65.3.0",
    "setuptools_scm ==6.3.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ase",
    "expecttest",
    "h5py",
    "pillow",
    "pkbar",
    "pytest",
    "pyyaml",
    "tensorboard",
    "tqdm",
    "unzip",
    "wget"
   ]
  }
 },
 "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz",
 "version": "2.2.4",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/torchani.json"
 }
}