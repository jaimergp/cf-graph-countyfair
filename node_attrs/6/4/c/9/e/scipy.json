{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "settings_win": {
    "variables": {
     "CONDA_BLD_PATH": "C:\\\\bld\\\\"
    }
   }
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "scipy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-powerpc64le-linux-gnu.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-powerpc64le-linux-gnu.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy310-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy39-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy39-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy311-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy312-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "clang",
    "flang <18",
    "lld"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip",
    "compiler-rt"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "name": "scipy-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy310-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy310-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy39-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy39-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy311-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy311-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "test ! -d $SP_DIR/scipy/_lib/tests",
      "test ! -d $SP_DIR/scipy/cluster/tests",
      "test ! -d $SP_DIR/scipy/constants/tests",
      "test ! -d $SP_DIR/scipy/datasets/tests",
      "test ! -d $SP_DIR/scipy/fftpack/tests",
      "test ! -d $SP_DIR/scipy/fft/tests",
      "test ! -d $SP_DIR/scipy/integrate/tests",
      "test ! -d $SP_DIR/scipy/interpolate/tests",
      "test ! -d $SP_DIR/scipy/io/tests",
      "test ! -d $SP_DIR/scipy/linalg/tests",
      "test ! -d $SP_DIR/scipy/misc/tests",
      "test ! -d $SP_DIR/scipy/ndimage/tests",
      "test ! -d $SP_DIR/scipy/odr/tests",
      "test ! -d $SP_DIR/scipy/optimize/tests",
      "test ! -d $SP_DIR/scipy/signal/tests",
      "test ! -d $SP_DIR/scipy/sparse/tests",
      "test ! -d $SP_DIR/scipy/spatial/tests",
      "test ! -d $SP_DIR/scipy/special/tests",
      "test ! -d $SP_DIR/scipy/stats/tests",
      "test ! -f $SP_DIR/scipy/_lib/_test_ccallback.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/integrate/_test_multivariate.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/io/_test_fortran.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_ctest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/ndimage/_cytest.pypy312-pp73-darwin.so",
      "test ! -f $SP_DIR/scipy/special/_test_internal.pypy312-pp73-darwin.so",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || echo \"failure was expected\") > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.sh",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "scipy",
   "scipy-tests"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/scipy.json"
 },
 "raw_meta_yaml": "{% set version = \"1.13.0\" %}\n\npackage:\n  name: scipy-split\n  version: {{ version }}\n\n# use 'python_impl' in meta.yaml so it gets picked up by rendering\n# [python_impl == \"pypy\"]\n\nsource:\n  # The sdist distributed by scipy contains pre-compiled pythran sources,\n  # as well as the relevant submodules; by taking the tarball from github\n  # we can compile pythran ourselves (or not), but manually need to include\n  # the submodules (not in tarball due to dear-github/dear-github#214)\n  - url: https://github.com/scipy/scipy/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db\n  # https://github.com/scipy/scipy/tree/v{{ version }}/scipy/_lib\n  - git_url: https://github.com/data-apis/array-api-compat.git\n    git_rev: 05548f0281f13e7cb6a293a422ef8c1a90021413\n    folder: scipy/_lib/array_api_compat\n  - git_url: https://github.com/boostorg/math.git\n    git_rev: 1a7be5d895d266a870af7a6ed258e5bcf9838277\n    folder: scipy/_lib/boost_math\n  - git_url: https://github.com/scipy/highs.git\n    git_rev: 4a122958a82e67e725d08153e099efe4dad099a2\n    folder: scipy/_lib/highs\n  - git_url: https://github.com/scipy/pocketfft.git\n    git_rev: 9367142748fcc9696a1c9e5a99b76ed9897c9daa\n    folder: scipy/_lib/pocketfft\n  - git_url: https://github.com/scipy/unuran.git\n    git_rev: 21810c856880bb2f1b3071c8ac4aaf634983b338\n    folder: scipy/_lib/unuran\n  # https://github.com/scipy/scipy/tree/v{{ version }}/scipy/sparse/linalg/_propack\n  - git_url: https://github.com/scipy/PROPACK.git\n    git_rev: a9ed9736ad52ff76ae1777922b700b13ca2bf0ae\n    folder: scipy/sparse/linalg/_propack/PROPACK\n\nbuild:\n  number: 0\n  skip: true  # [py<39]\n  # pypy on aarch/ppc is un(der)maintained and currently broken, see\n  # https://github.com/conda-forge/pypy3.6-feedstock/issues/111\n  skip: true  # [(aarch64 or ppc64le) and python_impl == \"pypy\"]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - meson-python                           # [build_platform != target_platform]\n    - cmake                                  # [build_platform != target_platform]\n    - ninja                                  # [build_platform != target_platform]\n    - pkg-config                             # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}              # [unix]\n    # pythran code needs clang-cl on windows\n    - clang                                  # [win]\n    # use flang as fortran compiler on windows (uses clang driver)\n    - flang <18                              # [win]\n    # use llvm linker for both of the above\n    - lld                                    # [win]\n  host:\n    - compiler-rt                            # [win]\n    - libblas\n    - libcblas\n    - liblapack\n    - python\n    - cython\n    - meson-python\n    - ninja\n    - pkg-config\n    - python-build\n    - pybind11\n    - pythran\n    - numpy\n    - pip\n\n# the top-level build.{sh,bat} builds scipy, and then\n# build-output.{sh,bat} installs the files\noutputs:\n  - name: scipy\n    script: build-output.sh   # [not win]\n    script: build-output.bat  # [win]\n    version: {{ version }}\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        # only need these for the strong run exports\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}              # [unix]\n      host:\n        - libblas\n        - libcblas\n        - liblapack\n        - python\n        - cython\n        - meson-python\n        - ninja\n        - pkg-config\n        - python-build\n        - pybind11\n        - pythran\n        - numpy\n        - pip\n      run:\n        - python\n        # see np_maxversion in https://github.com/scipy/scipy/blob/v{{ version }}/setup.py\n        - {{ pin_compatible('numpy', upper_bound='1.28') }}\n    test:\n      requires:\n        - pytest\n        - hypothesis\n      imports:\n        - scipy\n        # reference for public API is effectively\n        # https://github.com/scipy/scipy/blob/main/scipy/_lib/tests/test_public_api.py\n        - scipy.cluster\n        - scipy.cluster.hierarchy\n        - scipy.cluster.vq\n        - scipy.constants\n        - scipy.datasets\n        - scipy.fft\n        - scipy.fftpack\n        - scipy.integrate\n        - scipy.interpolate\n        - scipy.io\n        - scipy.io.arff\n        - scipy.io.matlab\n        - scipy.io.wavfile\n        - scipy.linalg\n        - scipy.linalg.blas\n        - scipy.linalg.cython_blas\n        - scipy.linalg.cython_lapack\n        - scipy.linalg.interpolative\n        - scipy.linalg.lapack\n        - scipy.misc\n        - scipy.ndimage\n        - scipy.odr\n        - scipy.optimize\n        - scipy.signal\n        - scipy.signal.windows\n        - scipy.sparse\n        - scipy.sparse.csgraph\n        - scipy.sparse.linalg\n        - scipy.spatial\n        - scipy.spatial.distance\n        - scipy.spatial.transform\n        - scipy.special\n        - scipy.stats\n        - scipy.stats.contingency\n        - scipy.stats.distributions\n        - scipy.stats.mstats\n        - scipy.stats.qmc\n        - scipy.stats.sampling\n      commands:\n        # absence of tests (selection from test_folders_to_delete.txt)\n        {% set test_folders = [\n            \"_lib/tests\", \"cluster/tests\", \"constants/tests\", \"datasets/tests\",\n            \"fftpack/tests\", \"fft/tests\", \"integrate/tests\", \"interpolate/tests\",\n            \"io/tests\", \"linalg/tests\", \"misc/tests\", \"ndimage/tests\", \"odr/tests\",\n            \"optimize/tests\", \"signal/tests\", \"sparse/tests\", \"spatial/tests\",\n            \"special/tests\", \"stats/tests\"\n        ] %}\n        {% for each_folder in test_folders %}\n        - test ! -d $SP_DIR/scipy/{{ each_folder }}                               # [unix]\n        - if exist %SP_DIR%\\scipy\\{{ \"\\\\\".join(each_folder.split(\"/\")) }} exit 1  # [win]\n        {% endfor %}\n\n        # absence of testing DSOs (selection from test_libraries_to_delete.txt)\n        {% set test_libraries = [\n            \"_lib/_test_ccallback\", \"integrate/_test_multivariate\", \"io/_test_fortran\",\n            \"ndimage/_ctest\", \"ndimage/_cytest\", \"special/_test_internal\"\n        ] %}\n        {% set PY_ABI = \"cpython-\" ~ PY_VER.replace(\".\", \"\") %}                         # [unix and python_impl == \"cpython\"]\n        {% set PY_ABI = \"cp\" ~ PY_VER.replace(\".\", \"\") %}                               # [win and python_impl == \"cpython\"]\n        {% set PY_ABI = \"pypy\" ~ PY_VER.replace(\".\", \"\") ~ \"-pp73\" %}                   # [python_impl == \"pypy\"]\n        {% set ARCH = \"x86_64\" if x86 else (\"aarch64\" if aarch64 else \"powerpc64le\")%}  # [linux]\n        {% for each_lib in test_libraries %}\n        - test ! -f $SP_DIR/scipy/{{ each_lib }}.{{ PY_ABI }}-{{ ARCH }}-linux-gnu.so                     # [linux]\n        - test ! -f $SP_DIR/scipy/{{ each_lib }}.{{ PY_ABI }}-darwin.so                                   # [osx]\n        - if exist %SP_DIR%\\scipy\\{{ \"\\\\\".join(each_lib.split(\"/\")) }}.{{ PY_ABI }}-win_amd64.pyd exit 1  # [win]\n        {% endfor %}\n\n        # test that scipy.test raises an informative error\n        - python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog\n        - python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"\n        # same for `pytest --pyargs scipy` (uses exit code that's neither 0 or 1 on win, which breaks piping)\n        - (pytest --pyargs scipy || echo \"failure was expected\") > testlog   # [unix]\n        - (pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog  # [win]\n        - python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"\n        # ensure only one test is left (namely, our hint)\n        - python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\"\n\n  - name: scipy-tests\n    script: build-output.sh   # [not win]\n    script: build-output.bat  # [win]\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        # only need these for the strong run exports\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}              # [unix]\n      host:\n        - {{ pin_subpackage('scipy', exact=True) }}\n        # need a minimum for (re-)installation of wheel\n        - python\n        - pip\n        - numpy\n        # make link check happy\n        - liblapack\n      run:\n        - {{ pin_subpackage('scipy', exact=True) }}\n        - python\n    test:\n      requires:\n        - pytest\n        - pytest-timeout\n        - pytest-xdist    # [not (win and python_impl == \"pypy\")]\n        - hypothesis\n        - mpmath\n        # needed for scipy.datasets\n        - pooch\n      commands:\n        {% set tests_to_skip = \"_not_a_real_test\" %}\n        # failing on windows as of 1.13.0\n        {% set tests_to_skip = tests_to_skip + \" or test_nnls_inner_loop_case1\" %}                        # [win]\n        # scipy/scipy#15533 - fails depending on BLAS/LAPACK implementation resp. CPU features\n        {% set tests_to_skip = tests_to_skip + \" or test_x0_equals_Mb[nonsymposdef-bicgstab]\" %}          # [win or aarch64]\n        # scipy/scipy#19210 - 60 failing tests!\n        {% set tests_to_skip = tests_to_skip + \" or (TestQR and (delete_f or insert_f or update_f))\" %}   # [aarch64]\n        {% set tests_to_skip = tests_to_skip + \" or (TestLstsq and test_random_overdet)\" %}               # [aarch64]\n        {% set tests_to_skip = tests_to_skip + \" or (test_lapack.py and (\" %}                             # [aarch64]\n            {% set tests_to_skip = tests_to_skip + \" test_pftri or test_pstrf or test_pstf2\" %}           # [aarch64]\n            {% set tests_to_skip = tests_to_skip + \" or test_sfrk_hfrk or TestBlockedQR\" %}               # [aarch64]\n        {% set tests_to_skip = tests_to_skip + \"))\" %}                                                    # [aarch64]\n        # on the slowest agents, these tests take more than 20min in emulation\n        {% set tests_to_skip = tests_to_skip + \" or test_mixed_threads_processes\" %}                      # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (test_lsq_linear and test_large_rank_deficient)\" %}   # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (test_iterative and test_precond_inverse[case1])\" %}  # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (test_multiprocess and fft)\" %}                       # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (test_optimize and TestBrute and test_workers)\" %}    # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (TestLevyStable and test_location_scale)\" %}          # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (TestShgoArguments and test_19_parallelization)\" %}   # [aarch64 or ppc64le]\n        {% set tests_to_skip = tests_to_skip + \" or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel))\" %}    # [aarch64 or ppc64le]\n        # tests that run into timeouts (set in scipy test suite) in emulation\n        {% set tests_to_skip = tests_to_skip + \" or (test_propack and test_examples)\" %}                  # [aarch64 or ppc64le]\n        # occasionally runs out of memory on windows + pypy\n        {% set tests_to_skip = tests_to_skip + \" or test_bootstrap_against_\" %}                           # [(python_impl == \"pypy\") and win]\n        {% set tests_to_skip = tests_to_skip + \" or test_more_converged\" %}                               # [(python_impl == \"pypy\") and win]\n        # fails on windows + pypy due to some file access race\n        {% set tests_to_skip = tests_to_skip + \" or (test_read_over64bit and _fast_matrix_market)\" %}     # [(python_impl == \"pypy\") and win]\n        # very slow tests for pypy in emulation\n        {% if (python_impl == \"pypy\") and (aarch64 or ppc64le) %}\n            {% set tests_to_skip = tests_to_skip + \" or TestDualAnnealing or TestQuad or TestNQuad\" %}\n            {% set tests_to_skip = tests_to_skip + \" or TestMonteCarloHypothesisTest or TestTRF\" %}\n            {% set tests_to_skip = tests_to_skip + \" or (TestBessel and test_fs_param)\" %}\n            {% set tests_to_skip = tests_to_skip + \" or (TestOrdQZWorkspaceSize and test_decompose)\" %}\n            {% set tests_to_skip = tests_to_skip + \" or (TestSobolIndices and test_ishigami[scalar])\" %}\n            {% set tests_to_skip = tests_to_skip + \" or (TestMannWhitneyU and test_asymptotic_behavior)\" %}\n            {% set tests_to_skip = tests_to_skip + \" or (test_precond_inverse and -poisson2d])\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_all_nograd_minimizers or test_basic_fit_mle\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_cdf_against_tables or test_pdf_integration\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_cdist_ and (refcount or calling_convention)\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_conditionally_positive_definite\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_cont_basic[500 or test_cython_api[elliprj]\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_filtfilt_gust or test_kappa3_array_gh13582\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_fitstart[genexpon-shapes28] or test_gh12922\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_integration_sparse or test_kdtree_box\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_minimize_callback_copies_array[fmin] or test_mip1\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_public_modules_importable or test_neldermead_limit\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_random_exact or test_random_complex_exact\" %}\n            {% set tests_to_skip = tests_to_skip + \" or test_cdf_against_multivariate_normal[10]\" %}\n        {% endif %}\n        # show SIMD features (some failures occur depending on presence/absence of e.g. AVX512)\n        - python -c \"import numpy; numpy.show_config()\"\n        # the tests ppc64le and aarch64 are currently run through emulation in QEMU;\n        # since this takes much longer, do not run the most heavy-weight tests, i.e. use\n        # label='fast'; same for PyPy due to huge runtime; otherwise set label='full'\n        {% set label = \"'fast'\" if (aarch64 or ppc64le or python_impl == \"pypy\") else \"'full'\" %}\n        {% set para = \"\" if (win and python_impl == \"pypy\") else \"'-nauto',\" %}\n        # for signature of scipy.test see below (note default: label='fast'):\n        # https://github.com/scipy/scipy/blob/v1.7.0/scipy/_lib/_testutils.py#L27\n        {% set param = \"verbose=1, label=\" + label + \", tests=None\" %}\n        {% set extra = \"extra_argv=['-k', 'not (\" + tests_to_skip + \")', \" ~ para ~ \" '--timeout=1200', '--durations=50']\" %}\n        - python -c \"import scipy, sys; sys.exit(not scipy.test({{ param }}, {{ extra }}))\"\n\nabout:\n  home: http://www.scipy.org/\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Scientific Library for Python\n  description: |\n    SciPy is a Python-based ecosystem of open-source software for mathematics,\n    science, and engineering.\n  doc_url: http://www.scipy.org/docs.html\n  dev_url: https://github.com/scipy/scipy\n\nextra:\n  recipe-maintainers:\n    - jakirkham\n    - msarahan\n    - rgommers\n    - ocefpaf\n    - h-vetinari\n  feedstock-name: scipy\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "clang",
   "compiler-rt",
   "cxx_compiler_stub",
   "cython",
   "flang",
   "fortran_compiler_stub",
   "libblas",
   "libcblas",
   "liblapack",
   "lld",
   "meson-python",
   "ninja",
   "numpy",
   "pip",
   "pkg-config",
   "pybind11",
   "python",
   "python-build",
   "pythran",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "flang",
    "fortran_compiler_stub",
    "lld"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "compiler-rt",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "flang <18",
    "fortran_compiler_stub",
    "lld"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "compiler-rt",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 },
 "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz",
 "version": "1.13.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/scipy.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "SciPy is a Python-based ecosystem of open-source software for mathematics,\nscience, and engineering.\n",
   "dev_url": "https://github.com/scipy/scipy",
   "doc_url": "http://www.scipy.org/docs.html",
   "home": "http://www.scipy.org/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE.txt",
   "summary": "Scientific Library for Python"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "scipy",
   "recipe-maintainers": [
    "jakirkham",
    "msarahan",
    "rgommers",
    "ocefpaf",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy310-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy310-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy39-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='fast', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy39-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy39-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy311-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy311-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   },
   {
    "name": "scipy",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "libblas",
      "libcblas",
      "liblapack",
      "python",
      "cython",
      "meson-python",
      "ninja",
      "pkg-config",
      "python-build",
      "pybind11",
      "pythran",
      "numpy",
      "pip"
     ],
     "run": [
      "python",
      "numpy"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "if exist %SP_DIR%\\scipy\\_lib\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\cluster\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\constants\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\datasets\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fftpack\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\fft\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\interpolate\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\io\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\linalg\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\misc\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\odr\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\optimize\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\signal\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\sparse\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\spatial\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\special\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\stats\\tests exit 1",
      "if exist %SP_DIR%\\scipy\\_lib\\_test_ccallback.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\integrate\\_test_multivariate.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\io\\_test_fortran.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_ctest.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\ndimage\\_cytest.pypy312-pp73-win_amd64.pyd exit 1",
      "if exist %SP_DIR%\\scipy\\special\\_test_internal.pypy312-pp73-win_amd64.pyd exit 1",
      "python -c \"import scipy; throw_away_the_return_value = scipy.test()\" > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('conda-forge builds of' in x for x in lines) else 1)\"",
      "(pytest --pyargs scipy || if !ERRORLEVEL! neq 0 exit 0) > testlog",
      "python -c \"import sys; lines=open('testlog').readlines(); sys.exit(0 if any('======== 1 failed' in x for x in lines) else 1)\""
     ],
     "imports": [
      "scipy",
      "scipy.cluster",
      "scipy.cluster.hierarchy",
      "scipy.cluster.vq",
      "scipy.constants",
      "scipy.datasets",
      "scipy.fft",
      "scipy.fftpack",
      "scipy.integrate",
      "scipy.interpolate",
      "scipy.io",
      "scipy.io.arff",
      "scipy.io.matlab",
      "scipy.io.wavfile",
      "scipy.linalg",
      "scipy.linalg.blas",
      "scipy.linalg.cython_blas",
      "scipy.linalg.cython_lapack",
      "scipy.linalg.interpolative",
      "scipy.linalg.lapack",
      "scipy.misc",
      "scipy.ndimage",
      "scipy.odr",
      "scipy.optimize",
      "scipy.signal",
      "scipy.signal.windows",
      "scipy.sparse",
      "scipy.sparse.csgraph",
      "scipy.sparse.linalg",
      "scipy.spatial",
      "scipy.spatial.distance",
      "scipy.spatial.transform",
      "scipy.special",
      "scipy.stats",
      "scipy.stats.contingency",
      "scipy.stats.distributions",
      "scipy.stats.mstats",
      "scipy.stats.qmc",
      "scipy.stats.sampling"
     ],
     "requires": [
      "pytest",
      "hypothesis"
     ]
    },
    "version": "1.13.0"
   },
   {
    "name": "scipy-tests",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "scipy",
      "python",
      "pip",
      "numpy",
      "liblapack"
     ],
     "run": [
      "scipy",
      "python"
     ]
    },
    "script": "build-output.bat",
    "test": {
     "commands": [
      "python -c \"import numpy; numpy.show_config()\"",
      "python -c \"import scipy, sys; sys.exit(not scipy.test(verbose=1, label='full', tests=None, extra_argv=['-k', 'not (_not_a_real_test or test_nnls_inner_loop_case1 or test_x0_equals_Mb[nonsymposdef-bicgstab] or (TestQR and (delete_f or insert_f or update_f)) or (TestLstsq and test_random_overdet) or (test_lapack.py and ( test_pftri or test_pstrf or test_pstf2 or test_sfrk_hfrk or TestBlockedQR)) or test_mixed_threads_processes or (test_lsq_linear and test_large_rank_deficient) or (test_iterative and test_precond_inverse[case1]) or (test_multiprocess and fft) or (test_optimize and TestBrute and test_workers) or (TestLevyStable and test_location_scale) or (TestShgoArguments and test_19_parallelization) or (TestDifferentialEvolutionSolver and (test_immediate_updating or test_parallel)) or (test_propack and test_examples) or test_bootstrap_against_ or test_more_converged or (test_read_over64bit and _fast_matrix_market))', '-nauto', '--timeout=1200', '--durations=50']))\""
     ],
     "requires": [
      "pytest",
      "pytest-timeout",
      "pytest-xdist",
      "hypothesis",
      "mpmath",
      "pooch"
     ]
    }
   }
  ],
  "package": {
   "name": "scipy-split",
   "version": "1.13.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "flang <18",
    "lld"
   ],
   "host": [
    "compiler-rt",
    "libblas",
    "libcblas",
    "liblapack",
    "python",
    "cython",
    "meson-python",
    "ninja",
    "pkg-config",
    "python-build",
    "pybind11",
    "pythran",
    "numpy",
    "pip"
   ]
  },
  "source": [
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   },
   {
    "sha256": "3ccf1c2da83da095a75c7b45f6658daad0ec9b06efcabe10b70af402adafc3db",
    "url": "https://github.com/scipy/scipy/archive/refs/tags/v1.13.0.tar.gz"
   },
   {
    "folder": "scipy/_lib/array_api_compat",
    "git_rev": "05548f0281f13e7cb6a293a422ef8c1a90021413",
    "git_url": "https://github.com/data-apis/array-api-compat.git"
   },
   {
    "folder": "scipy/_lib/boost_math",
    "git_rev": "1a7be5d895d266a870af7a6ed258e5bcf9838277",
    "git_url": "https://github.com/boostorg/math.git"
   },
   {
    "folder": "scipy/_lib/highs",
    "git_rev": "4a122958a82e67e725d08153e099efe4dad099a2",
    "git_url": "https://github.com/scipy/highs.git"
   },
   {
    "folder": "scipy/_lib/pocketfft",
    "git_rev": "9367142748fcc9696a1c9e5a99b76ed9897c9daa",
    "git_url": "https://github.com/scipy/pocketfft.git"
   },
   {
    "folder": "scipy/_lib/unuran",
    "git_rev": "21810c856880bb2f1b3071c8ac4aaf634983b338",
    "git_url": "https://github.com/scipy/unuran.git"
   },
   {
    "folder": "scipy/sparse/linalg/_propack/PROPACK",
    "git_rev": "a9ed9736ad52ff76ae1777922b700b13ca2bf0ae",
    "git_url": "https://github.com/scipy/PROPACK.git"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cxx_compiler_stub",
    "flang",
    "lld"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "compiler-rt",
    "cython",
    "libblas",
    "libcblas",
    "liblapack",
    "meson-python",
    "ninja",
    "numpy",
    "pip",
    "pkg-config",
    "pybind11",
    "python",
    "python-build",
    "pythran",
    "scipy"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "hypothesis",
    "mpmath",
    "pooch",
    "pytest",
    "pytest-timeout",
    "pytest-xdist"
   ]
  }
 }
}