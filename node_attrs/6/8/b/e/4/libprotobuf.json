{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "4.24.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  },
  "test_on_native_only": true
 },
 "feedstock_name": "libprotobuf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libprotobuf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libprotobuf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libprotobuf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.so",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.so",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.so",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf",
      "__osx >=10.13"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": [
      "__osx >=10.13"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.dylib",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.dylib",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": [
      "ucrt"
     ]
    },
    "script": "build-lib.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\libprotoc.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotoc.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotoc-static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\libprotobuf.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotobuf-static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\libprotobuf-lite.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-lite.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotobuf-lite-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\protobuf\\protobuf-config.cmake exit 1",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja %CMAKE_ARGS% .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "Library/lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\libprotoc-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-lite-static.lib exit 1",
      "cd cmake_test",
      "cmake -GNinja %CMAKE_ARGS% .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\proto_api.h exit 1",
      "if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\pyext\\message.h exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   },
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   },
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   },
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   },
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   },
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch",
     "patches/0009-disable-MapImplTest.RandomOrdering-due-to-flakiness.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "name": "libprotobuf-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf",
      "__osx >=10.13"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": [
      "__osx >=10.13"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.dylib",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "libprotobuf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": []
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.dylib",
      "test ! -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.dylib",
      "test ! -f ${PREFIX}/lib/libprotobuf-lite.a",
      "test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.sh",
    "test": {
     "commands": [
      "test -f ${PREFIX}/lib/libprotoc.a",
      "test -f ${PREFIX}/lib/libprotobuf.a",
      "test -f ${PREFIX}/lib/libprotobuf-lite.a",
      "cd cmake_test",
      "cmake -GNinja $CMAKE_ARGS .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [
      "rsync"
     ],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/include/google/protobuf/proto_api.h",
      "test -f $PREFIX/include/google/protobuf/pyext/message.h"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libprotobuf"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libprotobuf",
   "libprotobuf-python-headers",
   "libprotobuf-static"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/libprotobuf.json"
 },
 "raw_meta_yaml": "# keep this without major version to let the bot pick it up\n{% set version = \"25.2\" %}\n# protobuf doesn't add the major version in the tag, it's defined per language in\n# https://github.com/protocolbuffers/protobuf/blob/main/version.json\n{% set major = \"4\" %}\n\n{% set libraries = [\"libprotoc\", \"libprotobuf\", \"libprotobuf-lite\"] %}\n\npackage:\n  name: libprotobuf-split\n  version: {{ major ~ \".\" ~ version }}\n\nsource:\n  - url: https://github.com/protocolbuffers/protobuf/archive/refs/tags/v{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n    sha256: 8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871\n    patches:\n      - patches/0001-use-consistent-cmake-location.patch\n      - patches/0002-set-static-lib-extension-on-windows.patch\n      - patches/0003-always-look-for-shared-abseil-builds.patch\n      # grpc_cpp_java_plugin links against otherwise internal symbols\n      - patches/0004-Export-functions-in-google-compiler-java-names.patch\n      - patches/0005-do-not-install-vendored-gmock.patch\n      # backport https://github.com/protocolbuffers/protobuf/pull/15518\n      - patches/0006-Fix-getting-env-variables-on-windows.patch\n      # backport https://github.com/protocolbuffers/protobuf/commit/f78f9c51fa2470070e5d4b49649800971c789224\n      - patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch\n      # fix for https://github.com/protocolbuffers/protobuf/issues/15883\n      - patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch\n      # skip annoyingly flaky test on windows, see\n      # https://github.com/protocolbuffers/protobuf/issues/8645\n      - patches/0009-disable-MapImplTest.RandomOrdering-due-to-flakiness.patch      # [win]\n\nbuild:\n  number: 1\n\noutputs:\n  - name: libprotobuf\n    script: build-lib.sh  # [unix]\n    script: build-lib.bat  # [win]\n    build:\n      run_exports:\n        # protobuf now (intentionally) increments the SOVER with every patch release, which\n        # breaks tools like grpc_plugin_cpp if they get the wrong libprotoc at runtime, see\n        # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/4075\n        - {{ pin_subpackage('libprotobuf', max_pin='x.x.x') }}\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx and x86_64]\n      ignore_run_exports_from:\n        - gtest\n        - jsoncpp\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      host:\n        - gtest\n        - jsoncpp\n        - libabseil\n        # requires abseil test targets to build with tests enabled\n        - libabseil-tests\n        - zlib\n      run:\n        - ucrt  # [win]\n        # following google's C++ support policy, protobuf only support MacOS >=10.13, see:\n        # https://github.com/google/oss-policies-info/blob/main/foundational-cxx-support-matrix.md\n        # https://github.com/protocolbuffers/protobuf/blob/v24.0/Protobuf-C%2B%2B.podspec#L29\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx and x86_64]\n    test:\n      requires:\n        # cmake needs compiler to be able to run package detection, see\n        # https://discourse.cmake.org/t/questions-about-find-package-cli-msvc/6194\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - pkg-config\n      files:\n        - cmake_test/\n      commands:\n        {% for each_lib in libraries %}\n        # shared libraries\n        - test -f ${PREFIX}/lib/{{ each_lib }}.so                      # [linux]\n        - test -f ${PREFIX}/lib/{{ each_lib }}.dylib                   # [osx]\n        - if not exist %LIBRARY_BIN%\\{{ each_lib }}.dll exit 1         # [win]\n        - if not exist %LIBRARY_LIB%\\{{ each_lib }}.lib exit 1         # [win]\n\n        # absence of static libraries\n        - test ! -f ${PREFIX}/lib/{{ each_lib }}.a                     # [unix]\n        - if exist %LIBRARY_LIB%\\{{ each_lib }}-static.lib exit 1      # [win]\n        {% endfor %}\n\n        # cmake\n        - test -f ${PREFIX}/lib/cmake/protobuf/protobuf-config.cmake              # [unix]\n        - if not exist %LIBRARY_LIB%\\cmake\\protobuf\\protobuf-config.cmake exit 1  # [win]\n\n        # pkg-config\n        - pkg-config --print-errors --exact-version \"{{ version }}.0\" protobuf\n        - pkg-config --print-errors --exact-version \"{{ version }}.0\" protobuf-lite\n\n        # binary\n        - protoc --help\n\n        # more CMake integration\n        - cd cmake_test\n        - cmake -GNinja $CMAKE_ARGS .   # [unix]\n        - cmake -GNinja %CMAKE_ARGS% .  # [win]\n        - cmake --build .\n\n  - name: libprotobuf-static\n    script: build-lib.sh  # [unix]\n    script: build-lib.bat  # [win]\n    build:\n      always_include_files:\n        # Must overwrite the CMake metadata from shared libprotobuf\n        - lib/cmake/protobuf/           # [unix]\n        - Library/lib/cmake/protobuf/   # [win]\n      ignore_run_exports_from:\n        - jsoncpp\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      host:\n        - gtest\n        - jsoncpp\n        - libabseil\n        - libabseil-tests\n        - zlib\n        - {{ pin_subpackage('libprotobuf', exact=True) }}\n      run:\n        - {{ pin_subpackage('libprotobuf', exact=True) }}\n    test:\n      requires:\n        # cmake needs compiler to be able to run package detection, see\n        # https://discourse.cmake.org/t/questions-about-find-package-cli-msvc/6194\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - zlib\n      files:\n        - cmake_test/\n      commands:\n        {% for each_lib in libraries %}\n        # static libraries\n        - test -f ${PREFIX}/lib/{{ each_lib }}.a                       # [unix]\n        - if not exist %LIBRARY_LIB%\\{{ each_lib }}-static.lib exit 1  # [win]\n        {% endfor %}\n\n        # more CMake integration\n        - cd cmake_test\n        - cmake -GNinja $CMAKE_ARGS .   # [unix]\n        - cmake -GNinja %CMAKE_ARGS% .  # [win]\n        - cmake --build .\n\n  - name: libprotobuf-python-headers\n    script: build-pyheaders.sh  # [unix]\n    script: build-pyheaders.bat  # [win]\n    requirements:\n      build:\n        - rsync  # [unix]\n      host:\n        - {{ pin_subpackage('libprotobuf', exact=True) }}\n      run_constrained:\n        - libprotobuf {{ major ~ \".\" ~ version }}\n    test:\n      commands:\n        - test -f $PREFIX/include/google/protobuf/proto_api.h      # [unix]\n        - test -f $PREFIX/include/google/protobuf/pyext/message.h  # [unix]\n        - if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\proto_api.h exit 1      # [win]\n        - if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\pyext\\message.h exit 1  # [win]\n\nabout:\n  home: https://developers.google.com/protocol-buffers/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler.\n  description: |\n    Protocol buffers are Google's language-neutral,\n    platform-neutral, extensible mechanism for serializing structured data-\n    think XML, but smaller, faster, and simpler.\n  dev_url: https://github.com/protocolbuffers/protobuf\n  doc_url: https://developers.google.com/protocol-buffers/\n  doc_source_url: https://github.com/protocolbuffers/protobuf/releases\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - jjerphan\n    - xylar\n    - dopplershift\n    - jakirkham\n    - ocefpaf\n    - wesm\n    - hajapy\n    - xhochy\n    - h-vetinari\n  feedstock-name: libprotobuf\n",
 "req": {
  "__set__": true,
  "elements": [
   "__osx",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "gtest",
   "jsoncpp",
   "libabseil",
   "libabseil-tests",
   "libprotobuf",
   "ninja",
   "rsync",
   "ucrt",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libprotobuf",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "rsync"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx >=10.13",
    "libprotobuf",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz",
 "version": "4.25.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/libprotobuf.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral,\nplatform-neutral, extensible mechanism for serializing structured data-\nthink XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/releases",
   "doc_url": "https://developers.google.com/protocol-buffers/",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format. C++ Libraries and protoc, the protobuf compiler."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "feedstock-name": "libprotobuf",
   "recipe-maintainers": [
    "JohanMabille",
    "jjerphan",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "wesm",
    "hajapy",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "gtest",
      "jsoncpp"
     ],
     "run_exports": [
      "libprotobuf"
     ]
    },
    "name": "libprotobuf",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib"
     ],
     "run": [
      "ucrt"
     ]
    },
    "script": "build-lib.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\libprotoc.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotoc.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotoc-static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\libprotobuf.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotobuf-static.lib exit 1",
      "if not exist %LIBRARY_BIN%\\libprotobuf-lite.dll exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-lite.lib exit 1",
      "if exist %LIBRARY_LIB%\\libprotobuf-lite-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\protobuf\\protobuf-config.cmake exit 1",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf",
      "pkg-config --print-errors --exact-version \"25.2.0\" protobuf-lite",
      "protoc --help",
      "cd cmake_test",
      "cmake -GNinja %CMAKE_ARGS% .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "always_include_files": [
      "Library/lib/cmake/protobuf/"
     ],
     "ignore_run_exports_from": [
      "jsoncpp"
     ]
    },
    "name": "libprotobuf-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "gtest",
      "jsoncpp",
      "libabseil",
      "libabseil-tests",
      "zlib",
      "libprotobuf"
     ],
     "run": [
      "libprotobuf"
     ]
    },
    "script": "build-lib.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\libprotoc-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-static.lib exit 1",
      "if not exist %LIBRARY_LIB%\\libprotobuf-lite-static.lib exit 1",
      "cd cmake_test",
      "cmake -GNinja %CMAKE_ARGS% .",
      "cmake --build ."
     ],
     "files": [
      "cmake_test/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "zlib"
     ]
    }
   },
   {
    "name": "libprotobuf-python-headers",
    "requirements": {
     "build": [],
     "host": [
      "libprotobuf"
     ],
     "run_constrained": [
      "libprotobuf 4.25.2"
     ]
    },
    "script": "build-pyheaders.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\proto_api.h exit 1",
      "if not exist %LIBRARY_PREFIX%\\include\\google\\protobuf\\pyext\\message.h exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "libprotobuf-split",
   "version": "4.25.2"
  },
  "source": [
   {
    "patches": [
     "patches/0001-use-consistent-cmake-location.patch",
     "patches/0002-set-static-lib-extension-on-windows.patch",
     "patches/0003-always-look-for-shared-abseil-builds.patch",
     "patches/0004-Export-functions-in-google-compiler-java-names.patch",
     "patches/0005-do-not-install-vendored-gmock.patch",
     "patches/0006-Fix-getting-env-variables-on-windows.patch",
     "patches/0007-Workaround-false-positive-warning-in-MSVC.-Fixes-htt.patch",
     "patches/0008-fix-pkg-config-metadata-for-shared-abseil-on-windows.patch",
     "patches/0009-disable-MapImplTest.RandomOrdering-due-to-flakiness.patch"
    ],
    "sha256": "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v25.2.tar.gz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "gtest",
    "jsoncpp",
    "libabseil",
    "libabseil-tests",
    "libprotobuf",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libprotobuf",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "zlib"
   ]
  }
 }
}