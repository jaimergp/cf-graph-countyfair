{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "infrared",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Infrared allows specifying problems declaratively, which are then\nautomatically solved by tree decomposition based efficient algorithms.\nIt is therefore well suited for rapid prototyping and development of\nmethods that benefit from such techniques. Infrared's\nsolvers can either optimize or perform Boltzmann sampling based on defined\nfeatures.  Problems are specified using a modeling\ninterface in Python, which also supports the definition of specific\nconstraints, functions, and features.  Infrared implements a fast and\nspace efficient C++ engine that evaluates the constraint networks.\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A declarative framework for tree decomposition powered optimization and Boltzmann sampling"
  },
  "build": {
   "number": "5",
   "script": [
    "export CMAKE_GENERATOR=\"Ninja\"",
    "PYTHON -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "python",
    "pip !=22.1.0"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz"
  },
  "test": {
   "imports": [
    "infrared"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Infrared allows specifying problems declaratively, which are then\nautomatically solved by tree decomposition based efficient algorithms.\nIt is therefore well suited for rapid prototyping and development of\nmethods that benefit from such techniques. Infrared's\nsolvers can either optimize or perform Boltzmann sampling based on defined\nfeatures.  Problems are specified using a modeling\ninterface in Python, which also supports the definition of specific\nconstraints, functions, and features.  Infrared implements a fast and\nspace efficient C++ engine that evaluates the constraint networks.\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A declarative framework for tree decomposition powered optimization and Boltzmann sampling"
  },
  "build": {
   "number": "5",
   "script": [
    "export CMAKE_GENERATOR=\"Ninja\"",
    "PYTHON -m pip install . -vvv",
    "export CMAKE_CXX_STANDARD=\"17\"",
    "export CXXFLAGS=\"-std=c++17\"",
    "set \"CMAKE_GENERATOR=Ninja\"",
    "set \"CMAKE_GENERATOR_PLATFORM=\"",
    "set \"CMAKE_GENERATOR_TOOLSET=\"",
    "set \"CMAKE_CXX_STANDARD=17\"",
    "set \"CXXFLAGS=/std:c++17\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "python",
    "pip !=22.1.0"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz"
  },
  "test": {
   "imports": [
    "infrared"
   ]
  }
 },
 "name": "infrared",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Infrared allows specifying problems declaratively, which are then\nautomatically solved by tree decomposition based efficient algorithms.\nIt is therefore well suited for rapid prototyping and development of\nmethods that benefit from such techniques. Infrared's\nsolvers can either optimize or perform Boltzmann sampling based on defined\nfeatures.  Problems are specified using a modeling\ninterface in Python, which also supports the definition of specific\nconstraints, functions, and features.  Infrared implements a fast and\nspace efficient C++ engine that evaluates the constraint networks.\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A declarative framework for tree decomposition powered optimization and Boltzmann sampling"
  },
  "build": {
   "number": "5",
   "script": [
    "export CMAKE_GENERATOR=\"Ninja\"",
    "export CMAKE_CXX_STANDARD=\"17\"",
    "export CXXFLAGS=\"-std=c++17\"",
    "PYTHON -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "python",
    "pip !=22.1.0"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz"
  },
  "test": {
   "imports": [
    "infrared"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Infrared allows specifying problems declaratively, which are then\nautomatically solved by tree decomposition based efficient algorithms.\nIt is therefore well suited for rapid prototyping and development of\nmethods that benefit from such techniques. Infrared's\nsolvers can either optimize or perform Boltzmann sampling based on defined\nfeatures.  Problems are specified using a modeling\ninterface in Python, which also supports the definition of specific\nconstraints, functions, and features.  Infrared implements a fast and\nspace efficient C++ engine that evaluates the constraint networks.\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A declarative framework for tree decomposition powered optimization and Boltzmann sampling"
  },
  "build": {
   "number": "5",
   "script": [
    "export CMAKE_GENERATOR=\"Ninja\"",
    "export CMAKE_CXX_STANDARD=\"17\"",
    "export CXXFLAGS=\"-std=c++17\"",
    "PYTHON -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "python",
    "pip !=22.1.0"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz"
  },
  "test": {
   "imports": [
    "infrared"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "infrared"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/infrared.json"
 },
 "raw_meta_yaml": "{% set name = \"Infrared\" %}\n{% set version = \"1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.inria.fr/amibio/{{ name }}/-/archive/v{{ version }}/{{ name }}-v{{ version }}.tar.gz\n  sha256: 45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768\n\nbuild:\n  number: 5\n  script:\n    - export CMAKE_GENERATOR=\"Ninja\"        # [unix]\n    - export CMAKE_CXX_STANDARD=\"17\"        # [osx]\n    - export CXXFLAGS=\"-std=c++17\"          # [osx]\n    - set \"CMAKE_GENERATOR=Ninja\"           # [win]\n    - set \"CMAKE_GENERATOR_PLATFORM=\"       # [win]\n    - set \"CMAKE_GENERATOR_TOOLSET=\"        # [win]\n    - set \"CMAKE_CXX_STANDARD=17\"           # [win]\n    - set \"CXXFLAGS=/std:c++17\"             # [win]\n    - \"{{ PYTHON }} -m pip install . -vvv\"\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - pybind11\n    - python\n    - pip !=22.1.0\n  run:\n    - python\n    - networkx >=2\n    - treedecomp\n\ntest:\n  imports:\n    - infrared\n\nabout:\n  home: \"https://gitlab.inria.fr/amibio/Infrared\"\n  license: \"GPL-3.0-only\"\n  license_family: GPL\n  license_file: COPYING\n  summary: 'A declarative framework for tree decomposition powered optimization and Boltzmann sampling'\n  description: |\n    Infrared allows specifying problems declaratively, which are then\n    automatically solved by tree decomposition based efficient algorithms.\n    It is therefore well suited for rapid prototyping and development of\n    methods that benefit from such techniques. Infrared's\n    solvers can either optimize or perform Boltzmann sampling based on defined\n    features.  Problems are specified using a modeling\n    interface in Python, which also supports the definition of specific\n    constraints, functions, and features.  Infrared implements a fast and\n    space efficient C++ engine that evaluates the constraint networks.\n  doc_url: https://www.lix.polytechnique.fr/~will/Software/Infrared\n  dev_url: https://gitlab.inria.fr/amibio/Infrared\n\nextra:\n  recipe-maintainers:\n    - anthonyhtyao\n    - s-will\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "networkx",
   "ninja",
   "pip",
   "pybind11",
   "python",
   "treedecomp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip !=22.1.0",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx >=2",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz",
 "version": "1.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/infrared.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Infrared allows specifying problems declaratively, which are then\nautomatically solved by tree decomposition based efficient algorithms.\nIt is therefore well suited for rapid prototyping and development of\nmethods that benefit from such techniques. Infrared's\nsolvers can either optimize or perform Boltzmann sampling based on defined\nfeatures.  Problems are specified using a modeling\ninterface in Python, which also supports the definition of specific\nconstraints, functions, and features.  Infrared implements a fast and\nspace efficient C++ engine that evaluates the constraint networks.\n",
   "dev_url": "https://gitlab.inria.fr/amibio/Infrared",
   "doc_url": "https://www.lix.polytechnique.fr/~will/Software/Infrared",
   "home": "https://gitlab.inria.fr/amibio/Infrared",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "A declarative framework for tree decomposition powered optimization and Boltzmann sampling"
  },
  "build": {
   "number": "5",
   "script": [
    "set \"CMAKE_GENERATOR=Ninja\"",
    "set \"CMAKE_GENERATOR_PLATFORM=\"",
    "set \"CMAKE_GENERATOR_TOOLSET=\"",
    "set \"CMAKE_CXX_STANDARD=17\"",
    "set \"CXXFLAGS=/std:c++17\"",
    "PYTHON -m pip install . -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "anthonyhtyao",
    "s-will"
   ]
  },
  "package": {
   "name": "infrared",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "pybind11",
    "python",
    "pip !=22.1.0"
   ],
   "run": [
    "python",
    "networkx >=2",
    "treedecomp"
   ]
  },
  "source": {
   "sha256": "45c845c7bbdcbac37c40569742d5113dd9f9b755cfacc8ab60983a9b2942d768",
   "url": "https://gitlab.inria.fr/amibio/Infrared/-/archive/v1.2/Infrared-v1.2.tar.gz"
  },
  "test": {
   "imports": [
    "infrared"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "networkx",
    "python",
    "treedecomp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}