{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "parallelproj",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgomp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgomp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgomp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ]
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "libgomp"
     ],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
      "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_cuda.h"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "name": "parallelproj-split",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [
      "llvm-openmp"
     ],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "build-parallelproj.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
      "test -f $PREFIX/include/parallelproj_c.h",
      "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "build-python.sh",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libparallelproj",
   "parallelproj"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/parallelproj.json"
 },
 "raw_meta_yaml": "{% set name = \"parallelproj\" %}\n{% set version = \"1.7.3\" %}\n{% set build_number = 0 %}\n\n{% if cuda_compiler_version != \"None\" %}\n{% set build_number = build_number + 200 %}\n{% endif %}\n\npackage:\n  name: parallelproj-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gschramm/parallelproj/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d\n\nbuild:\n  number: {{ build_number }}\n\noutputs:\n  - name: libparallelproj\n    script: build-parallelproj.sh  # [unix]\n    script: bld-parallelproj.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libparallelproj') }}\n        - libparallelproj =*=cuda*  # [cuda_compiler_version != \"None\"]\n        - libparallelproj =*=cpu*  # [cuda_compiler_version == \"None\"]\n      ignore_run_exports:\n        - cudatoolkit\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}  # [cuda_compiler_version != \"None\"]\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - cmake >=3.23\n        - ninja\n        - python\n      host:\n        - libgomp      # [linux]\n        - llvm-openmp  # [osx]\n      run:\n        - __cuda  # [cuda_compiler_version != \"None\"]\n      run_constrained:\n        - parallelproj >=1.3.4  # parallelproj output renamed to libparallelproj\n    test:\n      commands:\n        - test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT  # [unix]\n        - test -f $PREFIX/include/parallelproj_c.h  # [unix]\n        - test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake  # [unix]\n        - test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT  # [linux and cuda_compiler_version != \"None\"]\n        - test -f $PREFIX/include/parallelproj_cuda.h  # [linux and cuda_compiler_version != \"None\"]\n        - if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1  # [win]\n        - if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1  # [win]\n\n  - name: parallelproj\n    script: build-python.sh  # [unix]\n    script: bld-python.bat  # [win]\n    build:\n      skip: true  # [not linux64]\n      noarch: python\n      script_env:\n        - SETUPTOOLS_SCM_PRETEND_VERSION={{ PKG_VERSION }}\n    requirements:\n      build:\n        - python  # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n      host:\n        - pip\n        - setuptools >=45\n        - setuptools_scm >=7.0\n        - setuptools_scm_git_archive\n      run:\n        - {{ pin_subpackage('libparallelproj') }}\n        - python >=3.9\n        - numpy >=1.22\n        - matplotlib-base >=3.0\n        - array-api-compat\n        - scipy >=1.0\n    test:\n      requires:\n        - pip\n        - pytest\n      imports:\n        - parallelproj\n      source_files:\n        - test/parallelproj/*\n      commands:\n        - pip check\n        - pytest test/parallelproj -vs\n\nabout:\n  home: https://github.com/gschramm/parallelproj\n  license: MIT\n  license_file: LICENSE\n  summary: parallelized TOF PET projectors\n\nextra:\n  recipe-maintainers:\n    - gschramm\n  feedstock-name: parallelproj\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "array-api-compat",
   "c_compiler_stub",
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "libgomp",
   "libparallelproj",
   "llvm-openmp",
   "matplotlib-base",
   "ninja",
   "numpy",
   "pip",
   "python",
   "scipy",
   "setuptools",
   "setuptools_scm",
   "setuptools_scm_git_archive"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "openmp",
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "c_compiler_stub",
    "ctng-compilers",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "openmp",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.23",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgomp",
    "llvm-openmp",
    "pip",
    "setuptools >=45",
    "setuptools_scm >=7.0",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base >=3.0",
    "numpy >=1.22",
    "python >=3.9",
    "scipy >=1.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz",
 "version": "1.7.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/parallelproj.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/gschramm/parallelproj",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "parallelized TOF PET projectors"
  },
  "build": {
   "number": "200"
  },
  "extra": {
   "feedstock-name": "parallelproj",
   "recipe-maintainers": [
    "gschramm",
    "gschramm",
    "gschramm",
    "gschramm"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cpu*"
     ],
     "string": "cpu_h1234567_0"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda120_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda112_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports": [
      "cudatoolkit"
     ],
     "run_exports": [
      "libparallelproj",
      "libparallelproj =*=cuda*"
     ],
     "string": "cuda118_h1234567_200"
    },
    "name": "libparallelproj",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "cmake >=3.23",
      "ninja",
      "python"
     ],
     "host": [],
     "run": [
      "__cuda"
     ],
     "run_constrained": [
      "parallelproj >=1.3.4"
     ]
    },
    "script": "bld-parallelproj.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
      "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
      "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
      "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "script_env": [
      "SETUPTOOLS_SCM_PRETEND_VERSION=1.7.3"
     ],
     "skip": true
    },
    "name": "parallelproj",
    "requirements": {
     "build": [],
     "host": [
      "pip",
      "setuptools >=45",
      "setuptools_scm >=7.0",
      "setuptools_scm_git_archive"
     ],
     "run": [
      "libparallelproj",
      "python >=3.9",
      "numpy >=1.22",
      "matplotlib-base >=3.0",
      "array-api-compat",
      "scipy >=1.0"
     ]
    },
    "script": "bld-python.bat",
    "test": {
     "commands": [
      "pip check",
      "pytest test/parallelproj -vs"
     ],
     "imports": [
      "parallelproj"
     ],
     "requires": [
      "pip",
      "pytest"
     ],
     "source_files": [
      "test/parallelproj/*"
     ]
    }
   }
  ],
  "package": {
   "name": "parallelproj-split",
   "version": "1.7.3"
  },
  "source": {
   "sha256": "7b79a52e39334e3231428525e8e640d42a4453c1f1c32b576de8cf60501c4f4d",
   "url": "https://github.com/gschramm/parallelproj/archive/refs/tags/v1.7.3.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "setuptools",
    "setuptools_scm",
    "setuptools_scm_git_archive"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "array-api-compat",
    "libparallelproj",
    "matplotlib-base",
    "numpy",
    "python",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 }
}