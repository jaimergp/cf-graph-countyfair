{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "store_build_artifacts": true
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "pypy3.6",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://pypy.org/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "pypy3/LICENSE",
   "summary": "PyPy is a Python interpreter and just-in-time compiler. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using PyPy in conda\n"
  },
  "build": {
   "number": "0",
   "skip_compile_pyc": [
    "lib*"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip"
   ]
  },
  "package": {
   "name": "pypy3.9",
   "version": "7.3.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "python >=2.7,<3",
    "pkg-config",
    "pycparser",
    "expat"
   ],
   "host": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "make",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xorg-libx11",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run_constrained": [
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy"
   ]
  },
  "source": [
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   }
  ],
  "test": {
   "commands": [
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/Grammar3.9*.pickle",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/PatternGrammar3.9*.pickle",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "expat",
    "pkg-config",
    "pycparser",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "make",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xorg-libx11",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://pypy.org/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "pypy3/LICENSE",
   "summary": "PyPy is a Python interpreter and just-in-time compiler. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using PyPy in conda\n"
  },
  "build": {
   "number": "0",
   "skip_compile_pyc": [
    "lib*",
    "lib*",
    "lib*"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip",
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip",
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip"
   ]
  },
  "package": {
   "name": "pypy3.9",
   "version": "7.3.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "python >=2.7,<3",
    "pkg-config",
    "pycparser",
    "expat",
    "c_compiler_stub",
    "python >=2.7,<3",
    "pkg-config",
    "pycparser",
    "expat",
    "c_compiler_stub",
    "pycparser",
    "expat"
   ],
   "host": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "make",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xorg-libx11",
    "xz",
    "zlib",
    "tzdata",
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata",
    "bzip2",
    "expat",
    "jom ==1.1.2",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata",
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata",
    "__osx >=10.13",
    "bzip2",
    "expat",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run_constrained": [
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy",
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy",
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy"
   ]
  },
  "source": [
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   },
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/clibffi.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   },
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/lzma_build.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   },
   {
    "folder": "pypy2-binary",
    "sha256": "fcc8f6b3b472a77eaa754951f288fe234b4953bfba845888dd839b9b862cb891",
    "url": "https://downloads.python.org/pypy/pypy2.7-v7.3.6-win64.zip"
   }
  ],
  "test": {
   "commands": [
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/Grammar3.9*.pickle",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/PatternGrammar3.9*.pickle",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl",
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/Grammar3.9*.pickle",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/PatternGrammar3.9*.pickle",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl",
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "pypy3 -c \"import tkinter; tkinter.Tk()\"",
    "if not exist %PREFIX%\\lib\\lib2to3\\Grammar3.9*.pickle exit 1",
    "if not exist %PREFIX%\\lib\\lib2to3\\PatternGrammar3.9*.pickle exit 1",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl",
    "if not exist %PREFIX%\\Scripts\\ exit 1"
   ]
  }
 },
 "name": "pypy3.9",
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://pypy.org/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "pypy3/LICENSE",
   "summary": "PyPy is a Python interpreter and just-in-time compiler. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using PyPy in conda\n"
  },
  "build": {
   "number": "0",
   "skip_compile_pyc": [
    "lib*"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip"
   ]
  },
  "package": {
   "name": "pypy3.9",
   "version": "7.3.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "python >=2.7,<3",
    "pkg-config",
    "pycparser",
    "expat"
   ],
   "host": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata",
    "__osx >=10.13"
   ],
   "run_constrained": [
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy"
   ]
  },
  "source": [
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/clibffi.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   }
  ],
  "test": {
   "commands": [
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/Grammar3.9*.pickle",
    "test -f $PREFIX/lib/pypy3.9/lib2to3/PatternGrammar3.9*.pickle",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "expat",
    "pkg-config",
    "pycparser",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pypy3.9"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pypy3.6.json"
 },
 "raw_meta_yaml": "{% if name_suffix is not defined %}\n{% set name_suffix = \"3.9\" %}\n{% endif %}\n{% set name = \"pypy\" ~ name_suffix %}\n{% set version = \"7.3.15\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - folder: pypy3\n    url: https://downloads.python.org/pypy/{{ name }}-v{{ version }}-src.tar.bz2\n    sha256: 6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18  # [name_suffix == \"3.9\"]\n    sha256: 837622130b36603a1893899bd9f529961a8e4a56c9eb67268d72ddf8920c9579  # [name_suffix == \"3.10\"]\n    patches:\n      - patches/fficurses.patch\n      - patches/tklib_build.patch\n      - patches/tk_app.patch\n      - patches/lzma_build.patch  # [win]\n      - patches/clibffi.patch     # [osx]\n      - patches/0001-Add-conda-forge-version.patch\n      - patches/0021-Adapt-platform-to-patch-0001.patch\n      - patches/0023b-Fix-LIBDIR.patch\n      - patches/0030-Swap-libffi8-for-7.patch\n      # Patches from python-feedstock\n      - patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch\n      - patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch\n      - patches/0013-Disable-new-dtags-in-unixccompiler.py.patch\n      - patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch\n      - patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch\n      - patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch\n      - patches/0032-Copy-dependent-libs-for-venvs.patch\n      - patches/0001-Fix-TZPATH-on-windows.patch  # [name_suffix == \"3.9\"]\n      - patches/0001-Fix-TZPATH-on-windows-py3.10.patch  # [name_suffix == \"3.10\"]\n      # Patches since the release\n      - patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch\n      - patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch\n      - patches/0004-PyPy-is-not-affected-by-bpo-35797.patch\n      - patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch\n      - patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch  # [name_suffix == \"3.9\"]\n\n  - url: https://downloads.python.org/pypy/pypy2.7-v7.3.6-win64.zip           # [win]\n    sha256: fcc8f6b3b472a77eaa754951f288fe234b4953bfba845888dd839b9b862cb891  # [win]\n    folder: pypy2-binary                                                      # [win]\n\nbuild:\n  number: 0\n  skip_compile_pyc:\n    - lib*\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - python >=2.7,<3   # [not win]\n    - pkg-config        # [unix]\n    - pycparser\n    - expat\n  host:\n    - bzip2\n    - expat\n    - gdbm     # [not win]\n    - jom ==1.1.2  # [win]\n    - libffi\n    - make     # [linux]\n    - ncurses  # [not win]\n    - openssl\n    - sqlite\n    - tk\n    - xorg-libx11  # [linux]\n    - xz\n    - zlib\n    - tzdata\n  run:\n    - bzip2\n    - expat\n    - gdbm     # [not win]\n    - libffi\n    - ncurses  # [not win]\n    - openssl\n    - sqlite\n    - tk\n    - xz\n    - zlib\n    - tzdata\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx and x86_64]\n  run_constrained:\n    - pypy3.5 ==99999999999\n    - pypy3.6 ==99999999999\n    - pypy3.7 ==99999999999\n    - pypy3.8 ==99999999999\n    - pypy3.9 ==99999999999  # [name_suffix==\"3.10\"]\n    - pypy3.10 ==99999999999  # [name_suffix==\"3.9\"]\n    - python {{ name_suffix }}.* *_73_pypy\n\ntest:\n  commands:\n    - pypy3 --help\n    - pypy3 -c \"import platform; print(platform._sys_version())\"\n    - pypy3 -c \"import tkinter; tkinter.Tk()\"                                                    # [not unix]\n    - test -f $PREFIX/lib/pypy{{ name_suffix }}/lib2to3/Grammar{{ name_suffix }}*.pickle         # [unix]\n    - test -f $PREFIX/lib/pypy{{ name_suffix }}/lib2to3/PatternGrammar{{ name_suffix }}*.pickle  # [unix]\n    - if not exist %PREFIX%\\lib\\lib2to3\\Grammar{{ name_suffix }}*.pickle exit 1                  # [win]\n    - if not exist %PREFIX%\\lib\\lib2to3\\PatternGrammar{{ name_suffix }}*.pickle exit 1           # [win]\n    # Check that zoneinfo works from Python 3.9 onwards, see upstream issue:\n    # https://foss.heptapod.net/pypy/pypy/-/issues/3653 and conda-specific patch\n    # patches/0001-Fix-TZPATH-on-windows.patch\n    - pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"\n    - pypy3 -m test.test_ssl\n    # make sure Scripts dir exists so downstream entry_points are created successfully\n    - if not exist %PREFIX%\\Scripts\\ exit 1  # [win]\n\nabout:\n    home: http://pypy.org/\n    license: MIT\n    license_family: MIT\n    license_file: pypy3/LICENSE\n    summary: >\n        PyPy is a Python interpreter and just-in-time compiler. See\n        https://conda-forge.org/blog/posts/2020-03-10-pypy for more information\n        about using PyPy in conda\n\nextra:\n  recipe-maintainers:\n    - omerbenamram\n    - ohadravid\n    - isuruf\n    - ocefpaf\n    - mattip\n",
 "req": {
  "__set__": true,
  "elements": [
   "__osx",
   "bzip2",
   "c_compiler_stub",
   "expat",
   "gdbm",
   "jom",
   "libffi",
   "make",
   "ncurses",
   "openssl",
   "pkg-config",
   "pycparser",
   "python",
   "sqlite",
   "tk",
   "tzdata",
   "xorg-libx11",
   "xz",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "expat",
    "pkg-config",
    "pycparser",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "expat",
    "gdbm",
    "jom",
    "libffi",
    "make",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xorg-libx11",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx",
    "bzip2",
    "c_compiler_stub",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "expat",
    "pkg-config",
    "pycparser",
    "python >=2.7,<3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "gdbm",
    "jom ==1.1.2",
    "libffi",
    "make",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xorg-libx11",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__osx >=10.13",
    "bzip2",
    "expat",
    "gdbm",
    "libffi",
    "ncurses",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2",
 "version": "7.3.15",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pypy3.6.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "http://pypy.org/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "pypy3/LICENSE",
   "summary": "PyPy is a Python interpreter and just-in-time compiler. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using PyPy in conda\n"
  },
  "build": {
   "number": "0",
   "skip_compile_pyc": [
    "lib*"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "omerbenamram",
    "ohadravid",
    "isuruf",
    "ocefpaf",
    "mattip"
   ]
  },
  "package": {
   "name": "pypy3.9",
   "version": "7.3.15"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "pycparser",
    "expat"
   ],
   "host": [
    "bzip2",
    "expat",
    "jom ==1.1.2",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run": [
    "bzip2",
    "expat",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "xz",
    "zlib",
    "tzdata"
   ],
   "run_constrained": [
    "pypy3.5 ==99999999999",
    "pypy3.6 ==99999999999",
    "pypy3.7 ==99999999999",
    "pypy3.8 ==99999999999",
    "pypy3.10 ==99999999999",
    "python 3.9.* *_73_pypy"
   ]
  },
  "source": [
   {
    "folder": "pypy3",
    "patches": [
     "patches/fficurses.patch",
     "patches/tklib_build.patch",
     "patches/tk_app.patch",
     "patches/lzma_build.patch",
     "patches/0001-Add-conda-forge-version.patch",
     "patches/0021-Adapt-platform-to-patch-0001.patch",
     "patches/0023b-Fix-LIBDIR.patch",
     "patches/0030-Swap-libffi8-for-7.patch",
     "patches/0009-runtime_library_dir_option-Use-1st-word-of-CC-as-com.patch",
     "patches/0012-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0013-Disable-new-dtags-in-unixccompiler.py.patch",
     "patches/0014-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0020-Use-ranlib-from-env-if-env-variable-is-set.patch",
     "patches/0024-Fix-LDSHARED-when-CC-is-overriden-on-Linux-too.patch",
     "patches/0032-Copy-dependent-libs-for-venvs.patch",
     "patches/0001-Fix-TZPATH-on-windows.patch",
     "patches/0001-fix-os.scandir-for-unicode-filenames-on-windows.patch",
     "patches/0003-add-coding-to-test-file-for-cpython2-pypy2-does-not-.patch",
     "patches/0004-PyPy-is-not-affected-by-bpo-35797.patch",
     "patches/0005-underlying-_putwch-on-windows-accepts-a-chr-not-an-i.patch",
     "patches/0006-refactor-to-properly-create-ppc64-import-suffixes.patch"
    ],
    "sha256": "6bb9537d85aa7ad13c0aad2e41ff7fd55080bc9b4d1361b8f502df51db816e18",
    "url": "https://downloads.python.org/pypy/pypy3.9-v7.3.15-src.tar.bz2"
   },
   {
    "folder": "pypy2-binary",
    "sha256": "fcc8f6b3b472a77eaa754951f288fe234b4953bfba845888dd839b9b862cb891",
    "url": "https://downloads.python.org/pypy/pypy2.7-v7.3.6-win64.zip"
   }
  ],
  "test": {
   "commands": [
    "pypy3 --help",
    "pypy3 -c \"import platform; print(platform._sys_version())\"",
    "pypy3 -c \"import tkinter; tkinter.Tk()\"",
    "if not exist %PREFIX%\\lib\\lib2to3\\Grammar3.9*.pickle exit 1",
    "if not exist %PREFIX%\\lib\\lib2to3\\PatternGrammar3.9*.pickle exit 1",
    "pypy3 -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
    "pypy3 -m test.test_ssl",
    "if not exist %PREFIX%\\Scripts\\ exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "expat",
    "pycparser"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "jom",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "libffi",
    "openssl",
    "sqlite",
    "tk",
    "tzdata",
    "xz",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}