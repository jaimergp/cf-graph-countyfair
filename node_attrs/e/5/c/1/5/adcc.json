{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "store_build_artifacts": false
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "adcc",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
   "dev_url": "https://github.com/adc-connect/adcc",
   "doc_url": "https://adc-connect.org",
   "home": "https://adc-connect.org",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "adcc: Seamlessly connect your program to ADC"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "maxscheurer"
   ]
  },
  "package": {
   "name": "adcc",
   "version": "0.15.17"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ],
   "host": [
    "python",
    "setuptools",
    "pip",
    "libtensorlight >=3.0.1",
    "pybind11 >=2.6"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy >=1.14",
    "h5py >=2.9",
    "scipy >=1.2",
    "tqdm >=4.30",
    "opt_einsum >=3.0"
   ]
  },
  "source": {
   "sha256": "041b2f25f980fe4fbadceffd301024455591643cdf5b42bced8d9f9d2f1e6b4a",
   "url": "https://github.com/adc-connect/adcc/archive/v0.15.17.tar.gz"
  },
  "test": {
   "commands": [
    "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
    "test -f $SP_DIR/libadcc$PYLIB_EXT",
    "test -f $SP_DIR/adcc/AdcMethod.py"
   ],
   "imports": [
    "adcc"
   ],
   "requires": [
    "pytest",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libtensorlight",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "numpy",
    "opt_einsum",
    "python",
    "scipy",
    "setuptools",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
   "dev_url": "https://github.com/adc-connect/adcc",
   "doc_url": "https://adc-connect.org",
   "home": "https://adc-connect.org",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "adcc: Seamlessly connect your program to ADC"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "maxscheurer"
   ]
  },
  "package": {
   "name": "adcc",
   "version": "0.15.17"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ],
   "host": [
    "python",
    "setuptools",
    "pip",
    "libtensorlight >=3.0.1",
    "pybind11 >=2.6"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy >=1.14",
    "h5py >=2.9",
    "scipy >=1.2",
    "tqdm >=4.30",
    "opt_einsum >=3.0"
   ]
  },
  "source": {
   "sha256": "041b2f25f980fe4fbadceffd301024455591643cdf5b42bced8d9f9d2f1e6b4a",
   "url": "https://github.com/adc-connect/adcc/archive/v0.15.17.tar.gz"
  },
  "test": {
   "commands": [
    "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
    "test -f $SP_DIR/libadcc$PYLIB_EXT",
    "test -f $SP_DIR/adcc/AdcMethod.py"
   ],
   "imports": [
    "adcc"
   ],
   "requires": [
    "pytest",
    "pip"
   ]
  }
 },
 "name": "adcc",
 "osx_64_meta_yaml": {
  "about": {
   "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
   "dev_url": "https://github.com/adc-connect/adcc",
   "doc_url": "https://adc-connect.org",
   "home": "https://adc-connect.org",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "adcc: Seamlessly connect your program to ADC"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "maxscheurer"
   ]
  },
  "package": {
   "name": "adcc",
   "version": "0.15.17"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ],
   "host": [
    "python",
    "setuptools",
    "pip",
    "libtensorlight >=3.0.1",
    "pybind11 >=2.6"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy >=1.14",
    "h5py >=2.9",
    "scipy >=1.2",
    "tqdm >=4.30",
    "opt_einsum >=3.0"
   ]
  },
  "source": {
   "sha256": "041b2f25f980fe4fbadceffd301024455591643cdf5b42bced8d9f9d2f1e6b4a",
   "url": "https://github.com/adc-connect/adcc/archive/v0.15.17.tar.gz"
  },
  "test": {
   "commands": [
    "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
    "test -f $SP_DIR/libadcc$PYLIB_EXT",
    "test -f $SP_DIR/adcc/AdcMethod.py"
   ],
   "imports": [
    "adcc"
   ],
   "requires": [
    "pytest",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libtensorlight",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "numpy",
    "opt_einsum",
    "python",
    "scipy",
    "setuptools",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
   "dev_url": "https://github.com/adc-connect/adcc",
   "doc_url": "https://adc-connect.org",
   "home": "https://adc-connect.org",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL3",
   "license_file": "LICENSE",
   "summary": "adcc: Seamlessly connect your program to ADC"
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "maxscheurer"
   ]
  },
  "package": {
   "name": "adcc",
   "version": "0.15.17"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ],
   "host": [
    "python",
    "setuptools",
    "pip",
    "libtensorlight >=3.0.1",
    "pybind11 >=2.6"
   ],
   "run": [
    "python",
    "setuptools",
    "numpy >=1.14",
    "h5py >=2.9",
    "scipy >=1.2",
    "tqdm >=4.30",
    "opt_einsum >=3.0"
   ]
  },
  "source": {
   "sha256": "041b2f25f980fe4fbadceffd301024455591643cdf5b42bced8d9f9d2f1e6b4a",
   "url": "https://github.com/adc-connect/adcc/archive/v0.15.17.tar.gz"
  },
  "test": {
   "commands": [
    "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
    "test -f $SP_DIR/libadcc$PYLIB_EXT",
    "test -f $SP_DIR/adcc/AdcMethod.py"
   ],
   "imports": [
    "adcc"
   ],
   "requires": [
    "pytest",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libtensorlight",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py",
    "numpy",
    "opt_einsum",
    "python",
    "scipy",
    "setuptools",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "adcc"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/adcc.json"
 },
 "raw_meta_yaml": "{% set version = \"0.15.17\" %}\n\npackage:\n  name: adcc\n  version: {{ version }}\n\nsource:\n  url: https://github.com/adc-connect/adcc/archive/v{{ version }}.tar.gz\n  sha256: 041b2f25f980fe4fbadceffd301024455591643cdf5b42bced8d9f9d2f1e6b4a\n\nbuild:\n  number: 2\n  skip: true  # [win or py<37]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkgconfig\n    - wget\n  host:\n    - python\n    - setuptools\n    - pip\n    - libtensorlight >=3.0.1\n    - pybind11 >=2.6\n  run:\n    - python\n    - setuptools\n    - numpy >=1.14\n    - h5py >=2.9\n    - scipy >=1.2\n    - tqdm >=4.30\n    - opt_einsum >=3.0\n\ntest:\n  requires:\n    - pytest\n    - pip\n  imports:\n    - adcc\n  commands:\n    - export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`\n    - test -f $SP_DIR/libadcc$PYLIB_EXT\n    - test -f $SP_DIR/adcc/AdcMethod.py\n\nabout:\n  home: https://adc-connect.org\n  dev_url: https://github.com/adc-connect/adcc\n  doc_url: https://adc-connect.org\n  license: GPL-3.0-or-later\n  license_family: GPL3\n  license_file: LICENSE\n  summary: 'adcc: Seamlessly connect your program to ADC'\n  description: |\n    adcc (**ADC-connect**) is a python-based framework for performing\n    the calculation of molecular spectra and electronically excited states\n    based upon the algebraic-diagrammatic construction (ADC) approach.\n    Arbitrary host programs may be used to supply a\n    self-consistent field (SCF) reference to start off the ADC calculation.\n    Currently adcc comes with ready-to-use interfaces to four programs,\n    namely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\n    starting a calculation from\n    statically computed data can be easily achieved.\n\nextra:\n  recipe-maintainers:\n    - maxscheurer\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "h5py",
   "libtensorlight",
   "numpy",
   "opt_einsum",
   "pip",
   "pkgconfig",
   "pybind11",
   "python",
   "scipy",
   "setuptools",
   "tqdm",
   "wget"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libtensorlight",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "h5py",
    "numpy",
    "opt_einsum",
    "python",
    "scipy",
    "setuptools",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pkgconfig",
    "wget"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libtensorlight >=3.0.1",
    "pip",
    "pybind11 >=2.6",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "h5py >=2.9",
    "numpy >=1.14",
    "opt_einsum >=3.0",
    "python",
    "scipy >=1.2",
    "setuptools",
    "tqdm >=4.30"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest"
   ]
  }
 },
 "url": "https://github.com/adc-connect/adcc/archive/v0.15.17.tar.gz",
 "version": "0.15.17",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/adcc.json"
 }
}