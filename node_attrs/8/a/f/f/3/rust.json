{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "rust",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-x86_64-unknown-linux-gnu",
      "gcc_impl_linux-64",
      "sysroot_linux-64 >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-pc-windows-msvc",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-pc-windows-msvc",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-pc-windows-msvc)\"",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "9eedaea9719914a0f4673899aa11693607f25486569913fcca5905ef1da784ec",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3d29cb395da2bbed7b8e1b9846360ba03686b26bdbc8bf8c279c093e450f6105",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "68c7c2d05b80b47d50c1552c4a8dbbc9323a01b37d025c835d1fb55f4c42c347",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "2aa0d63a48840a55b7a1edda9cbb9e5f0d560db91c7e54f1a49db23cd6457397",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "a9cd1a476f699d2598bef6901521095f4b3ce5fa5226725c6468780d20422288",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "4bed3d4db02bb67e1c420df3364ef9c39951f252d4f3a31559711bf8bba9176e",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "561f4f36d7a9e445e3c1ac7fd85e8b06c7abd8aaa47506552f16c308980b4e1d",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "20313b49410695cf65548cb59fe3769d2320cdc704ad49ea75080cd8a5ca3b19",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "c1b909ebe359c84d37326140b1285eca56d1db995db2651993cc7668523ea73c",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3152706fe03c23d781b1ff42ce9f1303245c540173d6bba202427968a4c2fa56",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "16b1ba53b8e1e6ba10b9e2f41a3f94d8cc790ce6f3e825eccf7fff87fc608aa5",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-64",
    "rust-std-x86_64-unknown-linux-gnu",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-aarch64-unknown-linux-gnu",
      "gcc_impl_linux-aarch64",
      "sysroot_linux-aarch64 >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "2e89bad7857711a1c11d017ea28fbfeec54076317763901194f8f5decbac1850",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-aarch64-unknown-linux-gnu.tar.xz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "rust-std-aarch64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-aarch64",
    "rust-std-aarch64-unknown-linux-gnu",
    "sysroot_linux-aarch64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-powerpc64le-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo powerpc64le-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "gcc_impl_linux-ppc64le",
      "sysroot_linux-ppc64le >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo powerpc64le-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "0eb2b3efc93cad3baf4653357a4a8a2d5a963ae80dbce8955e1bb4f60e02c659",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-powerpc64le-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-ppc64le",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "sysroot_linux-ppc64le"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-x86_64-unknown-linux-gnu",
      "gcc_impl_linux-64",
      "sysroot_linux-64 >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-pc-windows-msvc",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-pc-windows-msvc",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-pc-windows-msvc)\"",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-aarch64-unknown-linux-gnu",
      "gcc_impl_linux-aarch64",
      "sysroot_linux-aarch64 >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-powerpc64le-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo powerpc64le-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "run_exports": {
      "strong_constrains": [
       "__glibc >=2.17"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "c_compiler_stub",
      "c_stdlib_stub",
      "zlib"
     ],
     "run": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "gcc_impl_linux-ppc64le",
      "sysroot_linux-ppc64le >=2.17"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo powerpc64le-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "run_exports": {
      "strong_constrains": [
       "__osx >=10.13"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-apple-darwin"
     ],
     "run": [
      "rust-std-x86_64-apple-darwin"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-apple-darwin"
     ],
     "run": [
      "rust-std-aarch64-apple-darwin"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [
      "rust-std-x86_64-pc-windows-msvc"
     ],
     "run": [
      "rust-std-x86_64-pc-windows-msvc"
     ]
    },
    "script": "install-rust.bat",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-pc-windows-msvc",
      "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
     ],
     "requires": [
      "posix"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
      "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [
    "posix"
   ],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "9eedaea9719914a0f4673899aa11693607f25486569913fcca5905ef1da784ec",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3d29cb395da2bbed7b8e1b9846360ba03686b26bdbc8bf8c279c093e450f6105",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "68c7c2d05b80b47d50c1552c4a8dbbc9323a01b37d025c835d1fb55f4c42c347",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "2aa0d63a48840a55b7a1edda9cbb9e5f0d560db91c7e54f1a49db23cd6457397",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "a9cd1a476f699d2598bef6901521095f4b3ce5fa5226725c6468780d20422288",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "4bed3d4db02bb67e1c420df3364ef9c39951f252d4f3a31559711bf8bba9176e",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "561f4f36d7a9e445e3c1ac7fd85e8b06c7abd8aaa47506552f16c308980b4e1d",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "20313b49410695cf65548cb59fe3769d2320cdc704ad49ea75080cd8a5ca3b19",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "c1b909ebe359c84d37326140b1285eca56d1db995db2651993cc7668523ea73c",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3152706fe03c23d781b1ff42ce9f1303245c540173d6bba202427968a4c2fa56",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "16b1ba53b8e1e6ba10b9e2f41a3f94d8cc790ce6f3e825eccf7fff87fc608aa5",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-wasm32-unknown-unknown.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "2e89bad7857711a1c11d017ea28fbfeec54076317763901194f8f5decbac1850",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-aarch64-unknown-linux-gnu.tar.xz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "0eb2b3efc93cad3baf4653357a4a8a2d5a963ae80dbce8955e1bb4f60e02c659",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-powerpc64le-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "4fcc0dad8b47066e13877e2839760ef1f40754a90a8fe83ecd4a1f14bf63c71a",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "170ea11a424d67bbf16df3a4788e0d844ced00490e44c18c366304db1ef8ca6d",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-aarch64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "027faf943cb6f413492c3abd8024b3608a93bffdc542371a219585085373c815",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3d29cb395da2bbed7b8e1b9846360ba03686b26bdbc8bf8c279c093e450f6105",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "68c7c2d05b80b47d50c1552c4a8dbbc9323a01b37d025c835d1fb55f4c42c347",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "2aa0d63a48840a55b7a1edda9cbb9e5f0d560db91c7e54f1a49db23cd6457397",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "a9cd1a476f699d2598bef6901521095f4b3ce5fa5226725c6468780d20422288",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "4bed3d4db02bb67e1c420df3364ef9c39951f252d4f3a31559711bf8bba9176e",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "561f4f36d7a9e445e3c1ac7fd85e8b06c7abd8aaa47506552f16c308980b4e1d",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "20313b49410695cf65548cb59fe3769d2320cdc704ad49ea75080cd8a5ca3b19",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "c1b909ebe359c84d37326140b1285eca56d1db995db2651993cc7668523ea73c",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3152706fe03c23d781b1ff42ce9f1303245c540173d6bba202427968a4c2fa56",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "16b1ba53b8e1e6ba10b9e2f41a3f94d8cc790ce6f3e825eccf7fff87fc608aa5",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "name": "rust-split",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "run_exports": {
      "strong_constrains": [
       "__osx >=10.13"
      ]
     }
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-apple-darwin"
     ],
     "run": [
      "rust-std-x86_64-apple-darwin"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "4fcc0dad8b47066e13877e2839760ef1f40754a90a8fe83ecd4a1f14bf63c71a",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-x86_64-apple-darwin"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "rust-std-x86_64-apple-darwin"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-apple-darwin"
     ],
     "run": [
      "rust-std-aarch64-apple-darwin"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "170ea11a424d67bbf16df3a4788e0d844ced00490e44c18c366304db1ef8ca6d",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-aarch64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-aarch64-apple-darwin"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "rust-std-aarch64-apple-darwin"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rust",
   "rust-src",
   "rust-std-aarch64-apple-darwin",
   "rust-std-aarch64-unknown-linux-gnu",
   "rust-std-powerpc64le-unknown-linux-gnu",
   "rust-std-x86_64-apple-darwin",
   "rust-std-x86_64-linux-android",
   "rust-std-x86_64-pc-windows-msvc",
   "rust-std-x86_64-unknown-linux-gnu"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/rust.json"
 },
 "raw_meta_yaml": "{% set version = \"1.80.1\" %}\n\npackage:\n  name: rust-split\n  version: {{ version }}\n\nsource:\n  # Note! This source file specification is structured specifically to interact\n  # well with the autotick bot. Importantly, the `patches:` block actually\n  # applies to *all* of these inputs, not just the last one in the list, because\n  # of the way that the YAML selector processing works.\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]\n    sha256: 9eedaea9719914a0f4673899aa11693607f25486569913fcca5905ef1da784ec  # [linux and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]\n    sha256: 2e89bad7857711a1c11d017ea28fbfeec54076317763901194f8f5decbac1850  # [aarch64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]\n    sha256: 0eb2b3efc93cad3baf4653357a4a8a2d5a963ae80dbce8955e1bb4f60e02c659  # [ppc64le]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]\n    sha256: 4fcc0dad8b47066e13877e2839760ef1f40754a90a8fe83ecd4a1f14bf63c71a  # [osx and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]\n    sha256: 170ea11a424d67bbf16df3a4788e0d844ced00490e44c18c366304db1ef8ca6d  # [osx and arm64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]\n    sha256: 027faf943cb6f413492c3abd8024b3608a93bffdc542371a219585085373c815  # [win64]\n    patches:\n      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff\n  # End of block of primary source files.\n  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz\n    sha256: c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f\n    folder: rust-src\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 3d29cb395da2bbed7b8e1b9846360ba03686b26bdbc8bf8c279c093e450f6105  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 68c7c2d05b80b47d50c1552c4a8dbbc9323a01b37d025c835d1fb55f4c42c347  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [(linux or win) and x86_64]\n    sha256: 2aa0d63a48840a55b7a1edda9cbb9e5f0d560db91c7e54f1a49db23cd6457397  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]\n    sha256: a9cd1a476f699d2598bef6901521095f4b3ce5fa5226725c6468780d20422288  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 4bed3d4db02bb67e1c420df3364ef9c39951f252d4f3a31559711bf8bba9176e  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: 561f4f36d7a9e445e3c1ac7fd85e8b06c7abd8aaa47506552f16c308980b4e1d  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: 20313b49410695cf65548cb59fe3769d2320cdc704ad49ea75080cd8a5ca3b19  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: c1b909ebe359c84d37326140b1285eca56d1db995db2651993cc7668523ea73c  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 3152706fe03c23d781b1ff42ce9f1303245c540173d6bba202427968a4c2fa56  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]\n    sha256: 16b1ba53b8e1e6ba10b9e2f41a3f94d8cc790ce6f3e825eccf7fff87fc608aa5  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - posix  # [win]\n  host:\n\noutputs:\n  - name: rust-std-{{ rust_arch }}\n    build:\n      noarch: generic\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n      merge_build_host: false\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n      run:\n        # The directory structure of windows and unix is different.\n        # We should not install the bundled rust-std-x86_64-pc-windows-msvc from this output on unix for example.\n        - __unix  # [unix]\n        - __win  # [win]\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    script: install-rust-std.sh  # [unix]\n    script: install-rust-std.bat  # [win]\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib   # [unix]\n        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]\n        - echo {{ rust_arch }}\n\n  - name: rust\n    script: install-rust.sh  # [unix]\n    script: install-rust.bat  # [win]\n    build:\n      # the distributed binaries are already relocatable\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib\n        # - /lib64/libgcc_s.so.1  # [linux]\n        # - /lib64/libz.so.1  # [linux]\n      run_exports:   # [(osx and x86_64) or linux]\n        strong_constrains:   # [(osx and x86_64) or linux]\n          - __osx >={{ c_stdlib_version }}  # [osx and x86_64]\n          - __glibc >={{ c_stdlib_version }}  # [linux]\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables\n        - {{ stdlib('c') }}  # [linux]\n        # zlib is linked by **/lib/libLLVM-*-rust-*.so\n        - zlib  # [linux]\n      run:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - gcc_impl_{{ target_platform }}  # [linux]\n        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}  # [linux]\n    test:\n      requires:\n        - posix  # [win]\n      commands:\n        - rustc --help\n        - rustdoc --help\n        - cargo --help\n        - cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv\n        - echo {{ rust_arch }}\n        - if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1  # [win]\n\n  - name: rust-src\n    script: install-rust-src.sh  # [unix]\n    script: install-rust-src.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-src and rust is confusing.\n        # `rust-src` is specific to the toolchain in `rustup`,\n        # and we would like to keep that behavior.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\"  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1  # [win]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1  # [win]\n\n\n  - name: rust-std-{{ rust_std_extra }}\n    script: install-rust-std-extra.sh  # [unix]\n    script: install-rust-std-extra.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}\" exit 1  # [win]\n        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v {{ rust_std_extra }})\"  # [unix]\n        - dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"{{ rust_std_extra }}\" >nul || exit 1  # [win]\n        - echo {{ rust_std_extra }}\n\nabout:\n  home: https://www.rust-lang.org\n  license: MIT\n  license_file:\n    - LICENSE-APACHE\n    - LICENSE-MIT\n  summary: |\n    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\n    This package provides the compiler (rustc) and the documentation utilities rustdoc.\n  dev_url: https://doc.rust-lang.org/std/\n  doc_url: https://www.rust-lang.org/en-US/documentation.html\n\nextra:\n  recipe-maintainers:\n    - timkpaine\n    - xhochy\n    - johanneskoester\n    - abhi18av\n    - pkgw\n    - dlaehnemann\n    - isuruf\n    - mbargull\n",
 "req": {
  "__set__": true,
  "elements": [
   "__unix",
   "__win",
   "c_compiler_stub",
   "c_stdlib_stub",
   "gcc_impl_linux-64",
   "gcc_impl_linux-aarch64",
   "gcc_impl_linux-ppc64le",
   "posix",
   "rust-std-aarch64-apple-darwin",
   "rust-std-aarch64-unknown-linux-gnu",
   "rust-std-powerpc64le-unknown-linux-gnu",
   "rust-std-x86_64-apple-darwin",
   "rust-std-x86_64-pc-windows-msvc",
   "rust-std-x86_64-unknown-linux-gnu",
   "sysroot_linux-64",
   "sysroot_linux-aarch64",
   "sysroot_linux-ppc64le",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "linux-sysroot",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "__win",
    "c_compiler_stub",
    "c_stdlib_stub",
    "ctng-compilers",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "linux-sysroot",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "__win",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "sysroot_linux-64 >=2.17",
    "sysroot_linux-aarch64 >=2.17",
    "sysroot_linux-ppc64le >=2.17"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 },
 "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-unknown-linux-gnu.tar.gz",
 "version": "1.80.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/rust.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [
      "rust-std-x86_64-pc-windows-msvc"
     ],
     "run": [
      "rust-std-x86_64-pc-windows-msvc"
     ]
    },
    "script": "install-rust.bat",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-pc-windows-msvc",
      "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
     ],
     "requires": [
      "posix"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
      "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.80.1"
  },
  "requirements": {
   "build": [
    "posix"
   ],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "027faf943cb6f413492c3abd8024b3608a93bffdc542371a219585085373c815",
    "url": "https://static.rust-lang.org/dist/rust-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "c33eae6921b22be6520bbba9dc0b1ea21250ea3054bf15006dba30bab97eba9f",
    "url": "https://static.rust-lang.org/dist/rust-src-1.80.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3d29cb395da2bbed7b8e1b9846360ba03686b26bdbc8bf8c279c093e450f6105",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "68c7c2d05b80b47d50c1552c4a8dbbc9323a01b37d025c835d1fb55f4c42c347",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "2aa0d63a48840a55b7a1edda9cbb9e5f0d560db91c7e54f1a49db23cd6457397",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "a9cd1a476f699d2598bef6901521095f4b3ce5fa5226725c6468780d20422288",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "4bed3d4db02bb67e1c420df3364ef9c39951f252d4f3a31559711bf8bba9176e",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "561f4f36d7a9e445e3c1ac7fd85e8b06c7abd8aaa47506552f16c308980b4e1d",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "20313b49410695cf65548cb59fe3769d2320cdc704ad49ea75080cd8a5ca3b19",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "c1b909ebe359c84d37326140b1285eca56d1db995db2651993cc7668523ea73c",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "3152706fe03c23d781b1ff42ce9f1303245c540173d6bba202427968a4c2fa56",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "16b1ba53b8e1e6ba10b9e2f41a3f94d8cc790ce6f3e825eccf7fff87fc608aa5",
    "url": "https://static.rust-lang.org/dist/rust-std-1.80.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-x86_64-pc-windows-msvc"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__win",
    "rust-std-x86_64-pc-windows-msvc"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 }
}