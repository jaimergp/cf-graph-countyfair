{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "dwave-samplers",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "dwave-samplers",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "dwave-samplers"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/dwave-samplers.json"
 },
 "raw_meta_yaml": "{% set name = \"dwave-samplers\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/{{ version }}.tar.gz\n  sha256: d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 2\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - dimod >=0.12.0,<0.13.0                 # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n  host:\n    - python\n    - numpy\n    - cython >=0.29.24,<3.0\n    - dimod >=0.12.0,<0.13.0\n    - pip\n    - setuptools >=46.4.0\n    - wheel >=0.30.0\n  run:\n    - python\n    - dimod >=0.12.0,<0.13.0\n    - networkx >=2.4.0\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - dwave\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/dwavesystems/dwave-samplers\n  summary: Ocean-compatible collection of solvers/samplers\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - BastianZim\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "dimod",
   "networkx",
   "numpy",
   "pip",
   "python",
   "setuptools",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "numpy",
    "pip",
    "python",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz",
 "version": "1.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/dwave-samplers.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/dwavesystems/dwave-samplers",
   "license": "Apache-2.0",
   "license_file": "LICENSE",
   "summary": "Ocean-compatible collection of solvers/samplers"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "BastianZim"
   ]
  },
  "package": {
   "name": "dwave-samplers",
   "version": "1.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "numpy",
    "cython >=0.29.24,<3.0",
    "dimod >=0.12.0,<0.13.0",
    "pip",
    "setuptools >=46.4.0",
    "wheel >=0.30.0"
   ],
   "run": [
    "python",
    "dimod >=0.12.0,<0.13.0",
    "networkx >=2.4.0",
    "numpy"
   ]
  },
  "source": {
   "sha256": "d28df71dd653a825ac7edccaccd6b625bffab1169aca7f09b37418187c40ea71",
   "url": "https://github.com/dwavesystems/dwave-samplers/archive/refs/tags/1.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "dwave"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "dimod",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "dimod",
    "networkx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}