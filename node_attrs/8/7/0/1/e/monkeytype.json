{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "inspection": "hint-all"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "monkeytype",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "MonkeyType collects runtime types of function arguments and return values,\nand can automatically generate stub files or even add draft type\nannotations directly to your Python code based on the types collected at\nruntime.\n",
   "doc_source_url": "https://github.com/Instagram/MonkeyType/tree/master/doc",
   "doc_url": "https://monkeytype.readthedocs.io",
   "home": "https://github.com/Instagram/MonkeyType",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "src/LICENSE",
   "summary": "Generating type annotations from sampled production types"
  },
  "build": {
   "entry_points": [
    "monkeytype = monkeytype.cli:entry_point_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "cd dist && PYTHON -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "nehaljwani"
   ]
  },
  "package": {
   "name": "monkeytype",
   "version": "23.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "libcst >=0.4.4",
    "mypy_extensions",
    "python >=3.7"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "f2595db34d57cdddbde5a990117a50a22f373dbb917a2a0fa91ffbe07dfe0313",
    "url": "https://pypi.io/packages/source/m/monkeytype/MonkeyType-23.3.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "c39656d9c1c2f43e7b0d0822ab1ef80ffa111f1a48d1e9886fd7a949b27e47f8",
    "url": "https://github.com/Instagram/monkeytype/archive/v23.3.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -m pip check",
    "monkeytype --help",
    "cd src && pytest -vv -k \"not test_includes_otherwise\" --cov=monkeytype --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=90"
   ],
   "imports": [
    "monkeytype"
   ],
   "requires": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest",
    "pytest-cov"
   ],
   "source_files": [
    "src/tests"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcst",
    "mypy_extensions",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "MonkeyType collects runtime types of function arguments and return values,\nand can automatically generate stub files or even add draft type\nannotations directly to your Python code based on the types collected at\nruntime.\n",
   "doc_source_url": "https://github.com/Instagram/MonkeyType/tree/master/doc",
   "doc_url": "https://monkeytype.readthedocs.io",
   "home": "https://github.com/Instagram/MonkeyType",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "src/LICENSE",
   "summary": "Generating type annotations from sampled production types"
  },
  "build": {
   "entry_points": [
    "monkeytype = monkeytype.cli:entry_point_main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "cd dist && PYTHON -m pip install --no-deps --ignore-installed ."
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "nehaljwani"
   ]
  },
  "package": {
   "name": "monkeytype",
   "version": "23.3.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.7"
   ],
   "run": [
    "libcst >=0.4.4",
    "mypy_extensions",
    "python >=3.7"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "f2595db34d57cdddbde5a990117a50a22f373dbb917a2a0fa91ffbe07dfe0313",
    "url": "https://pypi.io/packages/source/m/monkeytype/MonkeyType-23.3.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "c39656d9c1c2f43e7b0d0822ab1ef80ffa111f1a48d1e9886fd7a949b27e47f8",
    "url": "https://github.com/Instagram/monkeytype/archive/v23.3.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -m pip check",
    "monkeytype --help",
    "cd src && pytest -vv -k \"not test_includes_otherwise\" --cov=monkeytype --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=90"
   ],
   "imports": [
    "monkeytype"
   ],
   "requires": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest",
    "pytest-cov"
   ],
   "source_files": [
    "src/tests"
   ]
  }
 },
 "name": "monkeytype",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "monkeytype"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/monkeytype.json"
 },
 "raw_meta_yaml": "{% set version = \"23.3.0\" %}\n\npackage:\n  name: monkeytype\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/m/monkeytype/MonkeyType-{{ version }}.tar.gz\n    sha256: f2595db34d57cdddbde5a990117a50a22f373dbb917a2a0fa91ffbe07dfe0313\n  - folder: src\n    url: https://github.com/Instagram/monkeytype/archive/v{{ version }}.tar.gz\n    sha256: c39656d9c1c2f43e7b0d0822ab1ef80ffa111f1a48d1e9886fd7a949b27e47f8\n\nbuild:\n  number: 0\n  noarch: python\n  script: cd dist && {{ PYTHON }} -m pip install --no-deps --ignore-installed .\n  entry_points:\n    - monkeytype = monkeytype.cli:entry_point_main\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n  run:\n    - libcst >=0.4.4\n    - mypy_extensions\n    - python >=3.7\n\ntest:\n  source_files:\n    - src/tests\n  requires:\n    - {{ compiler('c') }}\n    - cython\n    - django\n    - pip\n    - pytest\n    - pytest-cov\n  imports:\n    - monkeytype\n  commands:\n    - python -m pip check\n    - monkeytype --help\n    - cd src && pytest -vv -k \"not test_includes_otherwise\" --cov=monkeytype --cov-report=term-missing:skip-covered --no-cov-on-fail --cov-fail-under=90\n\nabout:\n  home: https://github.com/Instagram/MonkeyType\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: src/LICENSE\n  summary: Generating type annotations from sampled production types\n  doc_url: https://monkeytype.readthedocs.io\n  doc_source_url: https://github.com/Instagram/MonkeyType/tree/master/doc\n  description: |\n    MonkeyType collects runtime types of function arguments and return values,\n    and can automatically generate stub files or even add draft type\n    annotations directly to your Python code based on the types collected at\n    runtime.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - nehaljwani\n",
 "req": {
  "__set__": true,
  "elements": [
   "libcst",
   "mypy_extensions",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libcst",
    "mypy_extensions",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcst >=0.4.4",
    "mypy_extensions",
    "python >=3.7"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "django",
    "pip",
    "pytest",
    "pytest-cov"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/m/monkeytype/MonkeyType-23.3.0.tar.gz",
 "version": "23.3.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/monkeytype.json"
 }
}