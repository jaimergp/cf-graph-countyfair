{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "einsums",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Einsums/Einsums",
   "home": "https://github.com/Einsums/Einsums",
   "license": "MIT AND BSD-3-Clause",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/mit/",
   "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "elfutils",
    "libzlib",
    "elfutils",
    "libzlib"
   ],
   "number": "2",
   "run_exports": [
    "einsums",
    "einsums"
   ],
   "string": "openblas_h1234567_2"
  },
  "extra": {
   "feedstock-name": "einsums",
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "loriab",
    "jturney"
   ]
  },
  "package": {
   "name": "einsums",
   "version": "0.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "libgomp"
   ],
   "host": [
    "catch2",
    "elfutils",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "elfutils",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*"
   ],
   "run": [
    "libopenblas * openmp_*",
    "libopenblas * openmp_*"
   ]
  },
  "source": {
   "sha256": "be4c6b80c20dfbe84a5039833dddd07b6cec1762e39e4bf7ff709c1097b2d387",
   "url": "https://github.com/Einsums/Einsums/archive/v0.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "ldd -v $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "ldd -v $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings"
   ],
   "files": [
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas"
   ],
   "source_files": [
    "timing/main.cpp",
    "timing/main.cpp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "catch2",
    "elfutils",
    "fftw",
    "fmt",
    "hdf5",
    "openblas",
    "range-v3",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenblas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "range-v3",
    "zlib"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Einsums/Einsums",
   "home": "https://github.com/Einsums/Einsums",
   "license": "MIT AND BSD-3-Clause",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/mit/",
   "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "elfutils",
    "libzlib",
    "elfutils",
    "libzlib",
    "libzlib",
    "libzlib",
    "libzlib"
   ],
   "number": "2",
   "run_exports": [
    "einsums",
    "einsums",
    "einsums",
    "einsums",
    "einsums"
   ],
   "string": "openblas_h1234567_2"
  },
  "extra": {
   "feedstock-name": "einsums",
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "loriab",
    "jturney",
    "loriab",
    "jturney",
    "loriab",
    "jturney",
    "loriab",
    "jturney"
   ]
  },
  "package": {
   "name": "einsums",
   "version": "0.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "libgomp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp"
   ],
   "host": [
    "catch2",
    "elfutils",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "elfutils",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*"
   ],
   "run": [
    "libopenblas * openmp_*",
    "libopenblas * openmp_*",
    "libopenblas * openmp_*",
    "libopenblas * openmp_*",
    "libopenblas * openmp_*"
   ]
  },
  "source": {
   "sha256": "be4c6b80c20dfbe84a5039833dddd07b6cec1762e39e4bf7ff709c1097b2d387",
   "url": "https://github.com/Einsums/Einsums/archive/v0.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "ldd -v $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "ldd -v $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings"
   ],
   "files": [
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas"
   ],
   "source_files": [
    "timing/main.cpp",
    "timing/main.cpp",
    "timing/main.cpp",
    "timing/main.cpp",
    "timing/main.cpp"
   ]
  }
 },
 "name": "einsums",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Einsums/Einsums",
   "home": "https://github.com/Einsums/Einsums",
   "license": "MIT AND BSD-3-Clause",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "THIRD-PARTY-LICENSES",
    "LICENSE",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/mit/",
   "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libzlib",
    "libzlib"
   ],
   "number": "2",
   "run_exports": [
    "einsums",
    "einsums"
   ],
   "string": "openblas_h1234567_2"
  },
  "extra": {
   "feedstock-name": "einsums",
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "loriab",
    "jturney"
   ]
  },
  "package": {
   "name": "einsums",
   "version": "0.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp"
   ],
   "host": [
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*",
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*"
   ],
   "run": [
    "libopenblas * openmp_*",
    "libopenblas * openmp_*"
   ]
  },
  "source": {
   "sha256": "be4c6b80c20dfbe84a5039833dddd07b6cec1762e39e4bf7ff709c1097b2d387",
   "url": "https://github.com/Einsums/Einsums/archive/v0.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings",
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings"
   ],
   "files": [
    "timing/CMakeLists.txt",
    "timing/CMakeLists.txt"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas"
   ],
   "source_files": [
    "timing/main.cpp",
    "timing/main.cpp"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "catch2",
    "fftw",
    "fmt",
    "hdf5",
    "openblas",
    "range-v3",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenblas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "range-v3",
    "zlib"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/Einsums/Einsums",
   "home": "https://github.com/Einsums/Einsums",
   "license": "MIT AND BSD-3-Clause",
   "license_family": "MIT",
   "license_file": [
    "LICENSE",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/mit/",
   "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libzlib"
   ],
   "number": "2",
   "run_exports": [
    "einsums"
   ],
   "string": "openblas_h1234567_2"
  },
  "extra": {
   "feedstock-name": "einsums",
   "recipe-maintainers": [
    "loriab",
    "jturney"
   ]
  },
  "package": {
   "name": "einsums",
   "version": "0.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "llvm-openmp"
   ],
   "host": [
    "catch2",
    "fmt 10.1",
    "hdf5",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas",
    "fftw",
    "openblas * openmp_*"
   ],
   "run": [
    "libopenblas * openmp_*"
   ]
  },
  "source": {
   "sha256": "be4c6b80c20dfbe84a5039833dddd07b6cec1762e39e4bf7ff709c1097b2d387",
   "url": "https://github.com/Einsums/Einsums/archive/v0.3.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/lib/libeinsums$SHLIB_EXT",
    "test ! -f $PREFIX/lib/libeinsums.a",
    "test -f $PREFIX/include/einsums/Tensor.hpp",
    "test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
    "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake",
    "otool -L $PREFIX/lib/libeinsums$SHLIB_EXT",
    "cd timing",
    "cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose",
    "cmake --build build",
    "./build/timings"
   ],
   "files": [
    "timing/CMakeLists.txt"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "range-v3 0.12",
    "zlib",
    "blas-devel * *_openblas"
   ],
   "source_files": [
    "timing/main.cpp"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "catch2",
    "fftw",
    "fmt",
    "hdf5",
    "openblas",
    "range-v3",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenblas"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "range-v3",
    "zlib"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "einsums"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/einsums.json"
 },
 "raw_meta_yaml": "{% set name = \"Einsums\" %}\n{% set version = \"0.3\" %}\n{% set sha256 = \"be4c6b80c20dfbe84a5039833dddd07b6cec1762e39e4bf7ff709c1097b2d387\" %}\n{% set build_number = 2 %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build_number }}\n  string: {{ blas_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  skip: true                                                               # [win]\n  binary_relocation: true\n  run_exports:\n    - {{ pin_subpackage('einsums', max_pin='x.x') }}\n  ignore_run_exports:\n    - elfutils                                                             # [linux]\n    - libzlib\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - llvm-openmp                                                          # [osx]\n    - libgomp                                                              # [linux]\n  host:\n    - catch2\n    - elfutils                                                             # [linux]\n    - fmt 10.1\n    - hdf5\n    - range-v3 0.12\n    - zlib\n    - llvm-openmp                                                          # [blas_impl == \"mkl\" and linux]\n    - mkl-devel {{ mkl }}                                                  # [blas_impl == \"mkl\"]\n    - blas-devel * *_{{ blas_impl }}                                       # [blas_impl == \"openblas\"]\n    - fftw                                                                 # [blas_impl == \"openblas\"]\n    - openblas * openmp_*                                                  # [blas_impl == \"openblas\"]\n  run:\n    - llvm-openmp                                                          # [blas_impl == \"mkl\" and linux]\n    - libopenblas * openmp_*                                               # [blas_impl == \"openblas\"]\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - range-v3 0.12\n    - zlib\n    - mkl-devel                                                            # [blas_impl == \"mkl\"]\n    - blas-devel * *_openblas                                              # [blas_impl == \"openblas\"]\n  files:\n    - timing/CMakeLists.txt\n  source_files:\n    - timing/main.cpp\n  commands:\n    # Verify library\n    - test -f $PREFIX/lib/libeinsums$SHLIB_EXT                             # [unix]\n    - test ! -f $PREFIX/lib/libeinsums.a                                   # [unix]\n    # Verify accessories\n    - test -f $PREFIX/include/einsums/Tensor.hpp                           # [unix]\n    - test -f $PREFIX/include/einsums/h5cpp/H5Pall.hpp                     # [unix]\n    - test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake              # [unix]\n    - test -f $PREFIX/share/cmake/Einsums/EinsumsTargets-CXX.cmake         # [unix]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libeinsums$SHLIB_EXT                              # [linux]\n    - otool -L $PREFIX/lib/libeinsums$SHLIB_EXT                            # [osx]\n    # Actually test\n    - cd timing\n    - cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH=\"${PREFIX}\" --log-level verbose  # [unix]\n    - cmake --build build\n    - ./build/timings                                                      # [unix]\n\nabout:\n  home: https://github.com/Einsums/Einsums\n  dev_url: https://github.com/Einsums/Einsums\n  license: MIT AND BSD-3-Clause\n  license_url: https://opensource.org/license/mit/\n  license_file:\n    - LICENSE\n    - THIRD-PARTY-LICENSES\n  license_family: MIT\n  summary: \"J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations\"\n\nextra:\n  feedstock-name: einsums\n  recipe-maintainers:\n    - loriab\n    - jturney\n\n## NOTES\n# * BLAS/LAPACK\n#   * Einsums actually requires the whole quartet: blas, cblas, lapack, lapacke.\n#     But since both MKL and OpenBLAS distribute all four together, only blas is listed.\n#   * Einsums _does_ compile different code for MKL vs. other distributions, hence the\n#     `blas_impl` in cbc.yaml. MKL and OpenBLAS are known to work. netlib would\n#     probably work. Accelerate definitely _doesn't_ work. And blis hasn't been tested.\n#     Building only MKL and OpenBLAS variants seemed to cover most uses most safely.\n# * hptt\n#   * hptt cmake is setting some native tuning flags that might need to be defeted.\n#     https://github.com/Einsums/hptt/blob/master/CMakeLists.txt#L43-L46\n",
 "req": {
  "__set__": true,
  "elements": [
   "blas-devel",
   "c_compiler_stub",
   "catch2",
   "cmake",
   "cxx_compiler_stub",
   "elfutils",
   "fftw",
   "fmt",
   "hdf5",
   "libgomp",
   "libopenblas",
   "llvm-openmp",
   "ninja",
   "openblas",
   "range-v3",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "c_compiler_stub",
    "catch2",
    "ctng-compilers",
    "cxx_compiler_stub",
    "elfutils",
    "fftw",
    "fmt",
    "hdf5",
    "openblas",
    "openmp",
    "range-v3",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libopenblas",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "blas-devel",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "range-v3",
    "zlib"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "llvm-openmp",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "blas-devel * *_openblas",
    "catch2",
    "elfutils",
    "fftw",
    "fmt 10.1",
    "hdf5",
    "openblas * openmp_*",
    "range-v3 0.12",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenblas * openmp_*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "blas-devel * *_openblas",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "range-v3 0.12",
    "zlib"
   ]
  }
 },
 "url": "https://github.com/Einsums/Einsums/archive/v0.3.tar.gz",
 "version": "0.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/einsums.json"
 }
}