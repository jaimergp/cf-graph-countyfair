{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_aarch64",
   "osx_arm64": "osx_64"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "azure",
   "win": "azure"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "parabem",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "openmpi",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "openmpi",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "openmpi",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "name": "parabem",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "llvm-openmp",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp",
    "python",
    "pybind11",
    "eigen",
    "llvm-openmp"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp",
    "python",
    "numpy",
    "matplotlib-base",
    "llvm-openmp"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "llvm-openmp",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "parabem"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/parabem.json"
 },
 "raw_meta_yaml": "{% set name = \"parabem\" %}\n{% set version = \"0.3.0\" %}\n{% set sha256 = \"cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/booya-at/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}  \n  patches:\n    - minimal.patch\n    - cmake.patch\n    - install.patch\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - ninja\n    - cmake\n  host:\n    - python\n    - pybind11\n    - eigen\n    - openmpi      # [linux]\n    - llvm-openmp      # [osx]\n  run:\n    - python\n    - numpy\n    - matplotlib-base\n    - llvm-openmp      # [osx]\n\ntest:\n  imports:\n    - parabem\n\nabout:\n  home: https://github.com/booya-at/paraBEM\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: potential flow with boundary elements.\n  doc_url: https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb\n  dev_url: https://github.com/booya-at/paraBEM\n\nextra:\n  recipe-maintainers:\n    - looooo\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cxx_compiler_stub",
   "eigen",
   "llvm-openmp",
   "matplotlib-base",
   "ninja",
   "numpy",
   "openmpi",
   "pybind11",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "eigen",
    "llvm-openmp",
    "openmp",
    "openmpi",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "llvm-openmp",
    "matplotlib-base",
    "numpy",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "llvm-openmp",
    "openmpi",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvm-openmp",
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz",
 "version": "0.3.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/parabem.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/booya-at/paraBEM",
   "doc_url": "https://github.com/booya-at/paraBEM/blob/master/doc/tutorial/tutorial.ipynb",
   "home": "https://github.com/booya-at/paraBEM",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "potential flow with boundary elements."
  },
  "build": {
   "number": "2"
  },
  "extra": {
   "recipe-maintainers": [
    "looooo",
    "looooo",
    "looooo",
    "looooo"
   ]
  },
  "package": {
   "name": "parabem",
   "version": "0.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "cmake"
   ],
   "host": [
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen",
    "python",
    "pybind11",
    "eigen"
   ],
   "run": [
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base",
    "python",
    "numpy",
    "matplotlib-base"
   ]
  },
  "source": {
   "patches": [
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch",
    "minimal.patch",
    "cmake.patch",
    "install.patch"
   ],
   "sha256": "cb2575d50abac694b72324a5ca094d78eaadf4fdfd71eefaadbdc118da9e5fcd",
   "url": "https://github.com/booya-at/parabem/archive/0.3.0.tar.gz"
  },
  "test": {
   "imports": [
    "parabem",
    "parabem",
    "parabem",
    "parabem"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "eigen",
    "pybind11",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}