{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "settings_win": {
    "pool": {
     "vmImage": "windows-2019"
    }
   },
   "store_build_artifacts": true,
   "timeout_minutes": 600
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "channel_priority": "strict",
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "openvino",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "ocl-icd",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino",
      "ocl-icd-system"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "sysroot_linux-64 =2.17",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "sysroot_linux-64 =2.17",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15",
      "sysroot_linux-64 =2.17"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers",
    "sysroot_linux-64 =2.17"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "ocl-icd",
    "clhpp",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "16f36078339cd08b949efea1d863344cb0b742d9f5898937d07a591b0c4da517",
    "url": "https://github.com/oneapi-src/oneDNN/archive/284ad4574939fa784e4ddaa1f4aa577b8eb7a017.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "sysroot_linux-64",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "ocl-icd",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "ocl-icd-system",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "sysroot_linux-64",
    "zlib"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "scons",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "pugixml",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch",
     "patches/003-lin-arm64-compute-lib.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "62f514a555409d4401e5250b290cdf8cf1676e4eb775e5bd61ea6a740a8ce24f",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.08.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "scons",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "ocl-icd",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino",
      "ocl-icd-system"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "sysroot_linux-64 =2.17",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "sysroot_linux-64 =2.17",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15",
      "sysroot_linux-64 =2.17"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.2.0",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.2.0"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export MACOSX_DEPLOYMENT_TARGET=10.13",
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export MACOSX_DEPLOYMENT_TARGET=11.0",
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_gapi_preproc%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "khronos-opencl-icd-loader",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_auto_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1",
      "mkdir -p samples\\\\cpp\\\\thirdparty",
      "cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy",
      "cp -R thirdparty\\\\zlib samples\\\\cpp\\\\thirdparty\\\\zlib",
      "cp -R thirdparty\\\\gflags samples\\\\cpp\\\\thirdparty\\\\gflags",
      "cp -R thirdparty\\\\json\\\\nlohmann_json samples\\\\cpp\\\\thirdparty\\\\nlohmann_json",
      "cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      ".\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe",
      "cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt",
      "cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers",
    "sysroot_linux-64 =2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "scons",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "scons",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "ocl-icd",
    "clhpp",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf",
    "tbb-devel",
    "snappy",
    "pugixml",
    "libprotobuf",
    "tbb-devel",
    "snappy",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf",
    "tbb-devel",
    "snappy",
    "pugixml",
    "libprotobuf",
    "tbb-devel",
    "snappy",
    "clhpp",
    "khronos-opencl-icd-loader",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "16f36078339cd08b949efea1d863344cb0b742d9f5898937d07a591b0c4da517",
    "url": "https://github.com/oneapi-src/oneDNN/archive/284ad4574939fa784e4ddaa1f4aa577b8eb7a017.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   },
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch",
     "patches/003-lin-arm64-compute-lib.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "62f514a555409d4401e5250b290cdf8cf1676e4eb775e5bd61ea6a740a8ce24f",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.08.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   },
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   },
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "62f514a555409d4401e5250b290cdf8cf1676e4eb775e5bd61ea6a740a8ce24f",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.08.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   },
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch",
     "patches/001-win-cmake-version.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "16f36078339cd08b949efea1d863344cb0b742d9f5898937d07a591b0c4da517",
    "url": "https://github.com/oneapi-src/oneDNN/archive/284ad4574939fa784e4ddaa1f4aa577b8eb7a017.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "name": "openvino-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export MACOSX_DEPLOYMENT_TARGET=10.13",
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.2.0${SHLIB_EXT}",
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_gapi_preproc.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.2.0${SHLIB_EXT}"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "make",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help",
      "test $(pip list | grep openvino | wc -l) -eq 2",
      "if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != 2023.2.0 ]]; then exit 1; fi",
      "if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "export MACOSX_DEPLOYMENT_TARGET=11.0",
      "export CMAKE_GENERATOR=Ninja",
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
      "mkdir -p samples/cpp/thirdparty",
      "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
      "cp -R thirdparty/zlib samples/cpp/thirdparty/zlib",
      "cp -R thirdparty/gflags samples/cpp/thirdparty/gflags",
      "cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json",
      "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      "./samples_cpp_build/bin/hello_query_device",
      "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
      "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-arm-cpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "$PYTHON snippets/openvino_available_components.py",
      "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
      "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose",
      "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "scons",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "pugixml",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "62f514a555409d4401e5250b290cdf8cf1676e4eb775e5bd61ea6a740a8ce24f",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.08.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "scons",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "zlib"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libopenvino",
   "libopenvino-arm-cpu-plugin",
   "libopenvino-auto-batch-plugin",
   "libopenvino-auto-plugin",
   "libopenvino-dev",
   "libopenvino-hetero-plugin",
   "libopenvino-intel-cpu-plugin",
   "libopenvino-intel-gpu-plugin",
   "libopenvino-ir-frontend",
   "libopenvino-onnx-frontend",
   "libopenvino-paddle-frontend",
   "libopenvino-python",
   "libopenvino-pytorch-frontend",
   "libopenvino-tensorflow-frontend",
   "libopenvino-tensorflow-lite-frontend",
   "openvino"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/openvino.json"
 },
 "raw_meta_yaml": "{% set name = \"openvino\" %}\n{% set version_postfix = \"2023.2.0\" %}\n{% set version = \"2023.2.0\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz\n    sha256: 419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b\n    patches:\n    - patches/001-cross-compile-protobuf.patch\n    - patches/001-win-cmake-version.patch  # [win64]\n    - patches/003-lin-arm64-compute-lib.patch  # [aarch64]\n  - url: https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.08.tar.gz  # [aarch64 or arm64]\n    sha256: 62f514a555409d4401e5250b290cdf8cf1676e4eb775e5bd61ea6a740a8ce24f  # [aarch64 or arm64]\n    folder: src/plugins/intel_cpu/thirdparty/ComputeLibrary  # [aarch64 or arm64]\n  - url: https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz\n    sha256: 3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c\n    folder: src/plugins/intel_cpu/thirdparty/onednn\n  - url: https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz\n    sha256: 707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4\n    folder: src/plugins/intel_cpu/thirdparty/mlas\n  - url: https://github.com/oneapi-src/oneDNN/archive/284ad4574939fa784e4ddaa1f4aa577b8eb7a017.tar.gz  # [win64 or linux64]\n    sha256: 16f36078339cd08b949efea1d863344cb0b742d9f5898937d07a591b0c4da517  # [win64 or linux64]\n    folder: src/plugins/intel_gpu/thirdparty/onednn_gpu  # [win64 or linux64]\n  - url: https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz\n    sha256: edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff\n    folder: thirdparty/ade\n  - url: https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz\n    sha256: e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1\n    folder: thirdparty/onnx/onnx\n  - url: https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz\n    sha256: 34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\n    folder: thirdparty/gflags/gflags\n  - url: https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz\n    sha256: d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273\n    folder: thirdparty/json/nlohmann_json\n  - url: https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz\n    sha256: 1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428\n    folder: thirdparty/zlib/zlib\n\n\n\nbuild:\n  number: 3\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - ninja\n    - pkg-config\n    - scons  # [aarch64 or arm64]\n    - cmake\n    - python >=3.7\n    - ccache\n    - libprotobuf\n    - flatbuffers\n    - sysroot_linux-64 =2.17  # [linux64]\n  host:\n    - tbb-devel\n    - snappy\n    - ocl-icd  # [linux64]\n    - clhpp  # [linux64 or win64]\n    - khronos-opencl-icd-loader  # [win64]\n    - pugixml\n    - xbyak >=6.69.1  # [x86_64]\n    - libprotobuf\n\noutputs:\n  - name: libopenvino\n    version: {{ version }}\n    script: install/install.sh\n    about:\n      summary: OpenVINO Core Runtime library\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml\n        - tbb-devel\n    test:\n      commands:\n        {% set openvino_libs = [] %}\n        {{ openvino_libs.append(\"\") or \"\" }}\n        {{ openvino_libs.append(\"_c\") or \"\" }}\n        {% for openvino_lib in openvino_libs %}\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n        {% endfor %}\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_gapi_preproc.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_gapi_preproc%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-ir-frontend\n    version: {{ version }}\n    script: install/install_ir.sh\n    about:\n      summary: OpenVINO IR Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_ir_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-onnx-frontend\n    version: {{ version }}\n    script: install/install_onnx.sh\n    about:\n      summary: OpenVINO ONNX Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - libprotobuf\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-paddle-frontend\n    version: {{ version }}\n    script: install/install_paddle.sh\n    about:\n      summary: OpenVINO Paddle Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - libprotobuf\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-pytorch-frontend\n    version: {{ version }}\n    script: install/install_pytorch.sh\n    about:\n      summary: OpenVINO Pytorch Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-frontend\n    version: {{ version }}\n    script: install/install_tensorflow.sh\n    about:\n      summary: OpenVINO TensorFlow Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - snappy\n        - libabseil\n        - libprotobuf\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-lite-frontend\n    version: {{ version }}\n    script: install/install_tensorflow_lite.sh\n    about:\n      summary: OpenVINO TensorFlow Lite Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.{{ version_postfix }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.{{ version_postfix }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-intel-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO Intel\u00AE CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not x86_64]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml\n        - tbb-devel\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_intel_cpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-arm-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO ARM\u00AE CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not aarch64 and not arm64]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml\n        - tbb-devel\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_arm_cpu_plugin.so\n\n  - name: libopenvino-intel-gpu-plugin\n    version: {{ version }}\n    script: install/install_gpu.sh\n    about:\n      summary: OpenVINO Intel\u00AE GPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not linux64 and not win64]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel\n        - ocl-icd  # [linux64]\n        - clhpp\n        - khronos-opencl-icd-loader  # [win64]\n        - pugixml\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - ocl-icd-system  # [linux64]\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_intel_gpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-plugin\n    version: {{ version }}\n    script: install/install_auto.sh\n    about:\n      summary: OpenVINO Auto plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_auto_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_auto_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-batch-plugin\n    version: {{ version }}\n    script: install/install_batch.sh\n    about:\n      summary: OpenVINO Auto Batch plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake\n      host:\n        - tbb-devel\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_auto_batch_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-hetero-plugin\n    version: {{ version }}\n    script: install/install_hetero.sh\n    about:\n      summary: OpenVINO Hetero plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version_postfix }}/libopenvino_hetero_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version_postfix }}\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-python\n    script: install/install_python.sh\n    about:\n      summary: OpenVINO Python API\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      entry_points:\n        - ovc = openvino.tools.ovc.main:main\n        - benchmark_app = openvino.tools.benchmark.main:main\n      ignore_run_exports_from:\n        - tbb-devel  # because required just for developer package\n        - pugixml  # because required just for developer package\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - python                              # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - sysroot_linux-64 =2.17  # [linux64]\n        - make  # [unix]\n        - cython =0.29.36\n        - ccache\n        - cmake >=3.15  # to have new cmake cmd interface (-S, --install and other options)\n        - pybind11 >=2.10.1  # this versions works well for cross-compilation\n        - wheel\n      host:\n        - tbb-devel  # for developer package only\n        - pugixml  # for developer package only\n        - python\n        - pip\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        # subpackages below have explicit python bindings\n        - {{ pin_subpackage('libopenvino-onnx-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-paddle-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        # subpackages below have explicit python bindings\n        - {{ pin_subpackage('libopenvino-onnx-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-paddle-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', exact=True) }}\n        - numpy >=1.16.6\n        - openvino-telemetry >=2023.1.1\n        - singledispatchmethod  # [py <= 37]\n        - python\n    test:\n      imports:\n        - ngraph\n        - ngraph.opset1\n        - ngraph.opset2\n        - ngraph.opset3\n        - ngraph.opset4\n        - ngraph.opset5\n        - ngraph.opset6\n        - ngraph.opset7\n        - ngraph.opset8\n        - ngraph.opset9\n        - ngraph.opset10\n        - ngraph.opset11\n        - ngraph.utils\n        - openvino.inference_engine\n        - openvino.runtime\n        - openvino.runtime.op\n        - openvino.runtime.passes\n        - openvino.runtime.properties\n        - openvino.runtime.opset1\n        - openvino.runtime.opset2\n        - openvino.runtime.opset3\n        - openvino.runtime.opset4\n        - openvino.runtime.opset5\n        - openvino.runtime.opset6\n        - openvino.runtime.opset7\n        - openvino.runtime.opset8\n        - openvino.runtime.opset9\n        - openvino.runtime.opset10\n        - openvino.runtime.opset11\n        - openvino.runtime.opset12\n        - openvino.runtime.opset13\n        - openvino.frontend\n        - openvino.frontend.onnx\n        - openvino.frontend.paddle\n        - openvino.frontend.pytorch\n        - openvino.frontend.tensorflow\n        - openvino.preprocess\n      commands:\n        - pip check\n        - ovc --help\n        - benchmark_app --help\n        - test $(pip list | grep openvino | wc -l) -eq 2  # [unix]\n        - if [[ $($PYTHON -c 'import openvino.runtime as ov; print(ov.__version__[0:8])') != {{ version_postfix }} ]]; then exit 1; fi  # [unix]\n        - if [[ $($PYTHON -c 'from openvino.frontend import FrontEndManager as fem; print(len(fem().get_available_front_ends()))') != 4 ]]; then exit 1; fi  # [unix]\n      requires:\n        - pip\n\n  - name: libopenvino-dev\n    version: {{ version }}\n    script: install/install_dev.sh\n    about:\n      summary: OpenVINO C++ / C Runtime & Development files\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n        - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - cmake >=3.15  # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        # hmaarrfk: 2024/01\n        # without the tbb-devel package in the host section, we won't be able to drag on\n        # the comaptible dependency below\n        - tbb-devel\n      run:\n        # the subpackages below can be linked with\n        - {{ pin_subpackage('libopenvino-onnx-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-paddle-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', exact=True) }}\n        # the subpackages below are used as plugins only\n        - {{ pin_subpackage('libopenvino-ir-frontend', exact=True) }}\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', exact=True) }}  # [x86_64]\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', exact=True) }}  # [aarch64 or arm64]\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', exact=True) }}  # [win64 or linux64]\n        - {{ pin_subpackage('libopenvino-auto-plugin', exact=True) }}\n        - {{ pin_subpackage('libopenvino-hetero-plugin', exact=True) }}\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', exact=True) }}\n        - {{ pin_compatible('tbb-devel', max_pin='x') }}  # to property find libs via openvino.pc\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - ninja\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n        - pkg-config\n        - zlib\n        - nlohmann_json\n        - sysroot_linux-64 =2.17  # [linux64]\n        - gflags\n      source_files:\n        - samples\n        - thirdparty/cnpy\n        - thirdparty/zlib\n        - thirdparty/gflags\n        - thirdparty/json/nlohmann_json\n      files:\n        - snippets/\n      commands:\n        - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]\n        - export CMAKE_GENERATOR=Ninja  # [unix]\n\n        # check libraries (symlinks)\n        {% set openvino_libs = [] %}\n        {{ openvino_libs.append(\"\") or \"\" }}\n        {{ openvino_libs.append(\"_c\") or \"\" }}\n        {{ openvino_libs.append(\"_paddle_frontend\") or \"\" }}\n        {{ openvino_libs.append(\"_pytorch_frontend\") or \"\" }}\n        {{ openvino_libs.append(\"_onnx_frontend\") or \"\" }}\n        {{ openvino_libs.append(\"_tensorflow_frontend\") or \"\" }}\n        {{ openvino_libs.append(\"_tensorflow_lite_frontend\") or \"\" }}\n        {% for openvino_lib in openvino_libs %}\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n        {% endfor %}\n\n        # C++ samples on Unix\n        - mkdir -p samples/cpp/thirdparty  # [unix]\n        - cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy  # [unix]\n        - cp -R thirdparty/zlib samples/cpp/thirdparty/zlib  # [unix]\n        - cp -R thirdparty/gflags samples/cpp/thirdparty/gflags  # [unix]\n        - cp -R thirdparty/json/nlohmann_json samples/cpp/thirdparty/nlohmann_json  # [unix]\n        - cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [unix]\n        - cmake --build samples_cpp_build --config Release --verbose  # [unix]\n        - ./samples_cpp_build/bin/hello_query_device  # [unix]\n\n        # C samples on Unix\n        - cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt  # [unix]\n        - cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin  # [unix]\n        - cmake --build samples_c_build --config Release --verbose  # [unix]\n\n        # C++ samples on Windows\n        - mkdir -p samples\\\\cpp\\\\thirdparty  # [win]\n        - cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy  # [win]\n        - cp -R thirdparty\\\\zlib samples\\\\cpp\\\\thirdparty\\\\zlib  # [win]\n        - cp -R thirdparty\\\\gflags samples\\\\cpp\\\\thirdparty\\\\gflags  # [win]\n        - cp -R thirdparty\\\\json\\\\nlohmann_json samples\\\\cpp\\\\thirdparty\\\\nlohmann_json  # [win]\n        - cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [win]\n        - cmake --build samples_cpp_build --config Release --verbose  # [win]\n        - .\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe  # [win]\n\n        # C samples on Windows\n        - cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt  # [win]\n        - cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin  # [win]\n        - cmake --build samples_c_build --config Release --verbose  # [win]\n\n        # check that devices are found using OpenVINO C API\n        - $CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test  # [unix]\n        - if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi  # [unix]\n\n        # check that frontends are found using OpenVINO C++ API\n        - cmake -S snippets -B snippets_build\n        - cmake --build snippets_build --config Release --verbose\n        - if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi  # [unix]\n\n  - name: openvino\n    version: {{ version }}\n    about:\n      summary: OpenVINO C++ / C / Python Runtimes & Development files\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      run_exports:\n        - {{ pin_subpackage('libopenvino-python', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n        - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n        - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n    requirements:\n      host:\n        - python # dummy dependency to create python-version dependent package\n      run:\n        - python # dummy dependency to create python-version dependent package\n        - {{ pin_subpackage('libopenvino-dev', exact=True) }}\n        - {{ pin_subpackage('libopenvino-python', exact=True) }}\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - ninja\n        - pkg-config\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n        - sysroot_linux-64 =2.17  # [linux64]\n      files:\n        - snippets/\n      commands:\n        # check that devices and frontends are found using Python API\n        - $PYTHON snippets/openvino_available_components.py  # [unix]\n\n        # check that devices are found using OpenVINO C API\n        - $CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test  # [unix]\n        - if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi  # [unix]\n\n        # check that frontends are found using OpenVINO C++ API\n        - cmake -S snippets -B snippets_build -G Ninja\n        - cmake --build snippets_build --config Release --verbose\n        - if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi  # [unix]\n\nabout:\n  home: https://github.com/openvinotoolkit/openvino\n  summary: 'Intel\u00AE Distribution of OpenVINO\u2122 Toolkit'\n  description: |\n    Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\n    optimizing and deploying AI inference. It can be used to develop\n    applications and solutions based on deep learning tasks, such as:\n    emulation of human vision, automatic speech recognition, natural\n    language processing, recommendation systems, etc. It provides\n    high-performance and rich deployment options, from edge to cloud\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - third-party-programs.txt\n    - onednn_third-party-programs.txt\n    - runtime-third-party-programs.txt\n  doc_url: https://docs.openvino.ai/latest/index.html\n  dev_url: https://github.com/openvinotoolkit/openvino\n\nextra:\n  feedstock-name: openvino\n  recipe-maintainers:\n    - ilya-lavrenov\n    - artanokhov\n    - evgenytalanin-intel\n    - RaguzovaTatyana\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "ccache",
   "clhpp",
   "cmake",
   "cxx_compiler_stub",
   "cython",
   "flatbuffers",
   "khronos-opencl-icd-loader",
   "libabseil",
   "libopenvino",
   "libopenvino-arm-cpu-plugin",
   "libopenvino-auto-batch-plugin",
   "libopenvino-auto-plugin",
   "libopenvino-dev",
   "libopenvino-hetero-plugin",
   "libopenvino-intel-cpu-plugin",
   "libopenvino-intel-gpu-plugin",
   "libopenvino-ir-frontend",
   "libopenvino-onnx-frontend",
   "libopenvino-paddle-frontend",
   "libopenvino-python",
   "libopenvino-pytorch-frontend",
   "libopenvino-tensorflow-frontend",
   "libopenvino-tensorflow-lite-frontend",
   "libprotobuf",
   "make",
   "ninja",
   "numpy",
   "ocl-icd",
   "ocl-icd-system",
   "openvino-telemetry",
   "pip",
   "pkg-config",
   "pugixml",
   "pybind11",
   "python",
   "scons",
   "snappy",
   "sysroot_linux-64",
   "tbb-devel",
   "wheel",
   "xbyak"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "scons",
    "sysroot_linux-64",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clhpp",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "ocl-icd",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "ocl-icd-system",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "sysroot_linux-64",
    "zlib"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cmake >=3.15",
    "cxx_compiler_stub",
    "cython =0.29.36",
    "flatbuffers",
    "libprotobuf",
    "make",
    "ninja",
    "pkg-config",
    "pybind11 >=2.10.1",
    "python >=3.7",
    "scons",
    "sysroot_linux-64 =2.17",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "khronos-opencl-icd-loader",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "ocl-icd",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel",
    "xbyak >=6.69.1"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy >=1.16.6",
    "ocl-icd-system",
    "openvino-telemetry >=2023.1.1",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.15",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "sysroot_linux-64 =2.17",
    "zlib"
   ]
  }
 },
 "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz",
 "version": "2023.2.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/openvino.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "feedstock-name": "openvino",
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_gapi_preproc%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-ir-frontend"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-onnx-frontend"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-paddle-frontend"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-pytorch-frontend"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "snappy",
      "libabseil",
      "libprotobuf",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.2.0/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": null,
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "clhpp",
      "khronos-opencl-icd-loader",
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_auto_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake"
     ],
     "host": [
      "tbb-devel",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.2.0\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Python API"
    },
    "build": {
     "entry_points": [
      "ovc = openvino.tools.ovc.main:main",
      "benchmark_app = openvino.tools.benchmark.main:main"
     ],
     "ignore_run_exports_from": [
      "tbb-devel",
      "pugixml"
     ],
     "string": "py39h1234567_3"
    },
    "name": "libopenvino-python",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cython =0.29.36",
      "ccache",
      "cmake >=3.15",
      "pybind11 >=2.10.1",
      "wheel"
     ],
     "host": [
      "tbb-devel",
      "pugixml",
      "python",
      "pip",
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend"
     ],
     "run": [
      "libopenvino",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "numpy >=1.16.6",
      "openvino-telemetry >=2023.1.1",
      "python"
     ]
    },
    "script": "install/install_python.sh",
    "test": {
     "commands": [
      "pip check",
      "ovc --help",
      "benchmark_app --help"
     ],
     "imports": [
      "ngraph",
      "ngraph.opset1",
      "ngraph.opset2",
      "ngraph.opset3",
      "ngraph.opset4",
      "ngraph.opset5",
      "ngraph.opset6",
      "ngraph.opset7",
      "ngraph.opset8",
      "ngraph.opset9",
      "ngraph.opset10",
      "ngraph.opset11",
      "ngraph.utils",
      "openvino.inference_engine",
      "openvino.runtime",
      "openvino.runtime.op",
      "openvino.runtime.passes",
      "openvino.runtime.properties",
      "openvino.runtime.opset1",
      "openvino.runtime.opset2",
      "openvino.runtime.opset3",
      "openvino.runtime.opset4",
      "openvino.runtime.opset5",
      "openvino.runtime.opset6",
      "openvino.runtime.opset7",
      "openvino.runtime.opset8",
      "openvino.runtime.opset9",
      "openvino.runtime.opset10",
      "openvino.runtime.opset11",
      "openvino.runtime.opset12",
      "openvino.runtime.opset13",
      "openvino.frontend",
      "openvino.frontend.onnx",
      "openvino.frontend.paddle",
      "openvino.frontend.pytorch",
      "openvino.frontend.tensorflow",
      "openvino.preprocess"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C Runtime & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ]
    },
    "name": "libopenvino-dev",
    "requirements": {
     "build": [
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel"
     ],
     "run": [
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend",
      "libopenvino-ir-frontend",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "tbb-devel"
     ]
    },
    "script": "install/install_dev.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1",
      "mkdir -p samples\\\\cpp\\\\thirdparty",
      "cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy",
      "cp -R thirdparty\\\\zlib samples\\\\cpp\\\\thirdparty\\\\zlib",
      "cp -R thirdparty\\\\gflags samples\\\\cpp\\\\thirdparty\\\\gflags",
      "cp -R thirdparty\\\\json\\\\nlohmann_json samples\\\\cpp\\\\thirdparty\\\\nlohmann_json",
      "cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin",
      "cmake --build samples_cpp_build --config Release --verbose",
      ".\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe",
      "cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt",
      "cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin",
      "cmake --build samples_c_build --config Release --verbose",
      "cmake -S snippets -B snippets_build",
      "cmake --build snippets_build --config Release --verbose"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "cmake >=3.15",
      "pkg-config",
      "zlib",
      "nlohmann_json",
      "gflags"
     ],
     "source_files": [
      "samples",
      "thirdparty/cnpy",
      "thirdparty/zlib",
      "thirdparty/gflags",
      "thirdparty/json/nlohmann_json"
     ]
    },
    "version": "2023.2.0"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO C++ / C / Python Runtimes & Development files"
    },
    "build": {
     "run_exports": [
      "libopenvino-python",
      "libopenvino-intel-cpu-plugin",
      "libopenvino-intel-gpu-plugin",
      "libopenvino-auto-plugin",
      "libopenvino-hetero-plugin",
      "libopenvino-auto-batch-plugin",
      "libopenvino-ir-frontend",
      "libopenvino-onnx-frontend",
      "libopenvino-paddle-frontend",
      "libopenvino-pytorch-frontend",
      "libopenvino-tensorflow-frontend",
      "libopenvino-tensorflow-lite-frontend"
     ],
     "string": "py39h1234567_3"
    },
    "name": "openvino",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "libopenvino-dev",
      "libopenvino-python"
     ]
    },
    "test": {
     "commands": [
      "cmake -S snippets -B snippets_build -G Ninja",
      "cmake --build snippets_build --config Release --verbose"
     ],
     "files": [
      "snippets/"
     ],
     "requires": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "ninja",
      "pkg-config",
      "cmake >=3.15"
     ]
    },
    "version": "2023.2.0"
   }
  ],
  "package": {
   "name": "openvino-split",
   "version": "2023.2.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ninja",
    "pkg-config",
    "cmake",
    "python >=3.7",
    "ccache",
    "libprotobuf",
    "flatbuffers"
   ],
   "host": [
    "tbb-devel",
    "snappy",
    "clhpp",
    "khronos-opencl-icd-loader",
    "pugixml",
    "xbyak >=6.69.1",
    "libprotobuf"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-cross-compile-protobuf.patch",
     "patches/001-win-cmake-version.patch"
    ],
    "sha256": "419b3137a1a549fc5054edbba5b71da76cbde730e8a271769126e021477ad47b",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.2.0.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "3c51d577f9e7e4cbd94ad08d267502953ec64513241dda6595b2608fafc8314c",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/2ead5d4fe5993a797d9a7a4b8b5557b96f6ec90e.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/mlas",
    "sha256": "707a6634d62ea5563042a67161472b4be3ffe73c9783719519abdd583b0295f4",
    "url": "https://github.com/openvinotoolkit/mlas/archive/f6425b1394334822390fcd9da12788c9cd0d11da.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "16f36078339cd08b949efea1d863344cb0b742d9f5898937d07a591b0c4da517",
    "url": "https://github.com/oneapi-src/oneDNN/archive/284ad4574939fa784e4ddaa1f4aa577b8eb7a017.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "edefba61a33d6cd4b78a9976cb3309c95212610a81ba6dade09882d1794198ff",
    "url": "https://github.com/opencv/ade/archive/refs/tags/v0.1.2d.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "e296f8867951fa6e71417a18f2e550a730550f8829bd35e947b4df5e3e777aa1",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.14.1.tar.gz"
   },
   {
    "folder": "thirdparty/gflags/gflags",
    "sha256": "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    "url": "https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.tar.gz"
   },
   {
    "folder": "thirdparty/json/nlohmann_json",
    "sha256": "d69f9deb6a75e2580465c6c4c5111b89c4dc2fa94e3a85fcd2ffcd9a143d9273",
    "url": "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.tar.gz"
   },
   {
    "folder": "thirdparty/zlib/zlib",
    "sha256": "1525952a0a567581792613a9723333d7f8cc20b87a81f920fb8bc7e3f2251428",
    "url": "https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ccache",
    "cmake",
    "cxx_compiler_stub",
    "cython",
    "flatbuffers",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "pybind11",
    "python",
    "wheel"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "khronos-opencl-icd-loader",
    "libabseil",
    "libopenvino",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libprotobuf",
    "pip",
    "pugixml",
    "python",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-dev",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-python",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "numpy",
    "openvino-telemetry",
    "python",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "pip",
    "pkg-config",
    "zlib"
   ]
  }
 }
}