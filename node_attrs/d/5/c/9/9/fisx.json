{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "fisx",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "name": "fisx",
 "osx_64_meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "fisx"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/fisx.json"
 },
 "raw_meta_yaml": "{% set name = \"fisx\" %}\n{% set version = \"1.3.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b\n\nbuild:\n  number: 2\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv '\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - numpy\n    - pip\n    - python\n    - cython\n  run:\n    - numpy\n    - python\n\ntest:\n  imports:\n    - fisx\n\nabout:\n  home: https://github.com/vasole/fisx\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Quantitative X-Ray Fluorescence Analysis Support Library\n  description: |\n    This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\n    The library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\n    The basic implementation is written in C++ and a Python binding is provided.\n\nextra:\n  recipe-maintainers:\n    - tschoonj\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz",
 "version": "1.3.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/fisx.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "This software library implements formulas to calculate, given an experimental setup, the expected x-ray fluorescence intensities.\nThe library accounts for secondary and tertiary excitation, K, L and M shell emission lines and de-excitation cascade effects.\nThe basic implementation is written in C++ and a Python binding is provided.\n",
   "home": "https://github.com/vasole/fisx",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Quantitative X-Ray Fluorescence Analysis Support Library"
  },
  "build": {
   "number": "2",
   "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv "
  },
  "extra": {
   "recipe-maintainers": [
    "tschoonj"
   ]
  },
  "package": {
   "name": "fisx",
   "version": "1.3.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "cython"
   ],
   "run": [
    "numpy",
    "python"
   ]
  },
  "source": {
   "sha256": "483894b3272b6c7d457d193f2a31bd417083fc9035b6965c43fd32223a3f6a4b",
   "url": "https://pypi.io/packages/source/f/fisx/fisx-1.3.1.tar.gz"
  },
  "test": {
   "imports": [
    "fisx"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}