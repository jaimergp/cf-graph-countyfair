{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "free_disk_space": true,
   "settings_linux": {
    "timeoutInMinutes": 1
   },
   "settings_osx": {
    "pool": {
     "vmImage": "macos-12"
    }
   }
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "github_actions": {
   "self_hosted": true,
   "timeout_minutes": 720,
   "triggers": [
    "push",
    "pull_request"
   ]
  },
  "os_version": {
   "linux_64": "cos7"
  },
  "provider": {
   "linux_64": "github_actions",
   "linux_aarch64": "azure"
  },
  "remote_ci_setup": [
   "py-lief=0.12.3",
   "conda-forge-ci-setup=3"
  ],
  "test": "native_and_emulated"
 },
 "feedstock_name": "pytorch-cpu",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "ignore_run_exports": [
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *"
   ],
   "ignore_run_exports_from": [
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *",
    "python *",
    "numpy *"
   ],
   "number": "202",
   "run_exports": [
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch"
   ],
   "skip": true,
   "string": "cuda120_h1234567_202"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda112_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.2",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda118_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.8",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda118py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda120_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 12.0",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda120py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda112_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.2",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda118_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.8",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda118py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda120_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 12.0",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda120py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "libtorch",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make"
   ],
   "host": [
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.2",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.8",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 12.0",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.2",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.8",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 12.0",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions"
   ],
   "run": [
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma"
   ],
   "run_constrained": [
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda112_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda118_*_202",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda120_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda112_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda118_*_202",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda120_*_202"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": [
    "patches/0001-Allow-splayed-layouts.patch",
    "patches/nvtoolsext.patch"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "libprotobuf",
    "make",
    "ninja",
    "patch",
    "protobuf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "cudnn",
    "future",
    "libcblas",
    "libgomp",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "magma",
    "nccl",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "cudnn",
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch",
    "magma",
    "networkx",
    "nomkl",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "ignore_run_exports": [
    "python *",
    "numpy *"
   ],
   "ignore_run_exports_from": [
    "python *",
    "numpy *"
   ],
   "number": "2",
   "run_exports": [
    "libtorch"
   ],
   "string": "cpu_generic_h1234567_2"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "libtorch",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make"
   ],
   "host": [
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions"
   ],
   "run": [],
   "run_constrained": [
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": null
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "libprotobuf",
    "make",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "libcblas",
    "libgomp",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch",
    "networkx",
    "nomkl",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "ignore_run_exports": null,
   "ignore_run_exports_from": null,
   "number": "2",
   "run_exports": [
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch"
   ],
   "skip": true,
   "string": "cpu_generic_h1234567_2"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda112_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.2",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda118_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.8",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda118py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda120_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 12.0",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda120py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda112_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.2",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda112py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda118_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 11.8",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda118py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "skip": true,
     "string": "cuda120_py39h1234567_202"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "sysroot_linux-64  2.17",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cuda_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "cudnn",
      "nccl",
      "magma",
      "cuda-version 12.0",
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "cudnn",
      "magma",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "__cuda",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-gpu ==2.1.2",
      "pytorch-cpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cuda120py39h1234567_202",
     "track_features": null
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "libgomp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf",
      "make"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "libgomp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "mock",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "libtorch",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "sysroot_linux-64  2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "libgomp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf"
   ],
   "host": [
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.2",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.8",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 12.0",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.2",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 11.8",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "cudnn",
    "nccl",
    "magma",
    "cuda-version 12.0",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python 3.12",
    "numpy *",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "libgomp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions"
   ],
   "run": [
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma",
    "cudnn",
    "magma"
   ],
   "run_constrained": [
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda112_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda118_*_202",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda120_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda112_*_202",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda118_*_202",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-gpu ==2.1.2",
    "pytorch-cpu ==99999999",
    "pytorch 2.1.2 cuda120_*_202",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": null
  }
 },
 "name": "libtorch",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "ignore_run_exports": null,
   "ignore_run_exports_from": null,
   "number": "2",
   "run_exports": [
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch"
   ],
   "string": "cpu_generic_h1234567_2"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\"",
      "python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "libtorch",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions"
   ],
   "run": [],
   "run_constrained": [
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": null
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "libprotobuf",
    "llvm-openmp",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "libcblas",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "llvm-openmp",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch",
    "llvm-openmp",
    "networkx",
    "nomkl",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://pytorch.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": [
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE",
    "LICENSE",
    "NOTICE",
    "third_party/pybind11/LICENSE"
   ],
   "summary": "PyTorch is an optimized tensor library for deep learning using GPUs and CPUs."
  },
  "build": {
   "detect_binary_files_with_prefix": false,
   "ignore_run_exports": null,
   "ignore_run_exports_from": null,
   "number": "2",
   "run_exports": [
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch",
    "libtorch"
   ],
   "string": "cpu_generic_h1234567_2"
  },
  "extra": {
   "feedstock-name": "pytorch-cpu",
   "recipe-maintainers": [
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr",
    "hmaarrfk",
    "sodre",
    "benjaminrwilson",
    "Tobias-Fischer",
    "beckermr"
   ]
  },
  "outputs": [
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py310h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py310h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py38h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py38h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py39h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py39h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py311h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py311h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   },
   {
    "name": "libtorch"
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "run_exports": [
      "pytorch"
     ],
     "string": "cpu_generic_py312h1234567_2"
    },
    "name": "pytorch",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "patch",
      "git",
      "llvm-openmp",
      "cmake",
      "ninja",
      "libprotobuf",
      "protobuf"
     ],
     "host": [
      "python",
      "numpy",
      "pip",
      "setuptools",
      "pyyaml",
      "requests",
      "future",
      "six",
      "libcblas",
      "liblapack",
      "llvm-openmp",
      "libprotobuf",
      "sleef",
      "typing",
      "libuv",
      "pkg-config",
      "typing_extensions",
      "libtorch"
     ],
     "run": [
      "llvm-openmp",
      "python",
      "typing_extensions",
      "sympy",
      "filelock",
      "jinja2",
      "networkx",
      "nomkl",
      "fsspec",
      "libtorch 2.1.2"
     ],
     "run_constrained": [
      "pytorch-cpu ==2.1.2",
      "pytorch-gpu ==99999999"
     ]
    },
    "script": "build_pytorch.sh",
    "test": {
     "commands": [
      "OMP_NUM_THREADS=4 python ./test/run_test.py || true",
      "pip check",
      "python -c \"import torch; print(torch.__version__)\""
     ],
     "imports": [
      "torch"
     ],
     "requires": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "hypothesis",
      "pytest",
      "tabulate",
      "pydot",
      "pip",
      "expecttest",
      "xmlrunner"
     ],
     "source_files": [
      "test",
      "tools"
     ]
    }
   },
   {
    "build": {
     "detect_binary_files_with_prefix": false,
     "string": "cpu_generic_py312h1234567_2",
     "track_features": [
      "pytorch-cpu"
     ]
    },
    "name": "pytorch-gpu",
    "requirements": {
     "run": [
      "pytorch"
     ]
    },
    "test": {
     "imports": [
      "torch"
     ]
    }
   }
  ],
  "package": {
   "name": "libtorch",
   "version": "2.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "patch",
    "git",
    "llvm-openmp",
    "cmake",
    "ninja",
    "libprotobuf",
    "protobuf"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions",
    "python",
    "numpy",
    "pip",
    "setuptools",
    "pyyaml",
    "requests",
    "future",
    "six",
    "libcblas",
    "liblapack",
    "llvm-openmp",
    "libprotobuf",
    "sleef",
    "typing",
    "libuv",
    "pkg-config",
    "typing_extensions"
   ],
   "run": [],
   "run_constrained": [
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2",
    "pytorch-cpu ==2.1.2",
    "pytorch-gpu ==99999999",
    "pytorch 2.1.2 cpu_generic_*_2"
   ]
  },
  "source": {
   "git_rev": "v2.1.2",
   "git_url": "https://github.com/pytorch/pytorch.git",
   "patches": null
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "libprotobuf",
    "llvm-openmp",
    "ninja",
    "patch",
    "protobuf"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "future",
    "libcblas",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "llvm-openmp",
    "numpy",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch",
    "llvm-openmp",
    "networkx",
    "nomkl",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libtorch",
   "pytorch",
   "pytorch-gpu"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pytorch-cpu.json"
 },
 "raw_meta_yaml": "{% set version = \"2.1.2\" %}\n{% set build = 2 %}\n\n{% if cuda_compiler_version != \"None\" %}\n{% set build = build + 200 %}\n{% endif %}\n\n{% if blas_impl == \"mkl\" %}\n{% set build = build + 100 %}\n{% endif %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: libtorch\n  version: {{ version }}\n\nsource:\n  # for local testing use a tarball including submodules\n  git_url: https://github.com/pytorch/pytorch.git\n  git_tag: v{{ version }}\n  patches:\n    - patches/nvml.patch  # [cuda_compiler_version == \"11.2\"]\n    # The patch below is probably OK for other versions too, but it is untested with them\n    # https://github.com/conda-forge/pytorch-cpu-feedstock/pull/203#issuecomment-1797352452\n    # https://github.com/pytorch/pytorch/pull/82695/files#diff-8e5cb190cc46be808993381a31fe9c027705d356b6bc0460368c0310ae82b273R61-R66\n    # https://github.com/pytorch/pytorch/pull/108932\n    - patches/0001-Allow-splayed-layouts.patch  # [cuda_compiler_version == \"12.0\"]\n    # https://github.com/pytorch/pytorch/issues/101135\n    # the following patch was transcribed to work wit 2.1.0\n    # https://gist.github.com/andreigh/f78f631e0039f0af410b269acbb0c8dc\n    - patches/nvtoolsext.patch                  # [cuda_compiler_version == \"12.0\"]\n\nbuild:\n  number: {{ build }}\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_{{ blas_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                 # [cuda_compiler_version == \"None\"]\n  detect_binary_files_with_prefix: false\n  run_exports:\n    - {{ pin_subpackage('libtorch', max_pin='x.x') }}\n  ignore_run_exports_from:\n    - python *                               # [megabuild]\n    - numpy *                                # [megabuild]\n    - cross-python_{{ target_platform }}     # [megabuild and build_platform != target_platform]\n  ignore_run_exports:\n    - python *                               # [megabuild]\n    - numpy *                                # [megabuild]\n  skip: true  # [win]\n  skip: true  # [cuda_compiler_version != \"None\" and blas_impl != \"mkl\"]\n  skip: true  # [cuda_compiler_version == \"10.2\"]\n  skip: true  # [cuda_compiler_version == \"11.0\"]\n  skip: true  # [cuda_compiler_version == \"11.1\"]\n\nrequirements:\n  # Keep this list synchronized (except for python*, numpy*) in outputs\n  # We use python to build libtorch as well because it is easier\n  build:\n    # When you change 3.12 here, change it in build.sh as well\n    - python 3.12                            # [megabuild and build_platform != target_platform]\n    - python                                 # [not megabuild and build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy  *                               # [megabuild and build_platform != target_platform]\n    - numpy                                  # [not megabuild and build_platform != target_platform]\n    - sysroot_linux-64  2.17  # [linux64]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}    # [cuda_compiler_version != \"None\"]\n    {% if cuda_major >= 12 %}\n    - cuda-driver-dev                        # [build_platform != target_platform]\n    - cuda-cudart-dev                        # [build_platform != target_platform]\n    - cuda-nvrtc-dev                         # [build_platform != target_platform]\n    - cuda-nvtx-dev                          # [build_platform != target_platform]\n    - cuda-nvml-dev                          # [build_platform != target_platform]\n    - cuda-profiler-api                      # [build_platform != target_platform]\n    - libcublas-dev                          # [build_platform != target_platform]\n    - libcufft-dev                           # [build_platform != target_platform]\n    - libcurand-dev                          # [build_platform != target_platform]\n    - libcusolver-dev                        # [build_platform != target_platform]\n    - libcusparse-dev                        # [build_platform != target_platform]\n    {% endif %}\n    # Dec 2020: it seems that git is broken on windows, so we use m2-git\n    - patch     # [not win]\n    - m2-patch  # [win]\n    - git       # [not win]\n    - m2-git    # [win]\n    - libgomp   # [linux]\n    - llvm-openmp    # [osx]\n    - cmake\n    - ninja\n    # Keep libprotobuf here so that a compatibile version\n    # of protobuf is installed between build and host\n    - libprotobuf\n    - protobuf\n    - make      # [linux]\n  host:\n    # GPU requirements\n    - cudnn                           # [cuda_compiler_version != \"None\"]\n    - nccl                            # [cuda_compiler_version != \"None\"]\n    - magma                           # [cuda_compiler_version != \"None\"]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    {% if cuda_major >= 12 %}\n    - cuda-driver-dev\n    - cuda-cudart-dev\n    - cuda-nvrtc-dev\n    - cuda-nvtx-dev\n    - cuda-nvml-dev\n    - cuda-profiler-api\n    - libcublas-dev\n    - libcufft-dev\n    - libcurand-dev\n    - libcusolver-dev\n    - libcusparse-dev\n    {% endif %}\n    # other requirements\n    - python 3.12  # [megabuild]\n    - python       # [not megabuild]\n    - numpy *      # [megabuild]\n    - numpy        # [not megabuild]\n    - pip\n    - setuptools\n    - pyyaml\n    - requests\n    - future\n    - six\n    - mkl-devel {{ mkl }}   # [blas_impl == \"mkl\"]\n    - libcblas * *_mkl      # [blas_impl == \"mkl\"]\n    - libcblas              # [blas_impl != \"mkl\"]\n    - liblapack             # [blas_impl != \"mkl\"]\n    - libgomp   # [linux]\n    - llvm-openmp    # [osx]\n    - libprotobuf\n    - sleef\n    - typing\n    - libuv\n    - pkg-config  # [unix]\n    - typing_extensions\n  run:\n    # GPU requirements without run_exports\n    - {{ pin_compatible('cudnn') }}                       # [cuda_compiler_version != \"None\"]\n    - {{ pin_compatible('magma', max_pin='x.x.x') }}      # [cuda_compiler_version != \"None\"]\n  run_constrained:\n    # These constraints ensure conflict between pytorch and\n    # pytorch-cpu 1.1 which we built before conda-forge had GPU infrastructure\n    # built into place.\n    # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/65\n    - pytorch-cpu =={{ version }}  # [cuda_compiler_version == \"None\"]\n    - pytorch-gpu ==99999999       # [cuda_compiler_version == \"None\"]\n    - pytorch-gpu =={{ version }}  # [cuda_compiler_version != \"None\"]\n    - pytorch-cpu ==99999999       # [cuda_compiler_version != \"None\"]\n    - pytorch {{ version }} cuda{{ cuda_compiler_version | replace('.', '') }}_*_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n    - pytorch {{ version }} cpu_{{ blas_impl }}_*_{{ PKG_BUILDNUM }}                                 # [cuda_compiler_version == \"None\"]\n\noutputs:\n  - name: libtorch\n\n  - name: pytorch\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_{{ blas_impl }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                 # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: false\n      run_exports:\n        - {{ pin_subpackage('pytorch', max_pin='x.x') }}\n      skip: true  # [win]\n      skip: true  # [cuda_compiler_version != \"None\" and blas_impl != \"mkl\"]\n      skip: true  # [cuda_compiler_version == \"10.2\"]\n      skip: true  # [cuda_compiler_version == \"11.0\"]\n      skip: true  # [cuda_compiler_version == \"11.1\"]\n    script: build_pytorch.sh  # [not win]\n    script: bld_pytorch.bat   # [win]\n    requirements:\n      build:\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - numpy                                  # [build_platform != target_platform]\n        - sysroot_linux-64  2.17  # [linux64]\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}    # [cuda_compiler_version != \"None\"]\n        {% if cuda_major >= 12 %}\n        - cuda-driver-dev                        # [build_platform != target_platform]\n        - cuda-cudart-dev                        # [build_platform != target_platform]\n        - cuda-nvrtc-dev                         # [build_platform != target_platform]\n        - cuda-nvtx-dev                          # [build_platform != target_platform]\n        - cuda-nvml-dev                          # [build_platform != target_platform]\n        - cuda-profiler-api                      # [build_platform != target_platform]\n        - libcublas-dev                          # [build_platform != target_platform]\n        - libcufft-dev                           # [build_platform != target_platform]\n        - libcurand-dev                          # [build_platform != target_platform]\n        - libcusolver-dev                        # [build_platform != target_platform]\n        - libcusparse-dev                        # [build_platform != target_platform]\n        {% endif %}\n        # Dec 2020: it seems that git is broken on windows, so we use m2-git\n        - patch     # [not win]\n        - m2-patch  # [win]\n        - git       # [not win]\n        - m2-git    # [win]\n        - libgomp   # [linux]\n        - llvm-openmp    # [osx]\n        - cmake\n        - ninja\n        # Keep libprotobuf here so that a compatibile version\n        # of protobuf is installed between build and host\n        - libprotobuf\n        - protobuf\n        - make      # [linux]\n      host:\n        # GPU requirements\n        - cudnn                           # [cuda_compiler_version != \"None\"]\n        - nccl                            # [cuda_compiler_version != \"None\"]\n        - magma                           # [cuda_compiler_version != \"None\"]\n        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n        {% if cuda_major >= 12 %}\n        - cuda-driver-dev\n        - cuda-cudart-dev\n        - cuda-nvrtc-dev\n        - cuda-nvtx-dev\n        - cuda-nvml-dev\n        - cuda-profiler-api\n        - libcublas-dev\n        - libcufft-dev\n        - libcurand-dev\n        - libcusolver-dev\n        - libcusparse-dev\n        {% endif %}\n        # other requirements\n        - python\n        - numpy\n        - pip\n        - setuptools\n        - pyyaml\n        - requests\n        - future\n        - six\n        - mkl-devel {{ mkl }}   # [blas_impl == \"mkl\"]\n        - libcblas * *_mkl      # [blas_impl == \"mkl\"]\n        - libcblas              # [blas_impl != \"mkl\"]\n        - liblapack             # [blas_impl != \"mkl\"]\n        - libgomp   # [linux]\n        - llvm-openmp    # [osx]\n        - libprotobuf\n        - sleef\n        - typing\n        - libuv\n        - pkg-config  # [unix]\n        - typing_extensions\n        - {{ pin_subpackage('libtorch', exact=True) }}\n      run:\n        - llvm-openmp    # [osx]\n        # GPU requirements without run_exports\n        - {{ pin_compatible('cudnn') }}                       # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible('magma', max_pin='x.x.x') }}      # [cuda_compiler_version != \"None\"]\n        # other requirements\n        - python\n        - typing_extensions\n        - sympy\n        - filelock\n        - jinja2\n        - networkx\n        - nomkl                 # [blas_impl != \"mkl\"]\n        - fsspec\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n        - libtorch {{ version }}\n      run_constrained:\n        # These constraints ensure conflict between pytorch and\n        # pytorch-cpu 1.1 which we built before conda-forge had GPU infrastructure\n        # built into place.\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/65\n        - pytorch-cpu =={{ version }}  # [cuda_compiler_version == \"None\"]\n        - pytorch-gpu ==99999999       # [cuda_compiler_version == \"None\"]\n        - pytorch-gpu =={{ version }}  # [cuda_compiler_version != \"None\"]\n        - pytorch-cpu ==99999999       # [cuda_compiler_version != \"None\"]\n\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - hypothesis\n        - pytest\n        - tabulate\n        - pydot\n        - mock  # [linux]\n        - pip\n        - expecttest\n        - xmlrunner\n      imports:\n        - torch\n      source_files:\n        - test\n        # tools/ is needed to optimise test run\n        # as of pytorch=2.0.0, there is a bug when trying to run tests without the tools\n        - tools\n      commands:\n        - OMP_NUM_THREADS=4 python ./test/run_test.py || true  # [not win]\n        - python ./test/run_test.py  # [win]\n        # Run pip check so as to ensure that all pytorch packages are installed\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/24\n        - pip check\n        - python -c \"import torch; print(torch.__version__)\"\n        - python -c \"import torch; assert torch.backends.mkldnn.m.is_available()\"  # [x86 and cuda_compiler_version == \"None\"]\n        # At conda-forge, we target versions of OSX that are too old for MPS support\n        # But if users install a newer version of OSX, they will have MPS support\n        # https://github.com/conda-forge/pytorch-cpu-feedstock/pull/123#issuecomment-1186355073\n        # - python -c \"import torch; assert torch.backends.mps.is_available()\" # [osx]\n  # 2021/08/01, hmaarrfk\n  # While this seems like a roundabout way of defining the package name\n  # It helps the linter avoid errors on a package not having tests.\n  {% set pytorch_cpu_gpu = \"pytorch-cpu\" %}   # [cuda_compiler_version == \"None\"]\n  {% set pytorch_cpu_gpu = \"pytorch-gpu\" %}   # [cuda_compiler_version != \"None\"]\n  - name: {{ pytorch_cpu_gpu }}\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_{{ blas_impl }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n      detect_binary_files_with_prefix: False\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - pytorch-cpu                                      # [cuda_compiler_version == \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"pytorch\", exact=True) }}\n    test:\n      imports:\n        - torch\n\nabout:\n  home: https://pytorch.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file:\n    - LICENSE\n    - NOTICE\n    - third_party/pybind11/LICENSE\n  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - sodre\n    - benjaminrwilson\n    - Tobias-Fischer\n    - beckermr\n  feedstock-name: pytorch-cpu\n",
 "req": {
  "__set__": true,
  "elements": [
   "__cuda",
   "c_compiler_stub",
   "cmake",
   "cuda-version",
   "cuda_compiler_stub",
   "cudnn",
   "cxx_compiler_stub",
   "filelock",
   "fsspec",
   "future",
   "git",
   "jinja2",
   "libcblas",
   "libgomp",
   "liblapack",
   "libprotobuf",
   "libtorch",
   "libuv",
   "llvm-openmp",
   "magma",
   "make",
   "nccl",
   "networkx",
   "ninja",
   "nomkl",
   "numpy",
   "patch",
   "pip",
   "pkg-config",
   "protobuf",
   "python",
   "pytorch",
   "pyyaml",
   "requests",
   "setuptools",
   "six",
   "sleef",
   "sympy",
   "sysroot_linux-64",
   "typing",
   "typing_extensions"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "libprotobuf",
    "llvm-openmp",
    "make",
    "ninja",
    "patch",
    "protobuf",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "cuda-version",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "future",
    "libcblas",
    "libgomp",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "llvm-openmp",
    "magma",
    "nccl",
    "numpy",
    "openmp",
    "pip",
    "pkg-config",
    "python",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "c_compiler_stub",
    "ctng-compilers",
    "cuda_compiler_stub",
    "cudnn",
    "cxx_compiler_stub",
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch",
    "llvm-openmp",
    "magma",
    "networkx",
    "nomkl",
    "openmp",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "strong_exports": false,
 "time": 1568135301.1552057,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "libgomp",
    "libprotobuf",
    "llvm-openmp",
    "make",
    "ninja",
    "patch",
    "protobuf",
    "sysroot_linux-64  2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version 11.2",
    "cuda-version 11.8",
    "cuda-version 12.0",
    "cudnn",
    "future",
    "libcblas",
    "libgomp",
    "liblapack",
    "libprotobuf",
    "libtorch",
    "libuv",
    "llvm-openmp",
    "magma",
    "nccl",
    "numpy",
    "numpy *",
    "pip",
    "pkg-config",
    "python",
    "python 3.12",
    "pyyaml",
    "requests",
    "setuptools",
    "six",
    "sleef",
    "typing",
    "typing_extensions"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__cuda",
    "cudnn",
    "filelock",
    "fsspec",
    "jinja2",
    "libtorch 2.1.2",
    "llvm-openmp",
    "magma",
    "networkx",
    "nomkl",
    "python",
    "pytorch",
    "sympy",
    "typing_extensions"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expecttest",
    "hypothesis",
    "mock",
    "pip",
    "pydot",
    "pytest",
    "tabulate",
    "xmlrunner"
   ]
  }
 },
 "url": null,
 "version": "2.1.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pytorch-cpu.json"
 }
}