{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "r-rcppparallel",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\""
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\""
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "merge_build_host": true,
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "filesystem",
    "sed",
    "grep",
    "automake-wrapper",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\"",
    "\"%R%\" -e \"library('RcppParallel')\""
   ]
  }
 },
 "name": "r-rcppparallel",
 "osx_64_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "autoconf",
    "automake",
    "pkg-config",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('RcppParallel')\""
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-rcppparallel"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/r-rcppparallel.json"
 },
 "raw_meta_yaml": "{% set version = \"5.1.6\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-rcppparallel\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RcppParallel_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RcppParallel/RcppParallel_{{ version }}.tar.gz\n  sha256: ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('RcppParallel')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RcppParallel')\\\"\"  # [win]\n\nabout:\n  home: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel\n  license: GPL-2.0-or-later\n  summary: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: RcppParallel\n# Type: Package\n# Title: Parallel Programming Tools for 'Rcpp'\n# Version: 4.4.3\n# Authors@R: c( person(\"JJ\", \"Allaire\", role = c(\"aut\"), email = \"jj@rstudio.com\"), person(\"Romain\", \"Francois\", role = c(\"aut\", \"cph\")), person(\"Kevin\", \"Ushey\", role = c(\"aut\", \"cre\"), email = \"kevin@rstudio.com\"), person(\"Gregory\", \"Vandenbrouck\", role = \"aut\"), person(\"Marcus\", \"Geelnard\", role = c(\"aut\", \"cph\"), comment = \"TinyThread library, http://tinythreadpp.bitsnbites.eu/\"), person(family = \"RStudio\", role = \"cph\"), person(family = \"Intel\", role = c(\"aut\", \"cph\"), comment = \"Intel TBB library, https://www.threadingbuildingblocks.org/\"), person(family = \"Microsoft\", role = \"cph\") )\n# Description: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values.\n# Depends: R (>= 3.0.2)\n# Suggests: Rcpp, RUnit, knitr, rmarkdown\n# SystemRequirements: GNU make, Windows: cmd.exe and cscript.exe, Solaris: g++ is required\n# License: GPL-2\n# URL: http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel\n# Biarch: TRUE\n# Collate: 'build.R' 'hooks.R' 'options.R' 'skeleton.R'\n# NeedsCompilation: yes\n# Packaged: 2019-05-22 18:52:14 UTC; kevin\n# Author: JJ Allaire [aut], Romain Francois [aut, cph], Kevin Ushey [aut, cre], Gregory Vandenbrouck [aut], Marcus Geelnard [aut, cph] (TinyThread library, http://tinythreadpp.bitsnbites.eu/), RStudio [cph], Intel [aut, cph] (Intel TBB library, https://www.threadingbuildingblocks.org/), Microsoft [cph]\n# Maintainer: Kevin Ushey <kevin@rstudio.com>\n# Repository: CRAN\n# Date/Publication: 2019-05-22 22:20:04 UTC\n",
 "req": {
  "__set__": true,
  "elements": [
   "autoconf",
   "automake",
   "automake-wrapper",
   "c_compiler_stub",
   "coreutils",
   "cxx_compiler_stub",
   "filesystem",
   "gcc-libs",
   "grep",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "make",
   "pkg-config",
   "r-base",
   "sed",
   "zip"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "automake-wrapper",
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "grep",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "pkg-config",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake",
    "automake-wrapper",
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "grep",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "pkg-config",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
 ],
 "version": "5.1.6",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/r-rcppparallel.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "http://rcppcore.github.io/RcppParallel, https://github.com/RcppCore/RcppParallel",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
  },
  "build": {
   "merge_build_host": true,
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-rcppparallel",
   "version": "5.1.6"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "filesystem",
    "sed",
    "grep",
    "autoconf",
    "automake-wrapper",
    "pkg-config",
    "make",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base",
    "gcc-libs"
   ]
  },
  "source": {
   "sha256": "ac560d868e9757a93ddbf176dfd851fc753f67919476f88e248fe94cba4f0f15",
   "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.6.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.6.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('RcppParallel')\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "autoconf",
    "automake-wrapper",
    "coreutils",
    "filesystem",
    "grep",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "pkg-config",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}