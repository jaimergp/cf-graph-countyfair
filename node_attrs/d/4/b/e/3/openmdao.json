{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "inspection": "hint-all"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux": "azure",
   "osx": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "openmdao",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "OpenMDAO is an open-source high-performance computing platform\nfor systems analysis and multidisciplinary optimization, written in Python. It\nenables you to decompose your models, making them easier to build and maintain,\nwhile still solving them in a tightly coupled manner with efficient parallel\nnumerical methods.\n",
   "dev_url": "https://github.com/OpenMDAO/OpenMDAO",
   "doc_source_url": "https://github.com/OpenMDAO/OpenMDAO/tree/3.34.1/openmdao/docs",
   "doc_url": "https://openmdao.org/docs",
   "home": "https://openmdao.org",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE.txt",
   "summary": "OpenMDAO framework infrastructure"
  },
  "build": {
   "noarch": "python",
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "swryan",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "openmdao = openmdao.utils.om:openmdao_cmd",
      "reset_notebook = openmdao.devtools.docutils:reset_notebook_cmd",
      "run_om_test = openmdao.devtools.run_test:run_test",
      "webview = openmdao.utils.webview:webview_argv",
      "wingproj = openmdao.devtools.wingproj:run_wing"
     ],
     "noarch": "python",
     "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "name": "openmdao",
    "requirements": {
     "host": [
      "python >=3.8",
      "hatchling",
      "pip"
     ],
     "run": [
      "python >=3.8",
      "networkx >=2.0",
      "numpy <2",
      "packaging",
      "requests",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-doe",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "pydoe3"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-jax",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "jax >=0.4.0",
      "jaxlib >=0.4.0"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-notebooks",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "idna >=3.7",
      "ipympl",
      "notebook"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-visualization",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "bokeh >=2.4.0",
      "colorama",
      "matplotlib-base"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-all",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "openmdao-with-doe",
      "openmdao-with-jax",
      "openmdao-with-notebooks",
      "openmdao-with-visualization"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python run_testflo.py"
     ],
     "files": [
      "run_testflo.py"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip",
      "networkx <3.2",
      "aiounittest",
      "num2words",
      "numpydoc >=1.1",
      "parameterized",
      "pycodestyle >=2.4.0",
      "pydocstyle >=2.0.0",
      "testflo >=1.3.6",
      "websockets >8"
     ]
    }
   }
  ],
  "package": {
   "name": "openmdao",
   "version": "3.34.1"
  },
  "requirements": {
   "host": [
    "python >=3.8"
   ],
   "run": [
    "python >=3.8"
   ]
  },
  "source": {
   "sha256": "7eb60a360a3c4d0b230542eac0057705621c879462b3089447c5a468b7fa931c",
   "url": "https://pypi.io/packages/source/o/openmdao/openmdao-3.34.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bokeh",
    "colorama",
    "idna",
    "ipympl",
    "jax",
    "jaxlib",
    "matplotlib-base",
    "networkx",
    "notebook",
    "numpy",
    "openmdao",
    "openmdao-with-doe",
    "openmdao-with-jax",
    "openmdao-with-notebooks",
    "openmdao-with-visualization",
    "packaging",
    "pydoe3",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "aiounittest",
    "networkx",
    "num2words",
    "numpydoc",
    "parameterized",
    "pip",
    "pycodestyle",
    "pydocstyle",
    "testflo",
    "websockets"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "OpenMDAO is an open-source high-performance computing platform\nfor systems analysis and multidisciplinary optimization, written in Python. It\nenables you to decompose your models, making them easier to build and maintain,\nwhile still solving them in a tightly coupled manner with efficient parallel\nnumerical methods.\n",
   "dev_url": "https://github.com/OpenMDAO/OpenMDAO",
   "doc_source_url": "https://github.com/OpenMDAO/OpenMDAO/tree/3.34.1/openmdao/docs",
   "doc_url": "https://openmdao.org/docs",
   "home": "https://openmdao.org",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": "LICENSE.txt",
   "summary": "OpenMDAO framework infrastructure"
  },
  "build": {
   "noarch": "python",
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "swryan",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "entry_points": [
      "openmdao = openmdao.utils.om:openmdao_cmd",
      "reset_notebook = openmdao.devtools.docutils:reset_notebook_cmd",
      "run_om_test = openmdao.devtools.run_test:run_test",
      "webview = openmdao.utils.webview:webview_argv",
      "wingproj = openmdao.devtools.wingproj:run_wing"
     ],
     "noarch": "python",
     "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "name": "openmdao",
    "requirements": {
     "host": [
      "python >=3.8",
      "hatchling",
      "pip"
     ],
     "run": [
      "python >=3.8",
      "networkx >=2.0",
      "numpy <2",
      "packaging",
      "requests",
      "scipy"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-doe",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "pydoe3"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-jax",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "jax >=0.4.0",
      "jaxlib >=0.4.0"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-notebooks",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "idna >=3.7",
      "ipympl",
      "notebook"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-visualization",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "bokeh >=2.4.0",
      "colorama",
      "matplotlib-base"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "openmdao --help",
      "webview --help",
      "wingproj --help"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "python"
    },
    "name": "openmdao-with-all",
    "requirements": {
     "host": [
      "python >=3.8"
     ],
     "run": [
      "python >=3.8",
      "openmdao",
      "openmdao-with-doe",
      "openmdao-with-jax",
      "openmdao-with-notebooks",
      "openmdao-with-visualization"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python run_testflo.py"
     ],
     "files": [
      "run_testflo.py"
     ],
     "imports": [
      "openmdao"
     ],
     "requires": [
      "pip",
      "networkx <3.2",
      "aiounittest",
      "num2words",
      "numpydoc >=1.1",
      "parameterized",
      "pycodestyle >=2.4.0",
      "pydocstyle >=2.0.0",
      "testflo >=1.3.6",
      "websockets >8"
     ]
    }
   }
  ],
  "package": {
   "name": "openmdao",
   "version": "3.34.1"
  },
  "requirements": {
   "host": [
    "python >=3.8"
   ],
   "run": [
    "python >=3.8"
   ]
  },
  "source": {
   "sha256": "7eb60a360a3c4d0b230542eac0057705621c879462b3089447c5a468b7fa931c",
   "url": "https://pypi.io/packages/source/o/openmdao/openmdao-3.34.1.tar.gz"
  }
 },
 "name": "openmdao",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "openmdao",
   "openmdao-with-all",
   "openmdao-with-doe",
   "openmdao-with-jax",
   "openmdao-with-notebooks",
   "openmdao-with-visualization"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/openmdao.json"
 },
 "raw_meta_yaml": "{% set min_python = \"python >=3.8\" %}\n{% set min_python = \"python >=3.8\" %}\n{% set version = \"3.34.1\" %}\n\npackage:\n  name: openmdao\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/o/openmdao/openmdao-{{ version }}.tar.gz\n  sha256: 7eb60a360a3c4d0b230542eac0057705621c879462b3089447c5a468b7fa931c\n\nbuild:\n  noarch: python\n  number: 0\n\nrequirements:\n  host:\n    - {{ min_python }}\n  run:\n    - {{ min_python }}\n\noutputs:\n  - name: openmdao\n    build:\n      noarch: python\n      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n      entry_points:\n        - openmdao = openmdao.utils.om:openmdao_cmd\n        - reset_notebook = openmdao.devtools.docutils:reset_notebook_cmd\n        - run_om_test = openmdao.devtools.run_test:run_test\n        - webview = openmdao.utils.webview:webview_argv\n        - wingproj = openmdao.devtools.wingproj:run_wing\n    requirements:\n      host:\n        - {{ min_python }}\n        - hatchling\n        - pip\n      run:\n        - {{ min_python }}\n        - networkx >=2.0\n        - numpy <2\n        - packaging\n        - requests\n        - scipy\n    test:\n      requires:\n        - pip\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - openmdao --help\n        - webview --help\n        - wingproj --help\n\n  - name: openmdao-with-doe\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"openmdao\", exact=True) }}\n        - pydoe3\n    test:\n      requires:\n        - pip\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - openmdao --help\n        - webview --help\n        - wingproj --help\n\n  - name: openmdao-with-jax\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"openmdao\", exact=True) }}\n        - jax >=0.4.0\n        - jaxlib >=0.4.0\n    test:\n      requires:\n        - pip\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - openmdao --help\n        - webview --help\n        - wingproj --help\n\n  - name: openmdao-with-notebooks\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"openmdao\", exact=True) }}\n        - idna >=3.7\n        - ipympl\n        - notebook\n    test:\n      requires:\n        - pip\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - openmdao --help\n        - webview --help\n        - wingproj --help\n\n  - name: openmdao-with-visualization\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"openmdao\", exact=True) }}\n        - bokeh >=2.4.0\n        - colorama\n        - matplotlib-base\n    test:\n      requires:\n        - pip\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - openmdao --help\n        - webview --help\n        - wingproj --help\n\n  - name: openmdao-with-all\n    build:\n      noarch: python\n    requirements:\n      host:\n        - {{ min_python }}\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"openmdao\", exact=True) }}\n        - {{ pin_subpackage(\"openmdao-with-doe\", exact=True) }}\n        - {{ pin_subpackage(\"openmdao-with-jax\", exact=True) }}\n        - {{ pin_subpackage(\"openmdao-with-notebooks\", exact=True) }}\n        - {{ pin_subpackage(\"openmdao-with-visualization\", exact=True) }}\n    test:\n      files:\n        - run_testflo.py\n      requires:\n        # for pip check\n        - pip\n        # networkx 3.2 drops py3.8, but `testflo` -> `coverage 5` won't solve there\n        - networkx <3.2\n        # [test] extra\n        - aiounittest\n        - num2words\n        - numpydoc >=1.1\n        - parameterized\n        - pycodestyle >=2.4.0\n        - pydocstyle >=2.0.0\n        - testflo >=1.3.6\n        - websockets >8\n        # not available on conda-forge\n        # - playwright>=1.20\n      imports:\n        - openmdao\n      commands:\n        - pip check\n        - python run_testflo.py\n\nabout:\n  home: https://openmdao.org\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.txt\n  summary: OpenMDAO framework infrastructure\n  description: |\n    OpenMDAO is an open-source high-performance computing platform\n    for systems analysis and multidisciplinary optimization, written in Python. It\n    enables you to decompose your models, making them easier to build and maintain,\n    while still solving them in a tightly coupled manner with efficient parallel\n    numerical methods.\n  doc_url: https://openmdao.org/docs\n  dev_url: https://github.com/OpenMDAO/OpenMDAO\n  doc_source_url: https://github.com/OpenMDAO/OpenMDAO/tree/{{ version }}/openmdao/docs\n\nextra:\n  recipe-maintainers:\n    - swryan\n    - bollwyvl\n",
 "req": {
  "__set__": true,
  "elements": [
   "bokeh",
   "colorama",
   "hatchling",
   "idna",
   "ipympl",
   "jax",
   "jaxlib",
   "matplotlib-base",
   "networkx",
   "notebook",
   "numpy",
   "openmdao",
   "openmdao-with-doe",
   "openmdao-with-jax",
   "openmdao-with-notebooks",
   "openmdao-with-visualization",
   "packaging",
   "pip",
   "pydoe3",
   "python",
   "requests",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bokeh",
    "colorama",
    "idna",
    "ipympl",
    "jax",
    "jaxlib",
    "matplotlib-base",
    "networkx",
    "notebook",
    "numpy",
    "openmdao",
    "openmdao-with-doe",
    "openmdao-with-jax",
    "openmdao-with-notebooks",
    "openmdao-with-visualization",
    "packaging",
    "pydoe3",
    "python",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "aiounittest",
    "networkx",
    "num2words",
    "numpydoc",
    "parameterized",
    "pip",
    "pycodestyle",
    "pydocstyle",
    "testflo",
    "websockets"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "hatchling",
    "pip",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "bokeh >=2.4.0",
    "colorama",
    "idna >=3.7",
    "ipympl",
    "jax >=0.4.0",
    "jaxlib >=0.4.0",
    "matplotlib-base",
    "networkx >=2.0",
    "notebook",
    "numpy <2",
    "openmdao",
    "openmdao-with-doe",
    "openmdao-with-jax",
    "openmdao-with-notebooks",
    "openmdao-with-visualization",
    "packaging",
    "pydoe3",
    "python >=3.8",
    "requests",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "aiounittest",
    "networkx <3.2",
    "num2words",
    "numpydoc >=1.1",
    "parameterized",
    "pip",
    "pycodestyle >=2.4.0",
    "pydocstyle >=2.0.0",
    "testflo >=1.3.6",
    "websockets >8"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/o/openmdao/openmdao-3.34.1.tar.gz",
 "version": "3.34.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/openmdao.json"
 }
}