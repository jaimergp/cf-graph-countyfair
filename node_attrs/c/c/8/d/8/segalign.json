{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "segalign",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "SegAlign is a Scalable GPU System for Pairwise Whole Genome\nAlignments based on LASTZ's seed-filter-extend paradigm.\n",
   "dev_url": "https://github.com/gsneha26/SegAlign",
   "doc_url": "https://github.com/gsneha26/SegAlign/blob/main/README.md",
   "home": "https://github.com/gsneha26/SegAlign",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "SegAlign: A Scalable GPU-Based Whole Genome Aligner"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "richard-burhans",
    "richard-burhans"
   ]
  },
  "package": {
   "name": "segalign",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "cuda-version 11.2",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib",
    "cuda-version 11.8",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib"
   ],
   "run": [
    "cuda-version 11.2",
    "parallel",
    "tbb-devel 2020.2.*",
    "cuda-version 11.8",
    "parallel",
    "tbb-devel 2020.2.*"
   ]
  },
  "source": {
   "patches": [
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch",
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch"
   ],
   "sha256": "4f1892d0a08acf98b40608a2938cab984c225362df7a4c28c8347f2f38071abb",
   "url": "https://github.com/gsneha26/SegAlign/archive/refs/tags/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "segalign --help",
    "segalign_repeat_masker --help",
    "segalign --help",
    "segalign_repeat_masker --help"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libboost-devel",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "parallel",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "SegAlign is a Scalable GPU System for Pairwise Whole Genome\nAlignments based on LASTZ's seed-filter-extend paradigm.\n",
   "dev_url": "https://github.com/gsneha26/SegAlign",
   "doc_url": "https://github.com/gsneha26/SegAlign/blob/main/README.md",
   "home": "https://github.com/gsneha26/SegAlign",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "SegAlign: A Scalable GPU-Based Whole Genome Aligner"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "richard-burhans",
    "richard-burhans",
    "richard-burhans",
    "richard-burhans"
   ]
  },
  "package": {
   "name": "segalign",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "cuda-version 11.2",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib",
    "cuda-version 11.8",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib",
    "cuda-version 11.2",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib",
    "cuda-version 11.8",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib"
   ],
   "run": [
    "cuda-version 11.2",
    "parallel",
    "tbb-devel 2020.2.*",
    "cuda-version 11.8",
    "parallel",
    "tbb-devel 2020.2.*",
    "cuda-version 11.2",
    "parallel",
    "tbb-devel 2020.2.*",
    "cuda-version 11.8",
    "parallel",
    "tbb-devel 2020.2.*"
   ]
  },
  "source": {
   "patches": [
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch",
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch",
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch",
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch"
   ],
   "sha256": "4f1892d0a08acf98b40608a2938cab984c225362df7a4c28c8347f2f38071abb",
   "url": "https://github.com/gsneha26/SegAlign/archive/refs/tags/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "segalign --help",
    "segalign_repeat_masker --help",
    "segalign --help",
    "segalign_repeat_masker --help",
    "segalign --help",
    "segalign_repeat_masker --help",
    "segalign --help",
    "segalign_repeat_masker --help"
   ]
  }
 },
 "name": "segalign",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "segalign"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/segalign.json"
 },
 "raw_meta_yaml": "{% set name = \"SegAlign\" %}\n{% set version = \"0.1.2\" %}\n{% set tbb_version = '2020.2.*' %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gsneha26/SegAlign/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 4f1892d0a08acf98b40608a2938cab984c225362df7a4c28c8347f2f38071abb\n  patches:\n    - patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch\n    - patches/CMakeLists.txt.patch\n    - patches/common__seed_pos_table.cu.patch\n    - patches/repeat_masker_src__seed_filter.cu.patch\n    - patches/src__seed_filter.cu.patch\n\nbuild:\n  number: 0\n  skip: true  # [cuda_compiler_version is undefined or cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - cmake\n    - make\n  host:\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    - libboost-devel\n    - tbb-devel {{ tbb_version }}\n    - zlib\n  run:\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    - parallel\n    - tbb-devel {{ tbb_version }}\n\ntest:\n  commands:\n    - segalign --help\n    - segalign_repeat_masker --help\n\nabout:\n  home: https://github.com/gsneha26/SegAlign\n  summary: 'SegAlign: A Scalable GPU-Based Whole Genome Aligner'\n  description: |\n    SegAlign is a Scalable GPU System for Pairwise Whole Genome\n    Alignments based on LASTZ's seed-filter-extend paradigm.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://github.com/gsneha26/SegAlign/blob/main/README.md\n  dev_url: https://github.com/gsneha26/SegAlign\n\nextra:\n  recipe-maintainers:\n    - richard-burhans\n    # need to ask first\n    #- gsneha26     Sneha D. Goenka\n    #- yatisht      Yatish Turakhia\n    #- glennhickey  Glenn Hickey\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cuda-version",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "libboost-devel",
   "make",
   "parallel",
   "tbb-devel",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libboost-devel",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda-version",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "parallel",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version 11.2",
    "cuda-version 11.8",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version 11.2",
    "cuda-version 11.8",
    "parallel",
    "tbb-devel 2020.2.*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/gsneha26/SegAlign/archive/refs/tags/v0.1.2.tar.gz",
 "version": "0.1.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/segalign.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "SegAlign is a Scalable GPU System for Pairwise Whole Genome\nAlignments based on LASTZ's seed-filter-extend paradigm.\n",
   "dev_url": "https://github.com/gsneha26/SegAlign",
   "doc_url": "https://github.com/gsneha26/SegAlign/blob/main/README.md",
   "home": "https://github.com/gsneha26/SegAlign",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "SegAlign: A Scalable GPU-Based Whole Genome Aligner"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "richard-burhans",
    "richard-burhans"
   ]
  },
  "package": {
   "name": "segalign",
   "version": "0.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "cuda-version 11.2",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib",
    "cuda-version 11.8",
    "libboost-devel",
    "tbb-devel 2020.2.*",
    "zlib"
   ],
   "run": [
    "cuda-version 11.2",
    "parallel",
    "tbb-devel 2020.2.*",
    "cuda-version 11.8",
    "parallel",
    "tbb-devel 2020.2.*"
   ]
  },
  "source": {
   "patches": [
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch",
    "patches/d1a73a0c9169d5517c9316d9bdc68fd52f63e885.patch",
    "patches/CMakeLists.txt.patch",
    "patches/common__seed_pos_table.cu.patch",
    "patches/repeat_masker_src__seed_filter.cu.patch",
    "patches/src__seed_filter.cu.patch"
   ],
   "sha256": "4f1892d0a08acf98b40608a2938cab984c225362df7a4c28c8347f2f38071abb",
   "url": "https://github.com/gsneha26/SegAlign/archive/refs/tags/v0.1.2.tar.gz"
  },
  "test": {
   "commands": [
    "segalign --help",
    "segalign_repeat_masker --help",
    "segalign --help",
    "segalign_repeat_masker --help"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "libboost-devel",
    "tbb-devel",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda-version",
    "parallel",
    "tbb-devel"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}