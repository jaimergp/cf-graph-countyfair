{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "bader",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "We have developed a fast algorithm for doing Bader's analysis on a\ncharge density grid. The program (see below) can read in charge\ndensities in the VASP CHGCAR format, or the Gaussian CUBE format. The\nprogram outputs the total charge associated with each atom, and the\nzero flux surfaces defining the Bader volumes.\n",
   "dev_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "doc_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "home": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Bader Charge Analysis"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "package": {
   "name": "bader",
   "version": "1.0.4"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "make"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "patches": [
    "make.patch"
   ],
   "sha256": "f20a0a021157d911bea06666911763b737c4ff38b39e793b8560f940fe391b8e",
   "url": "http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz"
  },
  "test": {
   "commands": [
    "bader -h"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "We have developed a fast algorithm for doing Bader's analysis on a\ncharge density grid. The program (see below) can read in charge\ndensities in the VASP CHGCAR format, or the Gaussian CUBE format. The\nprogram outputs the total charge associated with each atom, and the\nzero flux surfaces defining the Bader volumes.\n",
   "dev_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "doc_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "home": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Bader Charge Analysis"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "package": {
   "name": "bader",
   "version": "1.0.4"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "make"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "patches": [
    "make.patch"
   ],
   "sha256": "f20a0a021157d911bea06666911763b737c4ff38b39e793b8560f940fe391b8e",
   "url": "http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz"
  },
  "test": {
   "commands": [
    "bader -h"
   ]
  }
 },
 "name": "bader",
 "osx_64_meta_yaml": {
  "about": {
   "description": "We have developed a fast algorithm for doing Bader's analysis on a\ncharge density grid. The program (see below) can read in charge\ndensities in the VASP CHGCAR format, or the Gaussian CUBE format. The\nprogram outputs the total charge associated with each atom, and the\nzero flux surfaces defining the Bader volumes.\n",
   "dev_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "doc_url": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "home": "http://theory.cm.utexas.edu/henkelman/code/bader/",
   "license": "GPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "LICENSE.txt",
   "summary": "Bader Charge Analysis"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen"
   ]
  },
  "package": {
   "name": "bader",
   "version": "1.0.4"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "make"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "patches": [
    "make.patch"
   ],
   "sha256": "f20a0a021157d911bea06666911763b737c4ff38b39e793b8560f940fe391b8e",
   "url": "http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz"
  },
  "test": {
   "commands": [
    "bader -h"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "bader"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/bader.json"
 },
 "raw_meta_yaml": "{% set name = \"bader\" %}\n{% set version = \"1.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz\n  sha256: f20a0a021157d911bea06666911763b737c4ff38b39e793b8560f940fe391b8e\n  patches:\n    - make.patch\n\nbuild:\n  number: 1\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - make\n  host:\n  run:\n\ntest:\n  commands: \n    - bader -h\n\nabout:\n  home: http://theory.cm.utexas.edu/henkelman/code/bader/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: 'Bader Charge Analysis'\n  description: |\n    We have developed a fast algorithm for doing Bader's analysis on a \n    charge density grid. The program (see below) can read in charge \n    densities in the VASP CHGCAR format, or the Gaussian CUBE format. The\n    program outputs the total charge associated with each atom, and the \n    zero flux surfaces defining the Bader volumes.\n  doc_url: http://theory.cm.utexas.edu/henkelman/code/bader/\n  dev_url: http://theory.cm.utexas.edu/henkelman/code/bader/\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "fortran_compiler_stub",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "fortran_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "http://theory.cm.utexas.edu/henkelman/code/bader/download/bader.tar.gz",
 "version": "1.0.4",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/bader.json"
 }
}