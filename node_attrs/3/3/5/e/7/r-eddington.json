{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "r-eddington",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pegeler/eddington2",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days. The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-eddington",
   "version": "4.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ],
   "run": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "source": {
   "sha256": "3f39f85660a67b61aa8197d5af2c6d6a2bd5574f2e3ad06007991c0c73503937",
   "url": [
    "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('eddington')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/pegeler/eddington2",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-3",
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days. The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/",
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-eddington",
   "version": "4.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml",
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ],
   "run": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml",
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "source": {
   "sha256": "3f39f85660a67b61aa8197d5af2c6d6a2bd5574f2e3ad06007991c0c73503937",
   "url": [
    "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('eddington')\"",
    "$R -e \"library('eddington')\""
   ]
  }
 },
 "name": "r-eddington",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pegeler/eddington2",
   "license": "GPL-2.0-or-later",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2",
    "/lib/R/share/licenses/GPL-3"
   ],
   "summary": "Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days. The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-eddington",
   "version": "4.1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ],
   "run": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "source": {
   "sha256": "3f39f85660a67b61aa8197d5af2c6d6a2bd5574f2e3ad06007991c0c73503937",
   "url": [
    "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('eddington')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-eddington"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/r-eddington.json"
 },
 "raw_meta_yaml": "{% set version = \"4.1.2\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-eddington\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/eddington_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/eddington/eddington_{{ version }}.tar.gz\n  sha256: 3f39f85660a67b61aa8197d5af2c6d6a2bd5574f2e3ad06007991c0c73503937\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-r6\n    - r-rcpp\n    - r-xml\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-r6\n    - r-rcpp\n    - r-xml\n\ntest:\n  commands:\n    - $R -e \"library('eddington')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('eddington')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/pegeler/eddington2\n  license: GPL-2.0-or-later\n  summary: Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days.\n    The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch\n    (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "make",
   "r-base",
   "r-r6",
   "r-rcpp",
   "r-xml"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-r6",
    "r-rcpp",
    "r-xml"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/eddington_4.1.2.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/eddington/eddington_4.1.2.tar.gz"
 ],
 "version": "4.1.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/r-eddington.json"
 }
}