{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "cosolvkit",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "CosolvKit is a tool for cosolvent MD preparation and analysis.\nIt allows the user to parametrize any kind of cosolvent required\ndefined by SMILES string at any concentration (M) or number of copies.\nIt is built on top of OpenMM, hence it accepts all the forcefields\navailable in OpenMM and it generates topology and coordinate files of the\ncompatible with the required MD engine (OpenMM, Amber, GROMACS, CHARMM).\nMD simulations can be run either within cosolvkit or externally and CosolvKit\nprovides a minimal analysis pipeline to analyse cosolvent densities from the trajectories.\n",
   "home": "https://github.com/forlilab/cosolvkit",
   "license": "LGPL-2.1-or-later",
   "license_file": "LICENSE",
   "summary": "CosolvKit is a tool for cosolvent MD preparation and analysis"
  },
  "build": {
   "entry_points": [
    "create_cosolvent_system=cosolvkit.cli.create_cosolvent_system:main",
    "post_simulation_processing=cosolvkit.cli.post_simulation_processing:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "nbruciaferri"
   ]
  },
  "package": {
   "name": "cosolvkit",
   "version": "0.4.7"
  },
  "requirements": {
   "host": [
    "python >=3.9",
    "setuptools >=61.0",
    "pip"
   ],
   "run": [
    "python >=3.9",
    "openmmforcefields >=0.12",
    "pdbfixer",
    "mdanalysis",
    "espaloma",
    "pymol-open-source",
    "griddataformats"
   ]
  },
  "source": {
   "sha256": "3a2b9609ad9fcf1f97578d5d9d17927ae5404f97aac56507016dc065dc29081c",
   "url": "https://pypi.io/packages/source/c/cosolvkit/cosolvkit-0.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "openmm",
    "espaloma",
    "cosolvkit"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "espaloma",
    "griddataformats",
    "mdanalysis",
    "openmmforcefields",
    "pdbfixer",
    "pymol-open-source",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "CosolvKit is a tool for cosolvent MD preparation and analysis.\nIt allows the user to parametrize any kind of cosolvent required\ndefined by SMILES string at any concentration (M) or number of copies.\nIt is built on top of OpenMM, hence it accepts all the forcefields\navailable in OpenMM and it generates topology and coordinate files of the\ncompatible with the required MD engine (OpenMM, Amber, GROMACS, CHARMM).\nMD simulations can be run either within cosolvkit or externally and CosolvKit\nprovides a minimal analysis pipeline to analyse cosolvent densities from the trajectories.\n",
   "home": "https://github.com/forlilab/cosolvkit",
   "license": "LGPL-2.1-or-later",
   "license_file": "LICENSE",
   "summary": "CosolvKit is a tool for cosolvent MD preparation and analysis"
  },
  "build": {
   "entry_points": [
    "create_cosolvent_system=cosolvkit.cli.create_cosolvent_system:main",
    "post_simulation_processing=cosolvkit.cli.post_simulation_processing:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
  },
  "extra": {
   "recipe-maintainers": [
    "nbruciaferri"
   ]
  },
  "package": {
   "name": "cosolvkit",
   "version": "0.4.7"
  },
  "requirements": {
   "host": [
    "python >=3.9",
    "setuptools >=61.0",
    "pip"
   ],
   "run": [
    "python >=3.9",
    "openmmforcefields >=0.12",
    "pdbfixer",
    "mdanalysis",
    "espaloma",
    "pymol-open-source",
    "griddataformats"
   ]
  },
  "source": {
   "sha256": "3a2b9609ad9fcf1f97578d5d9d17927ae5404f97aac56507016dc065dc29081c",
   "url": "https://pypi.io/packages/source/c/cosolvkit/cosolvkit-0.4.7.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "openmm",
    "espaloma",
    "cosolvkit"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "cosolvkit",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cosolvkit"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cosolvkit.json"
 },
 "raw_meta_yaml": "{% set name = \"cosolvkit\" %}\n{% set version = \"0.4.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/cosolvkit-{{ version }}.tar.gz\n  sha256: 3a2b9609ad9fcf1f97578d5d9d17927ae5404f97aac56507016dc065dc29081c\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 0\n  entry_points:\n    - create_cosolvent_system=cosolvkit.cli.create_cosolvent_system:main\n    - post_simulation_processing=cosolvkit.cli.post_simulation_processing:main\n\nrequirements:\n  host:\n    - python >=3.9\n    - setuptools >=61.0\n    - pip\n  run:\n    - python >=3.9\n    - openmmforcefields >=0.12\n    - pdbfixer\n    - mdanalysis\n    - espaloma\n    - pymol-open-source\n    - griddataformats\n\ntest:\n  imports:\n    - openmm\n    - espaloma\n    - cosolvkit  \n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/forlilab/cosolvkit\n  summary: CosolvKit\n  license: LGPL-2.1-or-later\n  license_file: LICENSE\n  summary: 'CosolvKit is a tool for cosolvent MD preparation and analysis'\n  description: |\n    CosolvKit is a tool for cosolvent MD preparation and analysis.\n    It allows the user to parametrize any kind of cosolvent required\n    defined by SMILES string at any concentration (M) or number of copies.\n    It is built on top of OpenMM, hence it accepts all the forcefields\n    available in OpenMM and it generates topology and coordinate files of the\n    compatible with the required MD engine (OpenMM, Amber, GROMACS, CHARMM).\n    MD simulations can be run either within cosolvkit or externally and CosolvKit\n    provides a minimal analysis pipeline to analyse cosolvent densities from the trajectories.\n\nextra:\n  recipe-maintainers:\n    - nbruciaferri\n",
 "req": {
  "__set__": true,
  "elements": [
   "espaloma",
   "griddataformats",
   "mdanalysis",
   "openmmforcefields",
   "pdbfixer",
   "pip",
   "pymol-open-source",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "espaloma",
    "griddataformats",
    "mdanalysis",
    "openmmforcefields",
    "pdbfixer",
    "pymol-open-source",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.9",
    "setuptools >=61.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "espaloma",
    "griddataformats",
    "mdanalysis",
    "openmmforcefields >=0.12",
    "pdbfixer",
    "pymol-open-source",
    "python >=3.9"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/c/cosolvkit/cosolvkit-0.4.7.tar.gz",
 "version": "0.4.7",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cosolvkit.json"
 }
}