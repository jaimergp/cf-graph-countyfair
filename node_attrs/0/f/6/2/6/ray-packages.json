{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "ray-packages",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Ray is a fast and simple framework for building and running\ndistributed applications. It is split into ray-core, ray-default,\nray-serve, ray-rllib, ray-client, ray-data, ray-tune,\nray-train, ray-air, ray-observability and ray-all packages.\n",
   "dev_url": "https://github.com/ray-project/ray",
   "doc_url": "https://ray.readthedocs.io/",
   "home": "https://github.com/ray-project/ray",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "licenses/abseil-LICENSE.txt",
    "licenses/antirez-redis-COPYING.txt",
    "licenses/arrow-LICENSE.txt",
    "licenses/boost-LICENSE_1_0.txt",
    "licenses/boringssl-LICENSE.txt",
    "licenses/deckarep-golang-set-LICENSE.txt",
    "licenses/flatbuffers-LICENSE.txt",
    "licenses/gabime-spdlog-LICENSE.txt",
    "licenses/gflags-COPYING.txt",
    "licenses/glog-COPYING.txt",
    "licenses/go-logr-LICENSE.txt",
    "licenses/googletest-LICENSE.txt",
    "licenses/grpc-LICENSE.txt",
    "licenses/msgpack-COPYING.txt",
    "licenses/onsi-ginkgo-LICENSE.txt",
    "licenses/onsi-gomega-LICENSE.txt",
    "licenses/opencensus-LICENSE.txt",
    "licenses/opencensus-proto-LICENSE.txt",
    "licenses/prometheus-LICENSE.txt",
    "licenses/redis-hiredis-COPYING.txt",
    "licenses/tporadowski-redis-license.txt",
    "licenses/zlib-LICENSE.txt"
   ],
   "summary": "Ray is a fast and simple framework for building and running distributed applications."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apmorton",
    "timkpaine",
    "dHannasch",
    "h-vetinari",
    "vnlitvinov",
    "krfricke",
    "mattip"
   ]
  },
  "outputs": [
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   }
  ],
  "package": {
   "name": "ray-packages",
   "version": "2.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-patch-redis-for-ar-ranlib.patch",
    "patches/0002-Disable-making-entry-scripts.patch",
    "patches/0003-Ignore-warnings-in-event.cc-and-logging.cc.patch",
    "patches/0004-Remove-all-dependencies-from-setup.py.patch",
    "patches/0005-Vendor-grpc-1.62.2.patch"
   ],
   "sha256": "9eec094e79b34fad48b736205752e7e57b4afff1153780314c91bd8ef5a373fe",
   "url": "https://github.com/ray-project/ray/archive/ray-2.24.0.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "c_stdlib_stub",
    "colorama",
    "curl",
    "cxx_compiler_stub",
    "cython",
    "make",
    "nodejs",
    "patchelf",
    "psutil",
    "python",
    "setproctitle"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgrpc",
    "nodejs",
    "openjdk",
    "packaging",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "aiohttp-cors",
    "aiorwlock",
    "aiosignal",
    "async-timeout",
    "click",
    "colorama",
    "colorful",
    "dm-tree",
    "fastapi",
    "filelock",
    "frozenlist",
    "fsspec",
    "grpcio",
    "gymnasium",
    "jsonschema",
    "lz4",
    "memray",
    "msgpack-python",
    "opencensus",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "pandas",
    "prometheus_client",
    "protobuf",
    "psutil",
    "py-spy",
    "pyarrow",
    "pydantic",
    "python",
    "pyyaml",
    "ray-air",
    "ray-client",
    "ray-core",
    "ray-data",
    "ray-default",
    "ray-rllib",
    "ray-serve",
    "ray-train",
    "ray-tune",
    "requests",
    "rich",
    "scikit-image",
    "scipy",
    "setproctitle",
    "smart_open",
    "starlette",
    "tensorboardx",
    "typer",
    "typing-extensions",
    "uvicorn",
    "virtualenv",
    "watchfiles"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Ray is a fast and simple framework for building and running\ndistributed applications. It is split into ray-core, ray-default,\nray-serve, ray-rllib, ray-client, ray-data, ray-tune,\nray-train, ray-air, ray-observability and ray-all packages.\n",
   "dev_url": "https://github.com/ray-project/ray",
   "doc_url": "https://ray.readthedocs.io/",
   "home": "https://github.com/ray-project/ray",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "licenses/abseil-LICENSE.txt",
    "licenses/antirez-redis-COPYING.txt",
    "licenses/arrow-LICENSE.txt",
    "licenses/boost-LICENSE_1_0.txt",
    "licenses/boringssl-LICENSE.txt",
    "licenses/deckarep-golang-set-LICENSE.txt",
    "licenses/flatbuffers-LICENSE.txt",
    "licenses/gabime-spdlog-LICENSE.txt",
    "licenses/gflags-COPYING.txt",
    "licenses/glog-COPYING.txt",
    "licenses/go-logr-LICENSE.txt",
    "licenses/googletest-LICENSE.txt",
    "licenses/grpc-LICENSE.txt",
    "licenses/msgpack-COPYING.txt",
    "licenses/onsi-ginkgo-LICENSE.txt",
    "licenses/onsi-gomega-LICENSE.txt",
    "licenses/opencensus-LICENSE.txt",
    "licenses/opencensus-proto-LICENSE.txt",
    "licenses/prometheus-LICENSE.txt",
    "licenses/redis-hiredis-COPYING.txt",
    "licenses/tporadowski-redis-license.txt",
    "licenses/zlib-LICENSE.txt"
   ],
   "summary": "Ray is a fast and simple framework for building and running distributed applications."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apmorton",
    "timkpaine",
    "dHannasch",
    "h-vetinari",
    "vnlitvinov",
    "krfricke",
    "mattip"
   ]
  },
  "outputs": [
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "patchelf",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   }
  ],
  "package": {
   "name": "ray-packages",
   "version": "2.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-patch-redis-for-ar-ranlib.patch",
    "patches/0002-Disable-making-entry-scripts.patch",
    "patches/0003-Ignore-warnings-in-event.cc-and-logging.cc.patch",
    "patches/0004-Remove-all-dependencies-from-setup.py.patch",
    "patches/0005-Vendor-grpc-1.62.2.patch"
   ],
   "sha256": "9eec094e79b34fad48b736205752e7e57b4afff1153780314c91bd8ef5a373fe",
   "url": "https://github.com/ray-project/ray/archive/ray-2.24.0.tar.gz"
  }
 },
 "name": "ray-packages",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Ray is a fast and simple framework for building and running\ndistributed applications. It is split into ray-core, ray-default,\nray-serve, ray-rllib, ray-client, ray-data, ray-tune,\nray-train, ray-air, ray-observability and ray-all packages.\n",
   "dev_url": "https://github.com/ray-project/ray",
   "doc_url": "https://ray.readthedocs.io/",
   "home": "https://github.com/ray-project/ray",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "licenses/abseil-LICENSE.txt",
    "licenses/antirez-redis-COPYING.txt",
    "licenses/arrow-LICENSE.txt",
    "licenses/boost-LICENSE_1_0.txt",
    "licenses/boringssl-LICENSE.txt",
    "licenses/deckarep-golang-set-LICENSE.txt",
    "licenses/flatbuffers-LICENSE.txt",
    "licenses/gabime-spdlog-LICENSE.txt",
    "licenses/gflags-COPYING.txt",
    "licenses/glog-COPYING.txt",
    "licenses/go-logr-LICENSE.txt",
    "licenses/googletest-LICENSE.txt",
    "licenses/grpc-LICENSE.txt",
    "licenses/msgpack-COPYING.txt",
    "licenses/onsi-ginkgo-LICENSE.txt",
    "licenses/onsi-gomega-LICENSE.txt",
    "licenses/opencensus-LICENSE.txt",
    "licenses/opencensus-proto-LICENSE.txt",
    "licenses/prometheus-LICENSE.txt",
    "licenses/redis-hiredis-COPYING.txt",
    "licenses/tporadowski-redis-license.txt",
    "licenses/zlib-LICENSE.txt"
   ],
   "summary": "Ray is a fast and simple framework for building and running distributed applications."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apmorton",
    "timkpaine",
    "dHannasch",
    "h-vetinari",
    "vnlitvinov",
    "krfricke",
    "mattip"
   ]
  },
  "outputs": [
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "make",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.sh",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build",
      "mkdir -p $SP_DIR/ray/dashboard/client",
      "cp -R ./build $SP_DIR/ray/dashboard/client/build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "memray",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   }
  ],
  "package": {
   "name": "ray-packages",
   "version": "2.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-patch-redis-for-ar-ranlib.patch",
    "patches/0002-Disable-making-entry-scripts.patch",
    "patches/0003-Ignore-warnings-in-event.cc-and-logging.cc.patch",
    "patches/0004-Remove-all-dependencies-from-setup.py.patch",
    "patches/0005-Vendor-grpc-1.62.2.patch"
   ],
   "sha256": "9eec094e79b34fad48b736205752e7e57b4afff1153780314c91bd8ef5a373fe",
   "url": "https://github.com/ray-project/ray/archive/ray-2.24.0.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "c_stdlib_stub",
    "colorama",
    "curl",
    "cxx_compiler_stub",
    "cython",
    "make",
    "nodejs",
    "psutil",
    "python",
    "setproctitle"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgrpc",
    "nodejs",
    "openjdk",
    "packaging",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "aiohttp-cors",
    "aiorwlock",
    "aiosignal",
    "async-timeout",
    "click",
    "colorama",
    "colorful",
    "dm-tree",
    "fastapi",
    "filelock",
    "frozenlist",
    "fsspec",
    "grpcio",
    "gymnasium",
    "jsonschema",
    "lz4",
    "memray",
    "msgpack-python",
    "opencensus",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "pandas",
    "prometheus_client",
    "protobuf",
    "psutil",
    "py-spy",
    "pyarrow",
    "pydantic",
    "python",
    "pyyaml",
    "ray-air",
    "ray-client",
    "ray-core",
    "ray-data",
    "ray-default",
    "ray-rllib",
    "ray-serve",
    "ray-train",
    "ray-tune",
    "requests",
    "rich",
    "scikit-image",
    "scipy",
    "setproctitle",
    "smart_open",
    "starlette",
    "tensorboardx",
    "typer",
    "typing-extensions",
    "uvicorn",
    "virtualenv",
    "watchfiles"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ray-air",
   "ray-all",
   "ray-client",
   "ray-core",
   "ray-data",
   "ray-default",
   "ray-observability",
   "ray-rllib",
   "ray-serve",
   "ray-train",
   "ray-tune"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/ray-packages.json"
 },
 "raw_meta_yaml": "{% set version = \"2.24.0\" %}\n\npackage:\n  name: ray-packages\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ray-project/ray/archive/ray-{{ version }}.tar.gz\n  sha256: 9eec094e79b34fad48b736205752e7e57b4afff1153780314c91bd8ef5a373fe\n  patches:\n    - patches/0001-patch-redis-for-ar-ranlib.patch\n    - patches/0002-Disable-making-entry-scripts.patch\n    - patches/0003-Ignore-warnings-in-event.cc-and-logging.cc.patch\n    - patches/0004-Remove-all-dependencies-from-setup.py.patch\n    # Keep in sync with current or active migration of libgrpc to avoid\n    # ABI breakage\n    - patches/0005-Vendor-grpc-1.62.2.patch\n\nbuild:\n  number: 1\n  skip: true  # [py in (312, 38)]\n\n# Need these up here for conda-smithy to handle them properly.\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n\noutputs:\n  - name: ray-all\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-air', exact=True) }}\n        - {{ pin_subpackage('ray-default', exact=True) }}\n        - {{ pin_subpackage('ray-client', exact=True) }}\n        - {{ pin_subpackage('ray-data', exact=True) }}\n        - {{ pin_subpackage('ray-rllib', exact=True) }}\n        - {{ pin_subpackage('ray-serve', exact=True) }}\n        - {{ pin_subpackage('ray-train', exact=True) }}\n        - {{ pin_subpackage('ray-tune', exact=True) }}\n    test:\n      imports:\n        # dummy test; actual tests are in subpackages\n        - ray\n\n  - name: ray-core\n    script: build-core.sh  # [not win]\n    script: build-core.bat  # [win]\n    build:\n      entry_points:\n        - ray = ray.scripts.scripts:main\n      skip: true  # [py>311]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        - bazel 6.*\n        - patchelf  # [linux]\n        - colorama\n        - curl\n        - cython >=0.29.32\n        - git =2.33  # [win]\n        - libxcrypt  # [linux and py<39]\n        - make\n        - m2-bash  # [win]\n        - psutil\n        - python\n        - setproctitle >=1.2.2,<1.4\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - packaging\n        - libgrpc\n        - openjdk =11\n      run:\n        - python\n        - aiosignal\n        - click >=7.0\n        - colorama\n        - filelock\n        - frozenlist\n        - jsonschema\n        - msgpack-python >=1.0.0,<2.0.0\n        - packaging\n        - protobuf >=3.15.3,!=3.19.5\n        - psutil\n        - pyyaml\n        - requests\n        - setproctitle >=1.2.2,<1.4\n      run_constrained:\n\n    test:\n      imports:\n        - ray\n        - ray._raylet\n        - ray.actor\n        - ray.runtime_context\n        - ray._private.state\n        - ray._private.worker\n      commands:\n        - python -c \"import ray; ray.init(include_dashboard=False)\"\n        - ray --help\n\n  # the various ray[extra] installs, alphabetically\n  - name: ray-air\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-data', exact=True) }}\n        - {{ pin_subpackage('ray-serve', exact=True) }}\n        - {{ pin_subpackage('ray-train', exact=True) }}\n        - {{ pin_subpackage('ray-tune', exact=True) }}\n    test:\n      imports:\n        - ray.air\n\n  - name: ray-data\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-core', exact=True) }}\n        # https://github.com/ray-project/ray/issues/42956\n        - pandas >=1.3,<2.2\n        - pyarrow >=6.0.1\n        - fsspec\n    test:\n      imports:\n        - ray.data\n\n  - name: ray-default\n    build:\n      script:\n        - cd python/ray/dashboard/client\n        - npm install\n        - npm ci\n        - npm run build\n        # not sure why this seems to get copied on windows but not linux...\n        - mkdir -p $SP_DIR/ray/dashboard/client             # [not win]\n        - cp -R ./build $SP_DIR/ray/dashboard/client/build  # [not win]\n    requirements:\n      build:\n        - nodejs\n      host:\n        - nodejs\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-core', exact=True) }}\n        - aiohttp >=3.7\n        - aiohttp-cors\n        - async-timeout\n        - colorful\n        - grpcio\n        - memray  # [not win]\n        - opencensus\n        - prometheus_client >=0.7.1\n        - py-spy >=0.2.0\n        - pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3\n        - requests\n        - smart_open\n        - typing-extensions\n        - virtualenv >=20.0.24,<20.21.1\n\n    test:\n      imports:\n        - ray\n        - ray.dashboard\n      commands:\n        - python -c \"import ray; ray.init(include_dashboard=True)\"\n\n  - name: ray-client\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-core', exact=True) }}\n        - grpcio\n    test:\n      imports:\n        - ray\n      commands:\n        - ray start --head\n        - python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"\n        - ray stop\n\n  - name: ray-rllib\n    build:\n      entry_points:\n        - rllib = ray.rllib.scripts:cli\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-tune', exact=True) }}\n        - dm-tree\n        - gymnasium ==0.28.1\n        - lz4\n        - pyyaml\n        - scikit-image\n        - scipy\n        - typer\n        - rich\n    test:\n      imports:\n        - ray.rllib\n      commands:\n        # some interaction with rich and the test runner in azure\n        # xref https://github.com/Textualize/rich/issues/2411 ?\n        - python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\"\n\n  - name: ray-serve\n    build:\n      entry_points:\n        - serve = ray.serve.scripts:cli\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-default', exact=True) }}\n        - aiorwlock\n        - fastapi\n        - requests\n        - starlette\n        - uvicorn\n        - watchfiles\n    test:\n      imports:\n        - ray.serve\n\n  - name: ray-tune\n    build:\n      entry_points:\n        - tune = ray.tune.scripts:cli\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-default', exact=True) }}\n        - fsspec\n        - pandas\n        - pyarrow >=6.0.1\n        - requests\n        - tensorboardX >=1.9\n    test:\n      imports:\n        - ray.tune\n\n  - name: ray-train\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-tune', exact=True) }}\n    test:\n      imports:\n        - ray.train\n\n  - name: ray-observability\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ pin_subpackage('ray-default', exact=True) }}\n        - opentelemetry-api\n        - opentelemetry-sdk\n        - opentelemetry-exporter-otlp\n    test:\n      commands:\n        - echo \"no tests for ray-observability, it is a convenience bundle\"\n\n\nabout:\n  home: https://github.com/ray-project/ray\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - licenses/abseil-LICENSE.txt\n    - licenses/antirez-redis-COPYING.txt\n    - licenses/arrow-LICENSE.txt\n    - licenses/boost-LICENSE_1_0.txt\n    - licenses/boringssl-LICENSE.txt\n    - licenses/deckarep-golang-set-LICENSE.txt\n    - licenses/flatbuffers-LICENSE.txt\n    - licenses/gabime-spdlog-LICENSE.txt\n    - licenses/gflags-COPYING.txt\n    - licenses/glog-COPYING.txt\n    - licenses/go-logr-LICENSE.txt\n    - licenses/googletest-LICENSE.txt\n    - licenses/grpc-LICENSE.txt\n    - licenses/msgpack-COPYING.txt\n    - licenses/onsi-ginkgo-LICENSE.txt\n    - licenses/onsi-gomega-LICENSE.txt\n    - licenses/opencensus-LICENSE.txt\n    - licenses/opencensus-proto-LICENSE.txt\n    - licenses/prometheus-LICENSE.txt\n    - licenses/redis-hiredis-COPYING.txt\n    - licenses/tporadowski-redis-license.txt\n    - licenses/zlib-LICENSE.txt\n  summary: Ray is a fast and simple framework for building and running distributed applications.\n  description: |\n    Ray is a fast and simple framework for building and running\n    distributed applications. It is split into ray-core, ray-default,\n    ray-serve, ray-rllib, ray-client, ray-data, ray-tune,\n    ray-train, ray-air, ray-observability and ray-all packages.\n  doc_url: https://ray.readthedocs.io/\n  dev_url: https://github.com/ray-project/ray\n\nextra:\n  recipe-maintainers:\n    - apmorton\n    - timkpaine\n    - dHannasch\n    - h-vetinari\n    - vnlitvinov\n    - krfricke\n    - mattip\n",
 "req": {
  "__set__": true,
  "elements": [
   "aiohttp",
   "aiohttp-cors",
   "aiorwlock",
   "aiosignal",
   "async-timeout",
   "bazel",
   "c_compiler_stub",
   "c_stdlib_stub",
   "click",
   "colorama",
   "colorful",
   "curl",
   "cxx_compiler_stub",
   "cython",
   "dm-tree",
   "fastapi",
   "filelock",
   "frozenlist",
   "fsspec",
   "git",
   "grpcio",
   "gymnasium",
   "jsonschema",
   "libgrpc",
   "lz4",
   "m2-bash",
   "make",
   "memray",
   "msgpack-python",
   "nodejs",
   "opencensus",
   "openjdk",
   "opentelemetry-api",
   "opentelemetry-exporter-otlp",
   "opentelemetry-sdk",
   "packaging",
   "pandas",
   "patchelf",
   "pip",
   "prometheus_client",
   "protobuf",
   "psutil",
   "py-spy",
   "pyarrow",
   "pydantic",
   "python",
   "pyyaml",
   "ray-air",
   "ray-client",
   "ray-core",
   "ray-data",
   "ray-default",
   "ray-rllib",
   "ray-serve",
   "ray-train",
   "ray-tune",
   "requests",
   "rich",
   "scikit-image",
   "scipy",
   "setproctitle",
   "smart_open",
   "starlette",
   "tensorboardx",
   "typer",
   "typing-extensions",
   "uvicorn",
   "virtualenv",
   "watchfiles"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "c_stdlib_stub",
    "colorama",
    "curl",
    "cxx_compiler_stub",
    "cython",
    "git",
    "m2-bash",
    "make",
    "nodejs",
    "patchelf",
    "psutil",
    "python",
    "setproctitle"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "libgrpc",
    "nodejs",
    "openjdk",
    "packaging",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "aiohttp-cors",
    "aiorwlock",
    "aiosignal",
    "async-timeout",
    "c_compiler_stub",
    "c_stdlib_stub",
    "click",
    "colorama",
    "colorful",
    "cxx_compiler_stub",
    "dm-tree",
    "fastapi",
    "filelock",
    "frozenlist",
    "fsspec",
    "grpcio",
    "gymnasium",
    "jsonschema",
    "lz4",
    "memray",
    "msgpack-python",
    "opencensus",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "pandas",
    "prometheus_client",
    "protobuf",
    "psutil",
    "py-spy",
    "pyarrow",
    "pydantic",
    "python",
    "pyyaml",
    "ray-air",
    "ray-client",
    "ray-core",
    "ray-data",
    "ray-default",
    "ray-rllib",
    "ray-serve",
    "ray-train",
    "ray-tune",
    "requests",
    "rich",
    "scikit-image",
    "scipy",
    "setproctitle",
    "smart_open",
    "starlette",
    "tensorboardx",
    "typer",
    "typing-extensions",
    "uvicorn",
    "virtualenv",
    "watchfiles"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel 6.*",
    "c_compiler_stub",
    "c_stdlib_stub",
    "colorama",
    "curl",
    "cxx_compiler_stub",
    "cython >=0.29.32",
    "git =2.33",
    "m2-bash",
    "make",
    "nodejs",
    "patchelf",
    "psutil",
    "python",
    "setproctitle >=1.2.2,<1.4"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgrpc",
    "nodejs",
    "openjdk =11",
    "packaging",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp >=3.7",
    "aiohttp-cors",
    "aiorwlock",
    "aiosignal",
    "async-timeout",
    "click >=7.0",
    "colorama",
    "colorful",
    "dm-tree",
    "fastapi",
    "filelock",
    "frozenlist",
    "fsspec",
    "grpcio",
    "gymnasium ==0.28.1",
    "jsonschema",
    "lz4",
    "memray",
    "msgpack-python >=1.0.0,<2.0.0",
    "opencensus",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "pandas",
    "pandas >=1.3,<2.2",
    "prometheus_client >=0.7.1",
    "protobuf >=3.15.3,!=3.19.5",
    "psutil",
    "py-spy >=0.2.0",
    "pyarrow >=6.0.1",
    "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
    "python",
    "pyyaml",
    "ray-air",
    "ray-client",
    "ray-core",
    "ray-data",
    "ray-default",
    "ray-rllib",
    "ray-serve",
    "ray-train",
    "ray-tune",
    "requests",
    "rich",
    "scikit-image",
    "scipy",
    "setproctitle >=1.2.2,<1.4",
    "smart_open",
    "starlette",
    "tensorboardX >=1.9",
    "typer",
    "typing-extensions",
    "uvicorn",
    "virtualenv >=20.0.24,<20.21.1",
    "watchfiles"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/ray-project/ray/archive/ray-2.24.0.tar.gz",
 "version": "2.24.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/ray-packages.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Ray is a fast and simple framework for building and running\ndistributed applications. It is split into ray-core, ray-default,\nray-serve, ray-rllib, ray-client, ray-data, ray-tune,\nray-train, ray-air, ray-observability and ray-all packages.\n",
   "dev_url": "https://github.com/ray-project/ray",
   "doc_url": "https://ray.readthedocs.io/",
   "home": "https://github.com/ray-project/ray",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "licenses/abseil-LICENSE.txt",
    "licenses/antirez-redis-COPYING.txt",
    "licenses/arrow-LICENSE.txt",
    "licenses/boost-LICENSE_1_0.txt",
    "licenses/boringssl-LICENSE.txt",
    "licenses/deckarep-golang-set-LICENSE.txt",
    "licenses/flatbuffers-LICENSE.txt",
    "licenses/gabime-spdlog-LICENSE.txt",
    "licenses/gflags-COPYING.txt",
    "licenses/glog-COPYING.txt",
    "licenses/go-logr-LICENSE.txt",
    "licenses/googletest-LICENSE.txt",
    "licenses/grpc-LICENSE.txt",
    "licenses/msgpack-COPYING.txt",
    "licenses/onsi-ginkgo-LICENSE.txt",
    "licenses/onsi-gomega-LICENSE.txt",
    "licenses/opencensus-LICENSE.txt",
    "licenses/opencensus-proto-LICENSE.txt",
    "licenses/prometheus-LICENSE.txt",
    "licenses/redis-hiredis-COPYING.txt",
    "licenses/tporadowski-redis-license.txt",
    "licenses/zlib-LICENSE.txt"
   ],
   "summary": "Ray is a fast and simple framework for building and running distributed applications."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "apmorton",
    "timkpaine",
    "dHannasch",
    "h-vetinari",
    "vnlitvinov",
    "krfricke",
    "mattip"
   ]
  },
  "outputs": [
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   },
   {
    "name": "ray-all",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-air",
      "ray-default",
      "ray-client",
      "ray-data",
      "ray-rllib",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "ray = ray.scripts.scripts:main"
     ]
    },
    "name": "ray-core",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "bazel 6.*",
      "colorama",
      "curl",
      "cython >=0.29.32",
      "git =2.33",
      "make",
      "m2-bash",
      "psutil",
      "python",
      "setproctitle >=1.2.2,<1.4"
     ],
     "host": [
      "python",
      "pip",
      "packaging",
      "libgrpc",
      "openjdk =11"
     ],
     "run": [
      "python",
      "aiosignal",
      "click >=7.0",
      "colorama",
      "filelock",
      "frozenlist",
      "jsonschema",
      "msgpack-python >=1.0.0,<2.0.0",
      "packaging",
      "protobuf >=3.15.3,!=3.19.5",
      "psutil",
      "pyyaml",
      "requests",
      "setproctitle >=1.2.2,<1.4"
     ],
     "run_constrained": null
    },
    "script": "build-core.bat",
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=False)\"",
      "ray --help"
     ],
     "imports": [
      "ray",
      "ray._raylet",
      "ray.actor",
      "ray.runtime_context",
      "ray._private.state",
      "ray._private.worker"
     ]
    }
   },
   {
    "name": "ray-air",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-data",
      "ray-serve",
      "ray-train",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.air"
     ]
    }
   },
   {
    "name": "ray-data",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "pandas >=1.3,<2.2",
      "pyarrow >=6.0.1",
      "fsspec"
     ]
    },
    "test": {
     "imports": [
      "ray.data"
     ]
    }
   },
   {
    "build": {
     "script": [
      "cd python/ray/dashboard/client",
      "npm install",
      "npm ci",
      "npm run build"
     ]
    },
    "name": "ray-default",
    "requirements": {
     "build": [
      "nodejs"
     ],
     "host": [
      "nodejs",
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "aiohttp >=3.7",
      "aiohttp-cors",
      "async-timeout",
      "colorful",
      "grpcio",
      "opencensus",
      "prometheus_client >=0.7.1",
      "py-spy >=0.2.0",
      "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
      "requests",
      "smart_open",
      "typing-extensions",
      "virtualenv >=20.0.24,<20.21.1"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import ray; ray.init(include_dashboard=True)\""
     ],
     "imports": [
      "ray",
      "ray.dashboard"
     ]
    }
   },
   {
    "name": "ray-client",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-core",
      "grpcio"
     ]
    },
    "test": {
     "commands": [
      "ray start --head",
      "python -c \"import ray; ray.init('ray://127.0.0.1:10001')\"",
      "ray stop"
     ],
     "imports": [
      "ray"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "rllib = ray.rllib.scripts:cli"
     ]
    },
    "name": "ray-rllib",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune",
      "dm-tree",
      "gymnasium ==0.28.1",
      "lz4",
      "pyyaml",
      "scikit-image",
      "scipy",
      "typer",
      "rich"
     ]
    },
    "test": {
     "commands": [
      "python -c \"import subprocess, os; os.environ['PYTHONIOENCODING']='utf-8'; subprocess.run(['rllib', '--help'], capture_output=True, check=True)\""
     ],
     "imports": [
      "ray.rllib"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "serve = ray.serve.scripts:cli"
     ]
    },
    "name": "ray-serve",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "aiorwlock",
      "fastapi",
      "requests",
      "starlette",
      "uvicorn",
      "watchfiles"
     ]
    },
    "test": {
     "imports": [
      "ray.serve"
     ]
    }
   },
   {
    "build": {
     "entry_points": [
      "tune = ray.tune.scripts:cli"
     ]
    },
    "name": "ray-tune",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "fsspec",
      "pandas",
      "pyarrow >=6.0.1",
      "requests",
      "tensorboardX >=1.9"
     ]
    },
    "test": {
     "imports": [
      "ray.tune"
     ]
    }
   },
   {
    "name": "ray-train",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-tune"
     ]
    },
    "test": {
     "imports": [
      "ray.train"
     ]
    }
   },
   {
    "name": "ray-observability",
    "requirements": {
     "host": [
      "python"
     ],
     "run": [
      "python",
      "ray-default",
      "opentelemetry-api",
      "opentelemetry-sdk",
      "opentelemetry-exporter-otlp"
     ]
    },
    "test": {
     "commands": [
      "echo \"no tests for ray-observability, it is a convenience bundle\""
     ]
    }
   }
  ],
  "package": {
   "name": "ray-packages",
   "version": "2.24.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-patch-redis-for-ar-ranlib.patch",
    "patches/0002-Disable-making-entry-scripts.patch",
    "patches/0003-Ignore-warnings-in-event.cc-and-logging.cc.patch",
    "patches/0004-Remove-all-dependencies-from-setup.py.patch",
    "patches/0005-Vendor-grpc-1.62.2.patch"
   ],
   "sha256": "9eec094e79b34fad48b736205752e7e57b4afff1153780314c91bd8ef5a373fe",
   "url": "https://github.com/ray-project/ray/archive/ray-2.24.0.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "bazel",
    "c_compiler_stub",
    "c_stdlib_stub",
    "colorama",
    "curl",
    "cxx_compiler_stub",
    "cython",
    "git",
    "m2-bash",
    "make",
    "nodejs",
    "psutil",
    "python",
    "setproctitle"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libgrpc",
    "nodejs",
    "openjdk",
    "packaging",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "aiohttp",
    "aiohttp-cors",
    "aiorwlock",
    "aiosignal",
    "async-timeout",
    "click",
    "colorama",
    "colorful",
    "dm-tree",
    "fastapi",
    "filelock",
    "frozenlist",
    "fsspec",
    "grpcio",
    "gymnasium",
    "jsonschema",
    "lz4",
    "msgpack-python",
    "opencensus",
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-sdk",
    "packaging",
    "pandas",
    "prometheus_client",
    "protobuf",
    "psutil",
    "py-spy",
    "pyarrow",
    "pydantic",
    "python",
    "pyyaml",
    "ray-air",
    "ray-client",
    "ray-core",
    "ray-data",
    "ray-default",
    "ray-rllib",
    "ray-serve",
    "ray-train",
    "ray-tune",
    "requests",
    "rich",
    "scikit-image",
    "scipy",
    "setproctitle",
    "smart_open",
    "starlette",
    "tensorboardx",
    "typer",
    "typing-extensions",
    "uvicorn",
    "virtualenv",
    "watchfiles"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}