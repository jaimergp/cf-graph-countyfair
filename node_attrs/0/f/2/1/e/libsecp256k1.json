{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "libsecp256k1",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This library is intended to be the highest quality publicly available\nlibrary for cryptography on the secp256k1 curve. However, the primary\nfocus of its development has been for usage in the Bitcoin system and\nusage unlike Bitcoin's may be less well tested, verified, or suffer\nfrom a less well thought out interface. Correct usage requires some\ncare and consideration that the library is fit for your application's purpose.\n",
   "home": "https://github.com/bitcoin-core/secp256k1",
   "license": "MIT",
   "license_file": [
    "COPYING"
   ],
   "summary": "Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "libsecp256k1",
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "include/secp256k1*",
     "lib/libsecp256k1.so",
     "lib/pkgconfig/libsecp256k1.pc",
     "lib/cmake/libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/secp256k1.h",
      "test -f ${PREFIX}/include/secp256k1_preallocated.h",
      "test -f ${PREFIX}/include/secp256k1_ecdh.h",
      "test -f ${PREFIX}/include/secp256k1_recovery.h",
      "test -f ${PREFIX}/include/secp256k1_extrakeys.h",
      "test -f ${PREFIX}/include/secp256k1_schnorrsig.h",
      "test -f ${PREFIX}/include/secp256k1_ellswift.h",
      "test -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/pkgconfig/libsecp256k1.pc",
      "pkg-config --cflags --libs libsecp256k1",
      "test -f ${PREFIX}/lib/cmake/libsecp256k1/libsecp256k1-config.cmake",
      "cd shared_standalone_tests/src",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON ${CMAKE_ARGS} .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ../..",
      "rm -rf shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "lib/libsecp256k1.so.2",
     "lib/libsecp256k1.so.2.1.1"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "test ! -f ${PREFIX}/include/libsecp256k1.h",
      "test ! -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libsecp256k1.so.2",
      "test -f ${PREFIX}/lib/libsecp256k1.so.2.1.1"
     ]
    }
   }
  ],
  "package": {
   "name": "libsecp256k1-split",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001_conda_relocatable.patch"
   ],
   "sha256": "31b1a03c7365dbce7aff4be9526243da966c58a8b88b6255556d51b3016492c5",
   "url": "https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.4.1.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This library is intended to be the highest quality publicly available\nlibrary for cryptography on the secp256k1 curve. However, the primary\nfocus of its development has been for usage in the Bitcoin system and\nusage unlike Bitcoin's may be less well tested, verified, or suffer\nfrom a less well thought out interface. Correct usage requires some\ncare and consideration that the library is fit for your application's purpose.\n",
   "home": "https://github.com/bitcoin-core/secp256k1",
   "license": "MIT",
   "license_file": [
    "COPYING",
    "COPYING",
    "COPYING"
   ],
   "summary": "Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "libsecp256k1",
   "recipe-maintainers": [
    "MementoRC",
    "MementoRC",
    "MementoRC"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "include/secp256k1*",
     "lib/libsecp256k1.so",
     "lib/pkgconfig/libsecp256k1.pc",
     "lib/cmake/libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/secp256k1.h",
      "test -f ${PREFIX}/include/secp256k1_preallocated.h",
      "test -f ${PREFIX}/include/secp256k1_ecdh.h",
      "test -f ${PREFIX}/include/secp256k1_recovery.h",
      "test -f ${PREFIX}/include/secp256k1_extrakeys.h",
      "test -f ${PREFIX}/include/secp256k1_schnorrsig.h",
      "test -f ${PREFIX}/include/secp256k1_ellswift.h",
      "test -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/pkgconfig/libsecp256k1.pc",
      "pkg-config --cflags --libs libsecp256k1",
      "test -f ${PREFIX}/lib/cmake/libsecp256k1/libsecp256k1-config.cmake",
      "cd shared_standalone_tests/src",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON ${CMAKE_ARGS} .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ../..",
      "rm -rf shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "lib/libsecp256k1.so.2",
     "lib/libsecp256k1.so.2.1.1"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "test ! -f ${PREFIX}/include/libsecp256k1.h",
      "test ! -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libsecp256k1.so.2",
      "test -f ${PREFIX}/lib/libsecp256k1.so.2.1.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "include/secp256k1*",
     "lib/libsecp256k1.dylib",
     "lib/pkgconfig/libsecp256k1.pc",
     "lib/cmake/libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/secp256k1.h",
      "test -f ${PREFIX}/include/secp256k1_preallocated.h",
      "test -f ${PREFIX}/include/secp256k1_ecdh.h",
      "test -f ${PREFIX}/include/secp256k1_recovery.h",
      "test -f ${PREFIX}/include/secp256k1_extrakeys.h",
      "test -f ${PREFIX}/include/secp256k1_schnorrsig.h",
      "test -f ${PREFIX}/include/secp256k1_ellswift.h",
      "test -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/pkgconfig/libsecp256k1.pc",
      "pkg-config --cflags --libs libsecp256k1",
      "test -f ${PREFIX}/lib/cmake/libsecp256k1/libsecp256k1-config.cmake",
      "cd shared_standalone_tests/src",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON ${CMAKE_ARGS} .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ../..",
      "rm -rf shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "lib/libsecp256k1.2.dylib"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "test ! -f ${PREFIX}/include/libsecp256k1.h",
      "test ! -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libsecp256k1.2.dylib"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "Library\\\\include\\\\secp256k1*",
     "Library\\\\lib\\\\libsecp256k1.lib",
     "Library\\\\lib\\\\pkgconfig\\\\libsecp256k1.pc",
     "Library\\\\lib\\\\cmake\\\\libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\secp256k1.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_preallocated.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_ecdh.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_recovery.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_extrakeys.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_schnorrsig.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_ellswift.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\libsecp256k1.lib exit 1",
      "if not exist %LIBRARY_BIN%\\\\libsecp256k1-2.dll exit 1",
      "if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\libsecp256k1.pc exit 1",
      "pkg-config --cflags --libs libsecp256k1",
      "if not exist %LIBRARY_LIB%\\\\cmake\\\\libsecp256k1\\\\libsecp256k1-config.cmake exit 1",
      "cd shared_standalone_tests\\\\src && dir",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON %CMAKE_ARGS% .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ..\\\\..",
      "rmdir /s /q shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "Library\\\\bin\\\\libsecp256k1-2.dll"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_INC%\\\\libsecp256k1.h exit 1",
      "if exist %LIBRARY_LIB%\\\\libsecp256k1.lib exit 1",
      "if not exist %LIBRARY_BIN%\\\\libsecp256k1-2.dll exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "libsecp256k1-split",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make",
    "c_compiler_stub",
    "cmake >=3.26",
    "make",
    "c_compiler_stub",
    "cmake >=3.26",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001_conda_relocatable.patch",
    "0001_conda_relocatable.patch",
    "0001_conda_relocatable.patch"
   ],
   "sha256": "31b1a03c7365dbce7aff4be9526243da966c58a8b88b6255556d51b3016492c5",
   "url": "https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.4.1.tar.gz"
  }
 },
 "name": "libsecp256k1-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "This library is intended to be the highest quality publicly available\nlibrary for cryptography on the secp256k1 curve. However, the primary\nfocus of its development has been for usage in the Bitcoin system and\nusage unlike Bitcoin's may be less well tested, verified, or suffer\nfrom a less well thought out interface. Correct usage requires some\ncare and consideration that the library is fit for your application's purpose.\n",
   "home": "https://github.com/bitcoin-core/secp256k1",
   "license": "MIT",
   "license_file": [
    "COPYING"
   ],
   "summary": "Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "libsecp256k1",
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "include/secp256k1*",
     "lib/libsecp256k1.dylib",
     "lib/pkgconfig/libsecp256k1.pc",
     "lib/cmake/libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "test -f ${PREFIX}/include/secp256k1.h",
      "test -f ${PREFIX}/include/secp256k1_preallocated.h",
      "test -f ${PREFIX}/include/secp256k1_ecdh.h",
      "test -f ${PREFIX}/include/secp256k1_recovery.h",
      "test -f ${PREFIX}/include/secp256k1_extrakeys.h",
      "test -f ${PREFIX}/include/secp256k1_schnorrsig.h",
      "test -f ${PREFIX}/include/secp256k1_ellswift.h",
      "test -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/pkgconfig/libsecp256k1.pc",
      "pkg-config --cflags --libs libsecp256k1",
      "test -f ${PREFIX}/lib/cmake/libsecp256k1/libsecp256k1-config.cmake",
      "cd shared_standalone_tests/src",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON ${CMAKE_ARGS} .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ../..",
      "rm -rf shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "lib/libsecp256k1.2.dylib"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "test ! -f ${PREFIX}/include/libsecp256k1.h",
      "test ! -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}",
      "test -f ${PREFIX}/lib/libsecp256k1.2.dylib"
     ]
    }
   }
  ],
  "package": {
   "name": "libsecp256k1-split",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001_conda_relocatable.patch"
   ],
   "sha256": "31b1a03c7365dbce7aff4be9526243da966c58a8b88b6255556d51b3016492c5",
   "url": "https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.4.1.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libsecp256k1",
   "libsecp256k1-2"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/libsecp256k1.json"
 },
 "raw_meta_yaml": "{% set name = \"libsecp256k1\" %}\n{% set headers = [\n      \"secp256k1.h\",\n      \"secp256k1_preallocated.h\",\n      \"secp256k1_ecdh.h\",\n      \"secp256k1_recovery.h\",\n      \"secp256k1_extrakeys.h\",\n      \"secp256k1_schnorrsig.h\",\n      \"secp256k1_ellswift.h\"] %}\n{% set version = \"0.4.1\" %}\n# Look in the CMakeLists.txt for the updated library version (not the same as\n# the project version). Upstream does some strange math to convert lib_version\n# to so_version.\n{% set so_version = \"2.1.1\" %}\n{% set so_major_version = so_version.split('.')[0] %}\n\npackage:\n  name: libsecp256k1-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 31b1a03c7365dbce7aff4be9526243da966c58a8b88b6255556d51b3016492c5\n  patches:\n    # Use the /opt/anaconda1anaconda2anaconda3 prefix for the conda build relocatable\n    # https://docs.conda.io/projects/conda-build/en/stable/resources/make-relocatable.html\n    - 0001_conda_relocatable.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake >=3.26\n    - make\n\noutputs:\n\n  - name: libsecp256k1\n    build:\n      run_exports:\n        - {{ pin_subpackage('libsecp256k1-' ~ so_major_version) }}\n    files:\n      - include/secp256k1*             # [unix]\n      - Library\\\\include\\\\secp256k1*   # [win]\n      - lib/{{ name }}.so              # [linux]\n      - lib/{{ name }}.dylib           # [osx]\n      - Library\\\\lib\\\\{{ name }}.lib   # [win]\n      - lib/pkgconfig/{{ name }}.pc             # [unix]\n      - Library\\\\lib\\\\pkgconfig\\\\{{ name }}.pc  # [win]\n      - lib/cmake/{{ name }}              # [unix]\n      - Library\\\\lib\\\\cmake\\\\{{ name }}   # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n      host:\n        - {{ pin_subpackage('libsecp256k1-' ~ so_major_version, exact=True) }}\n      run:\n        - {{ pin_subpackage('libsecp256k1-' ~ so_major_version, exact=True) }}\n    test:\n      requires:\n        - {{ compiler('c') }}\n        - make\n        - cmake >=3.26\n        - pkg-config\n      files:\n        - shared_standalone_tests/\n      commands:\n        # Headers\n        {% for header in headers %}\n        - test -f ${PREFIX}/include/{{ header }}  # [unix]\n        - if not exist %LIBRARY_INC%\\\\{{ header }} exit 1  # [win]\n        {% endfor %}\n\n        # Shared libraries\n        - test -f ${PREFIX}/lib/{{ name }}${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_LIB%\\\\{{ name }}.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\\\{{ name }}-{{ so_major_version }}.dll exit 1  # [win]\n\n        # pkg-config files for shared libraries\n        - test -f ${PREFIX}/lib/pkgconfig/{{ name }}.pc  # [unix]\n        - if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\{{ name }}.pc exit 1  # [win]\n        - pkg-config --cflags --libs {{ name }}\n\n        # cmake files for shared libraries\n        - if not exist %LIBRARY_LIB%\\\\cmake\\\\{{ name }}\\\\{{ name }}-config.cmake exit 1  # [win]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [unix]\n\n        # CMake test\n        - cd shared_standalone_tests/src  # [unix]\n        - cd shared_standalone_tests\\\\src && dir  # [win]\n\n        - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON ${CMAKE_ARGS} .   # [unix]\n        - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON %CMAKE_ARGS% .  # [win]\n        - cmake --build .\n        - cmake --build . --target check\n        - cmake --build . --target clean\n\n        - cd ../..  # [unix]\n        - cd ..\\\\..  # [win]\n        - rm -rf shared_standalone_tests  # [unix]\n        - rmdir /s /q shared_standalone_tests  # [win]\n      downstreams:\n        - libsecp256k1-py-bindings\n        - coincurve\n\n  - name: libsecp256k1-{{ so_major_version }}\n    build:\n      run_exports:\n        - {{ pin_subpackage('libsecp256k1-' ~ so_major_version) }}\n    files:\n      - lib/libsecp256k1.so.{{ so_major_version }}                 # [linux]\n      - lib/libsecp256k1.so.{{ so_version }}                       # [linux]\n      - lib/libsecp256k1.{{ so_major_version }}.dylib              # [osx]\n      - Library\\\\bin\\\\{{ name }}-{{ so_major_version }}.dll   # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n    test:\n      commands:\n        - test ! -f ${PREFIX}/include/libsecp256k1.h         # [unix]\n        - if exist %LIBRARY_INC%\\\\libsecp256k1.h exit 1      # [win]\n        - test ! -f ${PREFIX}/lib/libsecp256k1${SHLIB_EXT}   # [unix]\n        - if exist %LIBRARY_LIB%\\\\libsecp256k1.lib exit 1    # [win]\n        - test -f ${PREFIX}/lib/libsecp256k1.so.{{ so_major_version }}           # [linux]\n        - test -f ${PREFIX}/lib/libsecp256k1.so.{{ so_version }}                 # [linux]\n        - test -f ${PREFIX}/lib/libsecp256k1.{{ so_major_version }}.dylib        # [osx]\n        - if not exist %LIBRARY_BIN%\\\\{{ name }}-{{ so_major_version }}.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/bitcoin-core/secp256k1\n  summary: 'Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1.'\n  description: |\n    This library is intended to be the highest quality publicly available\n    library for cryptography on the secp256k1 curve. However, the primary\n    focus of its development has been for usage in the Bitcoin system and\n    usage unlike Bitcoin's may be less well tested, verified, or suffer\n    from a less well thought out interface. Correct usage requires some\n    care and consideration that the library is fit for your application's purpose.\n  license: MIT\n  license_file:\n    - COPYING\n\nextra:\n  recipe-maintainers:\n    - MementoRC\n  feedstock-name: libsecp256k1\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "libsecp256k1-2",
   "make"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libsecp256k1-2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "libsecp256k1-2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make",
    "pkg-config"
   ]
  }
 },
 "url": "https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.4.1.tar.gz",
 "version": "0.4.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/libsecp256k1.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "This library is intended to be the highest quality publicly available\nlibrary for cryptography on the secp256k1 curve. However, the primary\nfocus of its development has been for usage in the Bitcoin system and\nusage unlike Bitcoin's may be less well tested, verified, or suffer\nfrom a less well thought out interface. Correct usage requires some\ncare and consideration that the library is fit for your application's purpose.\n",
   "home": "https://github.com/bitcoin-core/secp256k1",
   "license": "MIT",
   "license_file": [
    "COPYING"
   ],
   "summary": "Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1."
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "libsecp256k1",
   "recipe-maintainers": [
    "MementoRC"
   ]
  },
  "outputs": [
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "Library\\\\include\\\\secp256k1*",
     "Library\\\\lib\\\\libsecp256k1.lib",
     "Library\\\\lib\\\\pkgconfig\\\\libsecp256k1.pc",
     "Library\\\\lib\\\\cmake\\\\libsecp256k1"
    ],
    "name": "libsecp256k1",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ],
     "host": [
      "libsecp256k1-2"
     ],
     "run": [
      "libsecp256k1-2"
     ]
    },
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\secp256k1.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_preallocated.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_ecdh.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_recovery.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_extrakeys.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_schnorrsig.h exit 1",
      "if not exist %LIBRARY_INC%\\\\secp256k1_ellswift.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\libsecp256k1.lib exit 1",
      "if not exist %LIBRARY_BIN%\\\\libsecp256k1-2.dll exit 1",
      "if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\libsecp256k1.pc exit 1",
      "pkg-config --cflags --libs libsecp256k1",
      "if not exist %LIBRARY_LIB%\\\\cmake\\\\libsecp256k1\\\\libsecp256k1-config.cmake exit 1",
      "cd shared_standalone_tests\\\\src && dir",
      "cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON %CMAKE_ARGS% .",
      "cmake --build .",
      "cmake --build . --target check",
      "cmake --build . --target clean",
      "cd ..\\\\..",
      "rmdir /s /q shared_standalone_tests"
     ],
     "downstreams": [
      "libsecp256k1-py-bindings",
      "coincurve"
     ],
     "files": [
      "shared_standalone_tests/"
     ],
     "requires": [
      "c_compiler_stub",
      "make",
      "cmake >=3.26",
      "pkg-config"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libsecp256k1-2"
     ]
    },
    "files": [
     "Library\\\\bin\\\\libsecp256k1-2.dll"
    ],
    "name": "libsecp256k1-2",
    "requirements": {
     "build": [
      "c_compiler_stub"
     ]
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_INC%\\\\libsecp256k1.h exit 1",
      "if exist %LIBRARY_LIB%\\\\libsecp256k1.lib exit 1",
      "if not exist %LIBRARY_BIN%\\\\libsecp256k1-2.dll exit 1"
     ]
    }
   }
  ],
  "package": {
   "name": "libsecp256k1-split",
   "version": "0.4.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cmake >=3.26",
    "make"
   ]
  },
  "source": {
   "patches": [
    "0001_conda_relocatable.patch"
   ],
   "sha256": "31b1a03c7365dbce7aff4be9526243da966c58a8b88b6255556d51b3016492c5",
   "url": "https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v0.4.1.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libsecp256k1-2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config"
   ]
  }
 }
}