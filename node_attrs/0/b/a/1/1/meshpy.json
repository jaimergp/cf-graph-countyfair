{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "meshpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "\nMeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are chiefly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n\nIn order to generate 2D and 3D meshes, MeshPy provides Python interfaces\nto three well-regarded mesh generators,\n[Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n[TetGen](http://tetgen.berlios.de/) by Hang Si, and\n[gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\nJean-Francois Remacle. The former two are included in the package in\nslightly modified versions. A generic mesh reader for the latter is\nincluded, as is an easy way to run gmsh from a Python script.\n\nAs of Version 0.91.2, MeshPy also works with Python 3.\n",
   "dev_url": "https://github.com/inducer/meshpy",
   "doc_url": "https://documen.tician.de/meshpy",
   "home": "http://github.com/inducer/meshpy",
   "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
   "license_file": "doc/faq.rst",
   "summary": "Triangular and Tetrahedral Mesh Generator"
  },
  "build": {
   "number": "2",
   "script": [
    "PYTHON -m pip install . --no-deps -v",
    "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf"
   ]
  },
  "package": {
   "name": "meshpy",
   "version": "2022.1.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "pytools",
    "numpy",
    "pytest",
    "six",
    "pybind11"
   ],
   "run": [
    "python",
    "pytools",
    "numpy",
    "six"
   ]
  },
  "source": {
   "fn": "MeshPy-2022.1.3.tar.gz",
   "sha256": "a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475",
   "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pytest test"
   ],
   "imports": [
    "meshpy"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "\nMeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are chiefly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n\nIn order to generate 2D and 3D meshes, MeshPy provides Python interfaces\nto three well-regarded mesh generators,\n[Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n[TetGen](http://tetgen.berlios.de/) by Hang Si, and\n[gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\nJean-Francois Remacle. The former two are included in the package in\nslightly modified versions. A generic mesh reader for the latter is\nincluded, as is an easy way to run gmsh from a Python script.\n\nAs of Version 0.91.2, MeshPy also works with Python 3.\n",
   "dev_url": "https://github.com/inducer/meshpy",
   "doc_url": "https://documen.tician.de/meshpy",
   "home": "http://github.com/inducer/meshpy",
   "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
   "license_file": "doc/faq.rst",
   "summary": "Triangular and Tetrahedral Mesh Generator"
  },
  "build": {
   "number": "2",
   "script": [
    "PYTHON -m pip install . --no-deps -v",
    "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf"
   ]
  },
  "package": {
   "name": "meshpy",
   "version": "2022.1.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "pytools",
    "numpy",
    "pytest",
    "six",
    "pybind11"
   ],
   "run": [
    "python",
    "pytools",
    "numpy",
    "six"
   ]
  },
  "source": {
   "fn": "MeshPy-2022.1.3.tar.gz",
   "sha256": "a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475",
   "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pytest test"
   ],
   "imports": [
    "meshpy"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "name": "meshpy",
 "osx_64_meta_yaml": {
  "about": {
   "description": "\nMeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are chiefly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n\nIn order to generate 2D and 3D meshes, MeshPy provides Python interfaces\nto three well-regarded mesh generators,\n[Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n[TetGen](http://tetgen.berlios.de/) by Hang Si, and\n[gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\nJean-Francois Remacle. The former two are included in the package in\nslightly modified versions. A generic mesh reader for the latter is\nincluded, as is an easy way to run gmsh from a Python script.\n\nAs of Version 0.91.2, MeshPy also works with Python 3.\n",
   "dev_url": "https://github.com/inducer/meshpy",
   "doc_url": "https://documen.tician.de/meshpy",
   "home": "http://github.com/inducer/meshpy",
   "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
   "license_file": "doc/faq.rst",
   "summary": "Triangular and Tetrahedral Mesh Generator"
  },
  "build": {
   "number": "2",
   "script": [
    "PYTHON -m pip install . --no-deps -v",
    "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf"
   ]
  },
  "package": {
   "name": "meshpy",
   "version": "2022.1.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "pytools",
    "numpy",
    "pytest",
    "six",
    "pybind11"
   ],
   "run": [
    "python",
    "pytools",
    "numpy",
    "six"
   ]
  },
  "source": {
   "fn": "MeshPy-2022.1.3.tar.gz",
   "sha256": "a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475",
   "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pytest test"
   ],
   "imports": [
    "meshpy"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "\nMeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are chiefly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n\nIn order to generate 2D and 3D meshes, MeshPy provides Python interfaces\nto three well-regarded mesh generators,\n[Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n[TetGen](http://tetgen.berlios.de/) by Hang Si, and\n[gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\nJean-Francois Remacle. The former two are included in the package in\nslightly modified versions. A generic mesh reader for the latter is\nincluded, as is an easy way to run gmsh from a Python script.\n\nAs of Version 0.91.2, MeshPy also works with Python 3.\n",
   "dev_url": "https://github.com/inducer/meshpy",
   "doc_url": "https://documen.tician.de/meshpy",
   "home": "http://github.com/inducer/meshpy",
   "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
   "license_file": "doc/faq.rst",
   "summary": "Triangular and Tetrahedral Mesh Generator"
  },
  "build": {
   "number": "2",
   "script": [
    "PYTHON -m pip install . --no-deps -v",
    "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf"
   ]
  },
  "package": {
   "name": "meshpy",
   "version": "2022.1.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "pytools",
    "numpy",
    "pytest",
    "six",
    "pybind11"
   ],
   "run": [
    "python",
    "pytools",
    "numpy",
    "six"
   ]
  },
  "source": {
   "fn": "MeshPy-2022.1.3.tar.gz",
   "sha256": "a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475",
   "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pytest test"
   ],
   "imports": [
    "meshpy"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "meshpy"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/meshpy.json"
 },
 "raw_meta_yaml": "{% set name = \"meshpy\" %}\n{% set uname = \"MeshPy\" %}\n{% set version = \"2022.1.3\" %}\n{% set sha256 = \"a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ uname }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ uname[0] }}/{{ uname }}/{{ uname }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script:\n    - {{ PYTHON }} -m pip install . --no-deps -v\n    - echo src/cpp/tetgen-LICENSE >> doc/faq.rst\n  skip: true  # [win and py<35]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - pytools\n    - numpy\n    - pytest\n    - six\n    - pybind11\n  run:\n    - python\n    - pytools\n    - numpy\n    - six\n\ntest:\n  source_files:\n    - test/*\n  requires:\n    - pytest\n  commands:\n    - pytest test\n  imports:\n    - meshpy\n\nabout:\n  home: http://github.com/inducer/meshpy\n  license: MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later\n  license_file: doc/faq.rst\n  summary: Triangular and Tetrahedral Mesh Generator\n\n  description: |\n\n    MeshPy offers quality triangular and tetrahedral mesh generation for\n    Python. Meshes of this type are chiefly used in finite-element\n    simulation codes, but also have many other applications ranging from\n    computer graphics to robotics.\n\n    In order to generate 2D and 3D meshes, MeshPy provides Python interfaces\n    to three well-regarded mesh generators,\n    [Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n    [TetGen](http://tetgen.berlios.de/) by Hang Si, and\n    [gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\n    Jean-Francois Remacle. The former two are included in the package in\n    slightly modified versions. A generic mesh reader for the latter is\n    included, as is an easy way to run gmsh from a Python script.\n\n    As of Version 0.91.2, MeshPy also works with Python 3.\n\n  doc_url: https://documen.tician.de/meshpy\n  dev_url: https://github.com/inducer/meshpy\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - isuruf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "cxx_compiler_stub",
   "numpy",
   "pip",
   "pybind11",
   "pytest",
   "python",
   "pytools",
   "six"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz",
 "version": "2022.1.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/meshpy.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "\nMeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are chiefly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n\nIn order to generate 2D and 3D meshes, MeshPy provides Python interfaces\nto three well-regarded mesh generators,\n[Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,\n[TetGen](http://tetgen.berlios.de/) by Hang Si, and\n[gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and\nJean-Francois Remacle. The former two are included in the package in\nslightly modified versions. A generic mesh reader for the latter is\nincluded, as is an easy way to run gmsh from a Python script.\n\nAs of Version 0.91.2, MeshPy also works with Python 3.\n",
   "dev_url": "https://github.com/inducer/meshpy",
   "doc_url": "https://documen.tician.de/meshpy",
   "home": "http://github.com/inducer/meshpy",
   "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
   "license_file": "doc/faq.rst",
   "summary": "Triangular and Tetrahedral Mesh Generator"
  },
  "build": {
   "number": "2",
   "script": [
    "PYTHON -m pip install . --no-deps -v",
    "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "inducer",
    "isuruf"
   ]
  },
  "package": {
   "name": "meshpy",
   "version": "2022.1.3"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "pytools",
    "numpy",
    "pytest",
    "six",
    "pybind11"
   ],
   "run": [
    "python",
    "pytools",
    "numpy",
    "six"
   ]
  },
  "source": {
   "fn": "MeshPy-2022.1.3.tar.gz",
   "sha256": "a7158e31ece25fa6c6cebce9fd1e968157d661dc8769fb30ceba69c351478475",
   "url": "https://pypi.io/packages/source/M/MeshPy/MeshPy-2022.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "pytest test"
   ],
   "imports": [
    "meshpy"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "test/*"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "pytest",
    "python",
    "pytools",
    "six"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python",
    "pytools",
    "six"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}