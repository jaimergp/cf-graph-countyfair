{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "16.x",
    "15.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test_on_native_only": true
 },
 "feedstock_name": "llvmdev",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv"
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "backtrace",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv"
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.so",
      "test -f $PREFIX/lib/libLLVM.so.18.1"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools",
      "libcxx >=16"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=16"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.dylib",
      "test -f $PREFIX/lib/libLLVM.18.1.dylib"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-C.18.dylib"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools",
      "libcxx >=16"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=16"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.dylib",
      "test -f $PREFIX/lib/libLLVM.18.1.dylib"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-C.18.dylib"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "m2-sed"
     ],
     "host": [
      "libllvm18",
      "libllvm-c18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "libllvm-c18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
      "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1",
      "if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1",
      "llvm-nm.exe --help",
      "rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake"
     ],
     "requires": [
      "ripgrep"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": null,
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
      "llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ]
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1",
      "if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 16",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 16",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "libxml2",
    "zlib",
    "zstd",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch",
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "name": "llvm-package",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools",
      "libcxx >=16"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=16"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.dylib",
      "test -f $PREFIX/lib/libLLVM.18.1.dylib"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-C.18.dylib"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 16"
   ],
   "host": [
    "libcxx 16",
    "backtrace",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libcxx",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "llvm-tools",
      "libcxx >=16"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llvm-config --libs",
      "test -f $PREFIX/include/llvm/Pass.h",
      "test -f $PREFIX/lib/libLLVMCore.a",
      "$PREFIX/libexec/llvm/not false",
      "$PREFIX/bin/llvm-nm --help"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "ninja",
      "cmake",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx >=16"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-18.dylib",
      "test -f $PREFIX/lib/libLLVM.18.1.dylib"
     ]
    }
   },
   {
    "build": {
     "run_exports": [
      "libllvm18"
     ]
    },
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "$PREFIX/bin/llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ],
     "skip": true
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "libcxx 16"
     ],
     "host": [
      "libcxx 16",
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libLLVM-C.18.dylib"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3",
    "libcxx 16"
   ],
   "host": [
    "libcxx 16",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx",
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libllvm-c18",
   "libllvm18",
   "lit",
   "llvm",
   "llvm-tools",
   "llvmdev"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/llvmdev.json"
 },
 "raw_meta_yaml": "{% set version = \"18.1.1\" %}\n{% set major_ver = version.split(\".\")[0] %}\n{% set maj_min = major_ver ~ \".\" ~ version.split(\".\")[1] %}\n\n# as of LLVM 17, we expect an \"rc\" suffix for the release candidates\n{% set extra = \"rc\" if version.split(\".\")[-1] not in \"01234567\" else \"\" %}\n{% set extra = \"git\" if version.split(\".\")[-1] == \"dev0\" else extra %}\n\npackage:\n  name: llvm-package\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n  sha256: 8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad\n  patches:\n    # - patches/intel-D47188-svml-VF.patch    # Fixes vectorizer and extends SVML support\n    # - patches/expect-fastmath-entrypoints-in-add-TLI-mappings.ll.patch # adjusts test added in 10.0.0 for intel-D47188-svml-VF.patch effects\n    # - patches/amd-roc-2.7.0.diff\n    - patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch\n    - patches/0002-restore-macos-10.9-support.patch\n    # backport https://github.com/llvm/llvm-project/pull/85163\n    - patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch\n\nbuild:\n  number: 0\n  merge_build_host: false\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - python >=3\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n  host:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    # needs aarch/ppc/arm (re)build of conda-forge/backtrace-feedstock\n    - backtrace                          # [unix and x86]\n    - libxml2\n    - zlib\n    - zstd\n\noutputs:\n  # Contains everything\n  - name: llvmdev\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n        - m2-sed                             # [win]\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - {{ pin_subpackage(\"libllvm-c\" + major_ver, exact=True) }}     # [win]\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - {{ pin_subpackage(\"libllvm-c\" + major_ver, exact=True) }}     # [win]\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        - libcxx >={{ cxx_compiler_version }}                           # [osx]\n      run_constrained:\n        - llvm        {{ version }}\n        - llvm-tools  {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      requires:\n        - ripgrep  # [win]\n      commands:\n        - $PREFIX/bin/llvm-config --libs                                # [not win]\n        - test -f $PREFIX/include/llvm/Pass.h                           # [not win]\n        - test -f $PREFIX/lib/libLLVMCore.a                             # [not win]\n        - $PREFIX/libexec/llvm/not false                                # [not win]\n        - $PREFIX/bin/llvm-nm --help                                    # [not win]\n        - if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1               # [win]\n        - if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1  # [win]\n        - if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1              # [win]\n        - llvm-nm.exe --help                                            # [win]\n\n        # ensure we've correctly inserted %VSINSTALLDIR% into the CMake metadata for LLVM;\n        # we're looking for: `INTERFACE_LINK_LIBRARIES \"$ENV{VSINSTALLDIR}/DIA SDK/lib/amd64/diaguids.lib;[...]`instead\n        - rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake  # [win]\n\n  # Contains the shared libraries. To make different LLVM libraries co-installable\n  # soversion is appended to the package name.\n  - name: libllvm{{ major_ver }}\n    script: install_llvm.sh  # [not win]\n    build:\n      activate_in_script: true\n      run_exports:                                                    # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - ninja                    # [not win]\n        - cmake                    # [not win]\n        - python >=3               # [not win]\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n    test:\n      commands:\n        # old style\n        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}{{ extra }}.so     # [linux]\n        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}{{ extra }}.dylib  # [osx]\n        # new style\n        - test -f $PREFIX/lib/libLLVM.so.{{ maj_min }}{{ extra }}       # [linux]\n        - test -f $PREFIX/lib/libLLVM.{{ maj_min }}{{ extra }}.dylib    # [osx]\n\n  # This is a meta package so that people can use the latest libllvm and also\n  # for run_exports\n  - name: llvm\n    build:\n      run_exports:                                                    # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n      host:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}     # [not win]\n        - libxml2\n        - zlib\n        - zstd\n      run:                                                            # [not win]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}     # [not win]\n      run_constrained:\n        - llvmdev     {{ version }}\n        - llvm-tools  {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      commands:\n        - echo \"Hello World!\"\n\n  # Contains LLVM tools\n  - name: llvm-tools\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n      run_constrained:\n        - llvm        {{ version }}\n        - llvmdev     {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      commands:\n        - $PREFIX/bin/llc -version                               # [not win]\n        - if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1           # [win]\n        - llc -version                                           # [win]\n\n  # Contains LLVM-C shared library\n  - name: libllvm-c{{ major_ver }}\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libllvm-c\" + major_ver, max_pin=\"x.x\") }}\n      activate_in_script: true\n      # not supported on linux, see\n      # https://github.com/llvm/llvm-project/blob/llvmorg-16.0.6/llvm/tools/llvm-shlib/CMakeLists.txt#L82-L85\n      # osx currently fails as well, see https://github.com/llvm/llvm-project/issues/64657\n      skip: true  # [not win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" + major_ver, exact=True) }}\n        - libxml2\n        - zlib\n        - zstd\n      run_constrained:\n        - llvmdev {{ version }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libLLVM-C.{{ major_ver }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1          # [win]\n        - if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1          # [win]\n\n  - name: lit\n    build:\n      noarch: python\n      script: python -m pip install llvm/utils/lit --no-deps -vv\n      activate_in_script: true\n      skip: true  # [not linux64]\n      entry_points:\n        # upstream LLVM is inconsistent; there's one way specified in lit's setup.py...\n        - lit = lit.main:main\n        # ... and then the CMake files we install here (e.g. AddLLVM.cmake) look for another\n        - llvm-lit = lit.main:main\n    requirements:\n      host:\n        - python >=3\n        - pip\n      run:\n        - python\n    test:\n      imports:\n        - lit\n      commands:\n        - lit -h\n        - llvm-lit -h\n\nabout:\n  home: http://llvm.org/\n  dev_url: https://github.com/llvm/llvm-project\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: llvm/LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for LLVM\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - inducer\n    - jakirkham\n    - mingwandroid\n    - SylvainCorlay\n    - isuruf\n    - timsnyder\n    - xhochy\n    - h-vetinari\n  feedstock-name: llvmdev\n",
 "req": {
  "__set__": true,
  "elements": [
   "backtrace",
   "cmake",
   "cxx_compiler_stub",
   "libcxx",
   "libllvm-c18",
   "libllvm18",
   "libxml2",
   "llvm-tools",
   "m2-sed",
   "ninja",
   "pip",
   "python",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "m2-sed",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "cxx_compiler_stub",
    "libcxx",
    "libllvm-c18",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libcxx",
    "libllvm-c18",
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ripgrep"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx 16",
    "m2-sed",
    "ninja",
    "python >=3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "backtrace",
    "libcxx 16",
    "libllvm-c18",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python >=3",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libcxx >=16",
    "libllvm-c18",
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ripgrep"
   ]
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz",
 "version": "18.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/llvmdev.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "llvm/LICENSE.TXT",
   "summary": "Development headers and libraries for LLVM"
  },
  "build": {
   "merge_build_host": false,
   "number": "0"
  },
  "extra": {
   "feedstock-name": "llvmdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "jakirkham",
    "mingwandroid",
    "SylvainCorlay",
    "isuruf",
    "timsnyder",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvmdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3",
      "m2-sed"
     ],
     "host": [
      "libllvm18",
      "libllvm-c18",
      "llvm-tools",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18",
      "libllvm-c18",
      "llvm-tools"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
      "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1",
      "if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1",
      "llvm-nm.exe --help",
      "rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake"
     ],
     "requires": [
      "ripgrep"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "libllvm18",
    "requirements": {
     "build": [
      "cxx_compiler_stub"
     ],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": null,
    "name": "llvm",
    "requirements": {
     "build": [],
     "host": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev     18.1.1",
      "llvm-tools  18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "test": {
     "commands": [
      "echo \"Hello World!\""
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true
    },
    "name": "llvm-tools",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python >=3"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libllvm18"
     ],
     "run_constrained": [
      "llvm        18.1.1",
      "llvmdev     18.1.1",
      "clang       18.1.1",
      "clang-tools 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
      "llc -version"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "run_exports": [
      "libllvm-c18"
     ]
    },
    "name": "libllvm-c18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libllvm18",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_constrained": [
      "llvmdev 18.1.1"
     ]
    },
    "script": "install_llvm.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1",
      "if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "entry_points": [
      "lit = lit.main:main",
      "llvm-lit = lit.main:main"
     ],
     "noarch": "python",
     "script": "python -m pip install llvm/utils/lit --no-deps -vv",
     "skip": true
    },
    "name": "lit",
    "requirements": {
     "host": [
      "python >=3",
      "pip"
     ],
     "run": [
      "python"
     ]
    },
    "test": {
     "commands": [
      "lit -h",
      "llvm-lit -h"
     ],
     "imports": [
      "lit"
     ]
    }
   }
  ],
  "package": {
   "name": "llvm-package",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "python >=3"
   ],
   "host": [
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch",
    "patches/0002-restore-macos-10.9-support.patch",
    "patches/0003-llvm-shlib-Fix-libLLVM-MAJOR-.so-symlink-on-MacOS.patch"
   ],
   "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
   "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "m2-sed",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libllvm-c18",
    "libllvm18",
    "libxml2",
    "llvm-tools",
    "pip",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libllvm-c18",
    "libllvm18",
    "llvm-tools",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "ripgrep"
   ]
  }
 }
}