{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "store_build_artifacts": true
  },
  "bot": {
   "abi_migration_branches": [
    "3.8",
    "3.9",
    "3.10",
    "3.11"
   ]
  },
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "native"
  },
  "remote_ci_setup": [
   "conda-forge-ci-setup=3"
  ],
  "test": "native_and_emulated"
 },
 "feedstock_name": "python",
 "hash_type": "md5",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "ld_impl_linux-64",
    "libffi",
    "libnsl",
    "libuuid",
    "libxcrypt",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-64",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-aarch64",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-aarch64",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "ld_impl_linux-aarch64",
    "libffi",
    "libnsl",
    "libuuid",
    "libxcrypt",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-aarch64",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-ppc64le",
    "libtool",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "ld_impl_linux-ppc64le",
    "libffi",
    "libnsl",
    "libuuid",
    "libxcrypt",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-ppc64le",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-64",
      "binutils_impl_linux-64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-aarch64",
      "binutils_impl_linux-aarch64"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-aarch64 >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-aarch64 >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "cdt_stub",
      "cdt_stub",
      "make",
      "libtool",
      "pkg-config",
      "ld_impl_linux-ppc64le",
      "binutils_impl_linux-ppc64le"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "ld_impl_linux-ppc64le >=2.36.1",
      "libnsl",
      "libuuid",
      "libxcrypt",
      "expat"
     ],
     "run": [
      "ld_impl_linux-ppc64le >=2.36.1",
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "missing_dso_whitelist": [
      "**/MSVCR71.dll",
      "**/MSVCR80.dll",
      "**/api-ms-win-core-path-l1-1-0.dll"
     ],
     "no_link": [
      "DLLs/_ctypes.pyd"
     ],
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "tk",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "echo on",
      "set",
      "python -V",
      "2to3 -h",
      "pydoc -h",
      "set \"PIP_NO_BUILD_ISOLATION=False\"",
      "set \"PIP_NO_DEPENDENCIES=True\"",
      "set \"PIP_IGNORE_INSTALLED=True\"",
      "set \"PIP_NO_INDEX=True\"",
      "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
      "set \"TEMP=%CONDA_PREFIX%/tmp\"",
      "mkdir \"%TEMP%\"",
      "python -Im ensurepip --upgrade --default-pip",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
      "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
      "pushd tests",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=no"
     ],
     "string": "h1234567_0_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.bat",
    "test": {
     "commands": null,
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "patch",
    "m2-patch",
    "m2-gcc-libs"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "name": "python-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libtool",
    "llvm-tools",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy",
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "ignore_run_exports_from": [
      "cxx_compiler_stub"
     ],
     "no_link": null,
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312",
       "python 3.12.* *_debug_cpython"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=yes",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_debug_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "libtool",
      "pkg-config",
      "llvm-tools"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "readline",
      "tk",
      "ncurses",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.sh",
    "test": {
     "commands": [
      "python -V",
      "python3 -V",
      "2to3 -h",
      "pydoc -h",
      "python3-config --help",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv/bin/python -c \"import ctypes\"",
      "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
      "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
      "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
      "pushd tests",
      "pushd prefix-replacement",
      "bash build-and-test.sh",
      "popd",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "test ! -f default.profraw",
      "test -d \"$PREFIX/lib/python3.1/site-packages\"",
      "python3.1 --version",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
      "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"",
      "python -c \"import crypt\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=yes"
     ],
     "string": "h1234567_0_debug_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.sh",
    "test": {
     "commands": [
      "VER=${PKG_VERSION%.*}",
      "VERABI=${VER}d",
      "test -f ${PREFIX}/lib/libpython${VERABI}.a",
      "test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a",
      "test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a",
      "pushd tests/prefix-replacement",
      "bash build-and-test.sh",
      "popd"
     ],
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "patch",
    "patch"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   },
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libtool",
    "llvm-tools",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "libffi",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libpython-static",
   "python"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/python.json"
 },
 "raw_meta_yaml": "{% set version = \"3.12.2\" %}\n{% set dev = \"\" %}\n{% set dev_ = \"\" %}\n{% set ver2 = '.'.join(version.split('.')[0:2]) %}\n{% set ver2nd = ''.join(version.split('.')[0:2]) %}\n{% set ver3nd = ''.join(version.split('.')[0:3]) %}\n{% set build_number = 0 %}\n\n# this makes the linter happy\n{% set channel_targets = channel_targets or 'conda-forge main' %}\n\n# Sanitize build system env. var tweak parameters\n# (passed to the build scripts via script_env).\n{% set from_source_control = os.environ.get('CONDA_BUILD_FROM_SOURCE_CONTROL', '') %}\n{% if from_source_control == '' or from_source_control == 'no' %}\n  {% set from_source_control = 'no' %}\n{% else %}\n  {% set from_source_control = 'yes' %}\n{% endif %}\n{% set linkage_nature = os.environ.get('PY_INTERP_LINKAGE_NATURE', '') %}\n{% if linkage_nature != '' %}\n  {% set linkage_nature = \"_\" ~ linkage_nature %}\n{% endif %}\n{% if linkage_nature == 'shared' %}\n  {% set linkage_nature_env = 'shared' %}\n{% else %}\n  {% set linkage_nature_env = 'static' %}\n{% endif %}\n{% set dbg_abi = \"\" %}\n{% if build_type == \"debug\" %}\n  {% set py_interp_debug = \"yes\" %}\n  {% set debug = \"_debug\" %}\n{% else %}\n  {% set py_interp_debug = \"no\" %}\n  {% set debug = \"\" %}\n{% endif %}\n\npackage:\n  name: python-split\n  version: {{ version }}{{ dev }}\n\nsource:\n{% if from_source_control == 'yes' %}\n  - git_url: https://github.com/python/CPython.git\n    git_tag: v{{ version }}{{ dev }}\n{% else %}\n  - url: https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}{{ dev }}.tar.xz\n    # md5 from: https://www.python.org/downloads/release/python-{{ ver3nd }}{{ dev }}/\n    md5: e7c178b97bf8f7ccd677b94d614f7b3c\n{% endif %}\n    patches:\n      - patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch\n      - patches/0002-Win32-Do-not-download-externals.patch\n      - patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch\n      - patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch\n      - patches/0005-Unvendor-openssl.patch\n      - patches/0006-Unvendor-sqlite3.patch\n      - patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch\n      - patches/0008-Doing-d1trimfile.patch\n      # https://github.com/python/cpython/pull/23523\n      - patches/0009-cross-compile-darwin.patch\n      - patches/0010-Fix-TZPATH-on-windows.patch\n      # https://github.com/python/cpython/pull/24324\n      - patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch\n      - patches/0012-Unvendor-bzip2.patch\n      - patches/0013-Unvendor-libffi.patch\n      - patches/0014-Unvendor-tcltk.patch\n      - patches/0015-unvendor-xz.patch\n      - patches/0016-unvendor-zlib.patch\n      - patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch\n      - patches/0018-Unvendor-expat.patch\n      - patches/0019-Remove-unused-readelf.patch\n      - patches/0020-Don-t-checksharedmods-if-cross-compiling.patch\n      - patches/0021-Override-configure-LIBFFI.patch\n      - patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch\n\nbuild:\n  number: {{ build_number }}\n\nrequirements:\n  build:\n{% if from_source_control == 'yes' %}\n    - git\n{% else %}\n    - patch  # [not win]\n    - m2-patch  # [win]\n    - m2-gcc-libs  # [win]\n{% endif %}\n\noutputs:\n  - name: python\n    script: build_base.sh  # [unix]\n    script: build_base.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      # Windows has issues updating python if conda is using files itself.\n      # Copy rather than link.\n      no_link:\n        - DLLs/_ctypes.pyd  # [win]\n      ignore_run_exports_from:   # [unix]\n        # C++ only installed so CXX is defined for distutils/sysconfig.\n        - {{ compiler('cxx') }}  # [unix]\n      # Disabled until verified to work correctly\n      detect_binary_files_with_prefix: true\n      # detect_binary_files_with_prefix: False\n      # binary_has_prefix_files:\n      #   - lib/libpython{{ ver2 }}.*.1.0\n      #   - bin/python{{ ver2 }}  # [linux]\n      #   - lib/libpython{{ ver2 }}.a  # [linux]\n      #   - lib/libpython{{ ver2 }}.nolto.a  # [linux]\n      #   - lib/libpython3.so  # [linux]\n      #   - lib/python{{ ver2 }}/lib-dynload/_hashlib.cpython-{{ ver2nd }}-x86_64-linux-gnu.so  # [linux]\n      #   - lib/libpython3.dylib  # [osx]\n      # match python.org compiler standard\n      skip: true  # [win and int(float(vc)) < 14]\n      skip_compile_pyc:\n        - '*.py'            # [build_platform != target_platform]\n      string: {{ dev_ }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}_cpython  # [\"conda-forge\" in (channel_targets or \"\")]\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}  # [\"conda-forge\" not in (channel_targets or \"\")]\n{% if 'conda-forge' in channel_targets %}\n      run_exports:\n        noarch:\n          - python\n        weak:\n          - python_abi {{ ver2 }}.* *_cp{{ ver2nd }}\n{% if py_interp_debug == \"yes\" %}\n          - python {{ ver2 }}.* *_debug_cpython\n{% endif %}\n{% endif %}\n      script_env:\n        - PY_INTERP_LINKAGE_NATURE={{ linkage_nature_env }}\n        - PY_INTERP_DEBUG={{ py_interp_debug }}\n        # Putting these here means they get emitted to build_env_setup.{sh,bat} meaning we can launch IDEs\n        # after sourcing or calling that script without examine the contents of conda_build.{sh,bat} for\n        # important env. vars.\n{% if 'conda-forge' in channel_targets %}\n        - CONDA_FORGE=yes\n{% else %}\n        - CONDA_FORGE=no\n{% endif %}\n      missing_dso_whitelist:   # [win]\n        - '**/MSVCR71.dll'  # [win]\n        - '**/MSVCR80.dll'  # [win]\n        # I have no idea why this is not in C:\\Windows\\System32\\downlevel\n        - '**/api-ms-win-core-path-l1-1-0.dll'  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n        - {{ cdt('libx11-devel') }}  # [linux]\n        - make  # [not win]\n        - libtool  # [unix]\n        - pkg-config  # [not win]\n        # configure script looks for llvm-ar for lto\n        - llvm-tools  # [osx]\n        - ld_impl_{{ target_platform }}  # [linux]\n{% if 'conda-forge' in channel_targets %}\n        - binutils_impl_{{ target_platform }}  # [linux]\n{% endif %}\n        - tk        # [build_platform != target_platform]\n        - readline  # [build_platform != target_platform]\n        - ncurses   # [build_platform != target_platform]\n        - zlib      # [build_platform != target_platform]\n      host:\n        - bzip2\n        - sqlite\n        - xz\n        - zlib\n        - openssl\n        - readline  # [not win]\n        - tk\n        - ncurses  # [unix]\n        - libffi\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n        - libnsl  # [linux]\n        - libuuid  # [linux]\n        - libxcrypt  # [linux]\n        - expat\n      run:\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n        - tzdata\n{% if dev != '' %}\n        - _python_rc\n{% endif %}\n{% if 'conda-forge' in channel_targets %}\n      run_constrained:\n        - python_abi {{ ver2 }}.* *_cp{{ ver2nd }}\n{% endif %}\n    test:\n      downstreams:\n        - cython\n        - setuptools\n      requires:\n        - ripgrep\n        - cmake\n        - ninja\n        - {{ compiler('c') }}\n        # Tried to use enable_language(C) to avoid needing this. It does not work.\n        - {{ compiler('cxx') }}\n      files:\n        - tests/cmake/*\n        - tests/cython/*\n        - tests/prefix-replacement/*\n        - run_test.py\n      commands:\n        - echo on  # [win]\n        - set  # [win]\n        - python -V\n        - python3 -V            # [not win]\n        - 2to3 -h\n        - pydoc -h\n        - python3-config --help  # [not win]\n        - set \"PIP_NO_BUILD_ISOLATION=False\"  # [win]\n        - set \"PIP_NO_DEPENDENCIES=True\"  # [win]\n        - set \"PIP_IGNORE_INSTALLED=True\"  # [win]\n        - set \"PIP_NO_INDEX=True\"  # [win]\n        - set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"  # [win]\n        - set \"TEMP=%CONDA_PREFIX%/tmp\"  # [win]\n        - mkdir \"%TEMP%\"  # [win]\n        - python -Im ensurepip --upgrade --default-pip  # [win]\n        # tzdata/zoneinfo test that will need the tzdata package to pass\n        - python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"\n        - python -m venv test-venv\n        - test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"  # [win]\n        - test-venv/bin/python -c \"import ctypes\"            # [unix]\n        - python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"  # [not win]\n        - _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"   # [linux64]\n        # check for unreplaced @ symbols in sysconfig files, excluding e.g. '\"$@\".lto'\n        - for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done  # [linux64 or osx]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a  # [unix]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a  # [unix]\n        # https://github.com/conda-forge/python-feedstock/issues/384\n        - if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1  # [win]\n        - if exist %PREFIX%\\\\Scripts\\\\idle exit 1  # [win]\n        - if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1  # [win]\n        - pushd tests\n        - pushd prefix-replacement    # [unix]\n        - bash build-and-test.sh      # [unix]\n        - popd    # [unix]\n        - pushd cmake\n        - cmake -GNinja -DPY_VER={{ version }}\n              # --trace --debug-output --debug-trycompile .\n        - popd\n        - popd\n        - python run_test.py\n        - test ! -f default.profraw   # [osx]\n        # Test workaround for https://github.com/conda/conda/issues/10969\n        - test -d \"$PREFIX/lib/python3.1/site-packages\"  # [unix]\n        - python3.1 --version  # [unix]\n        # Test for segfault on osx-64 with libffi=3.4, see https://bugs.python.org/issue44556\n        - python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"\n        # Test for wide character supported via ncursesw\n        - TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"  # [unix]\n        # crypt module will be removed in 3.13 => this failing is a reminder to remove the libxcrypt dependency\n        - python -c \"import crypt\"  # [unix]\n\n  - name: libpython-static\n    script: build_static.sh  # [unix]\n    script: build_static.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      ignore_run_exports:\n        - python_abi\n      script_env:\n        - PY_INTERP_DEBUG={{ py_interp_debug }}\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}_cpython  # [\"conda-forge\" in (channel_targets or \"\")]\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ linkage_nature }}{{ debug }}  # [\"conda-forge\" not in (channel_targets or \"\")]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n{% if from_source_control == 'yes' %}\n        - git\n{% endif %}\n      host:\n        - {{ pin_subpackage('python', exact=True) }}\n      run:\n        - {{ pin_subpackage('python', exact=True) }}\n    test:\n      files:\n        - tests/prefix-replacement/*\n      requires:\n        - {{ compiler('c') }}\n      commands:\n        - VER=${PKG_VERSION%.*}   # [not win]\n{% if py_interp_debug == \"yes\" %}\n        - VERABI=${VER}d    # [not win]\n{% else %}\n        - VERABI=${VER}   # [not win]\n{% endif %}\n        - test -f ${PREFIX}/lib/libpython${VERABI}.a  # [unix]\n        - test -f ${PREFIX}/lib/libpython${VERABI}.nolto.a  # [unix]\n        - test -f ${PREFIX}/lib/python${VER}/config-${VERABI}-darwin/libpython${VERABI}.a  # [osx]\n        - pushd tests/prefix-replacement    # [unix]\n        - bash build-and-test.sh      # [unix]\n        - popd    # [unix]\n\nabout:\n  home: https://www.python.org/\n  license: Python-2.0\n  license_file: LICENSE\n  summary: General purpose programming language\n  description: |\n    Python is a widely used high-level, general-purpose, interpreted, dynamic\n    programming language. Its design philosophy emphasizes code\n    readability, and its syntax allows programmers to express concepts in\n    fewer lines of code than would be possible in languages such as C++ or\n    Java. The language provides constructs intended to enable clear programs\n    on both a small and large scale.\n  doc_url: https://www.python.org/doc/versions/\n  doc_source_url: https://github.com/python/pythondotorg/blob/master/docs/source/index.rst\n  dev_url: https://docs.python.org/devguide/\n\nextra:\n  feedstock-name: python\n  recipe-maintainers:\n    - chrisburr\n    - isuruf\n    - jakirkham\n    - mbargull\n    - mingwandroid\n    - msarahan\n    - pelson\n    - ocefpaf\n    - scopatz\n    - katietz\n    - xhochy\n",
 "req": {
  "__set__": true,
  "elements": [
   "binutils_impl_linux-64",
   "binutils_impl_linux-aarch64",
   "binutils_impl_linux-ppc64le",
   "bzip2",
   "c_compiler_stub",
   "cdt_stub",
   "cxx_compiler_stub",
   "expat",
   "ld_impl_linux-64",
   "ld_impl_linux-aarch64",
   "ld_impl_linux-ppc64le",
   "libffi",
   "libnsl",
   "libtool",
   "libuuid",
   "libxcrypt",
   "llvm-tools",
   "m2-gcc-libs",
   "m2-patch",
   "make",
   "ncurses",
   "openssl",
   "patch",
   "pkg-config",
   "python",
   "readline",
   "sqlite",
   "tk",
   "tzdata",
   "xz",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libtool",
    "llvm-tools",
    "m2-gcc-libs",
    "m2-patch",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "expat",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libffi",
    "libnsl",
    "libuuid",
    "libxcrypt",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "c_compiler_stub",
    "cdt_stub",
    "cxx_compiler_stub",
    "ld_impl_linux-64",
    "ld_impl_linux-aarch64",
    "ld_impl_linux-ppc64le",
    "libtool",
    "llvm-tools",
    "m2-gcc-libs",
    "m2-patch",
    "make",
    "patch",
    "pkg-config"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "ld_impl_linux-64 >=2.36.1",
    "ld_impl_linux-aarch64 >=2.36.1",
    "ld_impl_linux-ppc64le >=2.36.1",
    "libffi",
    "libnsl",
    "libuuid",
    "libxcrypt",
    "ncurses",
    "openssl",
    "python",
    "readline",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "ld_impl_linux-64 >=2.36.1",
    "ld_impl_linux-aarch64 >=2.36.1",
    "ld_impl_linux-ppc64le >=2.36.1",
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 },
 "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz",
 "version": "3.12.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/python.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n",
   "dev_url": "https://docs.python.org/devguide/",
   "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
   "doc_url": "https://www.python.org/doc/versions/",
   "home": "https://www.python.org/",
   "license": "Python-2.0",
   "license_file": "LICENSE",
   "summary": "General purpose programming language"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "python",
   "recipe-maintainers": [
    "chrisburr",
    "isuruf",
    "jakirkham",
    "mbargull",
    "mingwandroid",
    "msarahan",
    "pelson",
    "ocefpaf",
    "scopatz",
    "katietz",
    "xhochy"
   ]
  },
  "outputs": [
   {
    "build": {
     "activate_in_script": true,
     "detect_binary_files_with_prefix": true,
     "missing_dso_whitelist": [
      "**/MSVCR71.dll",
      "**/MSVCR80.dll",
      "**/api-ms-win-core-path-l1-1-0.dll"
     ],
     "no_link": [
      "DLLs/_ctypes.pyd"
     ],
     "number": "0",
     "run_exports": {
      "noarch": [
       "python"
      ],
      "weak": [
       "python_abi 3.12.* *_cp312"
      ]
     },
     "script_env": [
      "PY_INTERP_LINKAGE_NATURE=static",
      "PY_INTERP_DEBUG=no",
      "CONDA_FORGE=yes"
     ],
     "skip_compile_pyc": null,
     "string": "h1234567_0_cpython"
    },
    "name": "python",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "bzip2",
      "sqlite",
      "xz",
      "zlib",
      "openssl",
      "tk",
      "libffi",
      "expat"
     ],
     "run": [
      "tzdata"
     ],
     "run_constrained": [
      "python_abi 3.12.* *_cp312"
     ]
    },
    "script": "build_base.bat",
    "test": {
     "commands": [
      "echo on",
      "set",
      "python -V",
      "2to3 -h",
      "pydoc -h",
      "set \"PIP_NO_BUILD_ISOLATION=False\"",
      "set \"PIP_NO_DEPENDENCIES=True\"",
      "set \"PIP_IGNORE_INSTALLED=True\"",
      "set \"PIP_NO_INDEX=True\"",
      "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
      "set \"TEMP=%CONDA_PREFIX%/tmp\"",
      "mkdir \"%TEMP%\"",
      "python -Im ensurepip --upgrade --default-pip",
      "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
      "python -m venv test-venv",
      "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
      "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
      "if exist %PREFIX%\\\\Scripts\\\\2to3 exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3-script.py exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\2to3.exe exit 1",
      "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
      "pushd tests",
      "pushd cmake",
      "cmake -GNinja -DPY_VER=3.12.2",
      "popd",
      "popd",
      "python run_test.py",
      "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
     ],
     "downstreams": [
      "cython",
      "setuptools"
     ],
     "files": [
      "tests/cmake/*",
      "tests/cython/*",
      "tests/prefix-replacement/*",
      "run_test.py"
     ],
     "requires": [
      "ripgrep",
      "cmake",
      "ninja",
      "c_compiler_stub",
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "activate_in_script": true,
     "ignore_run_exports": [
      "python_abi"
     ],
     "number": "0",
     "script_env": [
      "PY_INTERP_DEBUG=no"
     ],
     "string": "h1234567_0_cpython"
    },
    "name": "libpython-static",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub"
     ],
     "host": [
      "python"
     ],
     "run": [
      "python"
     ]
    },
    "script": "build_static.bat",
    "test": {
     "commands": null,
     "files": [
      "tests/prefix-replacement/*"
     ],
     "requires": [
      "c_compiler_stub"
     ]
    }
   }
  ],
  "package": {
   "name": "python-split",
   "version": "3.12.2"
  },
  "requirements": {
   "build": [
    "m2-patch",
    "m2-gcc-libs"
   ]
  },
  "source": [
   {
    "md5": "e7c178b97bf8f7ccd677b94d614f7b3c",
    "patches": [
     "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
     "patches/0002-Win32-Do-not-download-externals.patch",
     "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
     "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
     "patches/0005-Unvendor-openssl.patch",
     "patches/0006-Unvendor-sqlite3.patch",
     "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
     "patches/0008-Doing-d1trimfile.patch",
     "patches/0009-cross-compile-darwin.patch",
     "patches/0010-Fix-TZPATH-on-windows.patch",
     "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
     "patches/0012-Unvendor-bzip2.patch",
     "patches/0013-Unvendor-libffi.patch",
     "patches/0014-Unvendor-tcltk.patch",
     "patches/0015-unvendor-xz.patch",
     "patches/0016-unvendor-zlib.patch",
     "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
     "patches/0018-Unvendor-expat.patch",
     "patches/0019-Remove-unused-readelf.patch",
     "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
     "patches/0021-Override-configure-LIBFFI.patch",
     "patches/0022-Allow-linking-ncursesw-panelw-on-macOS-if-available.patch"
    ],
    "url": "https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "m2-gcc-libs",
    "m2-patch"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "bzip2",
    "expat",
    "libffi",
    "openssl",
    "python",
    "sqlite",
    "tk",
    "xz",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "tzdata"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "ripgrep"
   ]
  }
 }
}