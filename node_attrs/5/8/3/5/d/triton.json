{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "triton",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n",
   "dev_url": "https://github.com/openai/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/openai/triton",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "number": "4",
   "string": "cuda118py39h1234567_4"
  },
  "extra": {
   "recipe-maintainers": [
    "erip",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "triton",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "make",
    "cmake",
    "mlir",
    "llvmdev"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "llvm",
    "libmlir",
    "zlib"
   ],
   "run": [
    "python",
    "filelock",
    "pytorch =*=cuda*",
    "lit"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-package-third_party-folder.patch",
    "patches/0002-Fix-error-that-FileCheck-is-already-defined.patch",
    "patches/0003-properly-point-to-triton-includes.patch",
    "patches/0004-Avoid-using-outdated-FindLLVM.patch",
    "patches/0005-Unvendor-third-party-libs.patch",
    "patches/0006-Avoid-pip-check-error-as-cmake-is-not-a-python-modul.patch",
    "patches/0007-Fix-TableGen-issues.patch",
    "patches/0008-Search-for-libs-in-CONDA_PREFIX-instead-of-third_par.patch"
   ],
   "sha256": "19b6de0d0bcce86e973258d112169cd321b677146808bcc5fed7f69046775cfd",
   "url": "https://github.com/openai/triton/archive/refs/tags/v2.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "triton",
    "triton._C.libtriton"
   ],
   "requires": [
    "pip",
    "pytest",
    "scipy"
   ],
   "source_files": [
    "python/test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "llvmdev",
    "make",
    "mlir"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libmlir",
    "llvm",
    "pip",
    "pybind11",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "filelock",
    "lit",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n",
   "dev_url": "https://github.com/openai/triton",
   "doc_url": "https://triton-lang.org/",
   "home": "https://github.com/openai/triton",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Development repository for the Triton language and compiler"
  },
  "build": {
   "number": "4",
   "string": "cuda118py39h1234567_4"
  },
  "extra": {
   "recipe-maintainers": [
    "erip",
    "h-vetinari"
   ]
  },
  "package": {
   "name": "triton",
   "version": "2.0.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "make",
    "cmake",
    "mlir",
    "llvmdev"
   ],
   "host": [
    "python",
    "pybind11",
    "pip",
    "llvm",
    "libmlir",
    "zlib"
   ],
   "run": [
    "python",
    "filelock",
    "pytorch =*=cuda*",
    "lit"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-package-third_party-folder.patch",
    "patches/0002-Fix-error-that-FileCheck-is-already-defined.patch",
    "patches/0003-properly-point-to-triton-includes.patch",
    "patches/0004-Avoid-using-outdated-FindLLVM.patch",
    "patches/0005-Unvendor-third-party-libs.patch",
    "patches/0006-Avoid-pip-check-error-as-cmake-is-not-a-python-modul.patch",
    "patches/0007-Fix-TableGen-issues.patch",
    "patches/0008-Search-for-libs-in-CONDA_PREFIX-instead-of-third_par.patch"
   ],
   "sha256": "19b6de0d0bcce86e973258d112169cd321b677146808bcc5fed7f69046775cfd",
   "url": "https://github.com/openai/triton/archive/refs/tags/v2.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "triton",
    "triton._C.libtriton"
   ],
   "requires": [
    "pip",
    "pytest",
    "scipy"
   ],
   "source_files": [
    "python/test"
   ]
  }
 },
 "name": "triton",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "triton"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/triton.json"
 },
 "raw_meta_yaml": "{% set version = \"2.0.0\" %}\n\npackage:\n  name: triton\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openai/triton/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 19b6de0d0bcce86e973258d112169cd321b677146808bcc5fed7f69046775cfd\n  patches:\n    - patches/0001-do-not-package-third_party-folder.patch\n    - patches/0002-Fix-error-that-FileCheck-is-already-defined.patch\n    - patches/0003-properly-point-to-triton-includes.patch\n    - patches/0004-Avoid-using-outdated-FindLLVM.patch\n    - patches/0005-Unvendor-third-party-libs.patch\n    - patches/0006-Avoid-pip-check-error-as-cmake-is-not-a-python-modul.patch\n    - patches/0007-Fix-TableGen-issues.patch\n    - patches/0008-Search-for-libs-in-CONDA_PREFIX-instead-of-third_par.patch\n\nbuild:\n  number: 4\n  # TODO: windows support should be available from next version;\n  #       CPU-only support still under development\n  skip: true  # [win or cuda_compiler_version == \"None\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - make\n    - cmake\n    - mlir\n    - llvmdev\n  host:\n    - python\n    - pybind11\n    - pip\n    - llvm\n    - libmlir\n    - zlib\n  run:\n    - python\n    - filelock\n    - pytorch =*=cuda*\n    - lit\n\ntest:\n  imports:\n    - triton\n    - triton._C.libtriton\n  requires:\n    - pip\n    - pytest\n    - scipy\n  source_files:\n    - python/test\n  commands:\n    - pip check\n    # test suite essentially depends on availability of a physical GPU,\n    # see https://github.com/openai/triton/issues/466;\n    # - pytest -v python/test\n\nabout:\n  home: https://github.com/openai/triton\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Development repository for the Triton language and compiler\n  description: |\n    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\n    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n  doc_url: https://triton-lang.org/\n  dev_url: https://github.com/openai/triton\n\nextra:\n  recipe-maintainers:\n    - erip\n    - h-vetinari\n",
 "req": {
  "__set__": true,
  "elements": [
   "cmake",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "filelock",
   "libmlir",
   "lit",
   "llvm",
   "llvmdev",
   "make",
   "mlir",
   "pip",
   "pybind11",
   "python",
   "pytorch",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "llvmdev",
    "make",
    "mlir"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "libmlir",
    "llvm",
    "pip",
    "pybind11",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "filelock",
    "lit",
    "python",
    "pytorch"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "llvmdev",
    "make",
    "mlir"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libmlir",
    "llvm",
    "pip",
    "pybind11",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "filelock",
    "lit",
    "python",
    "pytorch =*=cuda*"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest",
    "scipy"
   ]
  }
 },
 "url": "https://github.com/openai/triton/archive/refs/tags/v2.0.0.tar.gz",
 "version": "2.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/triton.json"
 }
}