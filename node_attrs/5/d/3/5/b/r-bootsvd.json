{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "r-bootsvd",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "http://arxiv.org/abs/1405.0922",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Implements fast, exact bootstrap Principal Component Analysis and Singular Value Decompositions for high dimensional data, as described in <doi:10.1080/01621459.2015.1062383> (see also <arXiv:1405.0922> ). For data matrices that are too large to operate on in memory, users can input objects with class 'ff' (see the 'ff' package), where the actual data is stored on disk. In response, this package will implement a block matrix algebra procedure for calculating the principal components (PCs) and bootstrap PCs. Depending on options set by the user, the 'parallel' package can be used to parallelize the calculation of the bootstrap PCs."
  },
  "build": {
   "noarch": "generic",
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "TCLamnidis"
   ]
  },
  "package": {
   "name": "r-bootsvd",
   "version": "1.1"
  },
  "requirements": {
   "build": [],
   "host": [
    "r-base",
    "r-ff"
   ],
   "run": [
    "r-base",
    "r-ff"
   ]
  },
  "source": {
   "sha256": "29eeabd85c47c284f655093399c4ba96b0aad958933eb776a2dbc1bfd1c6a399",
   "url": [
    "https://cran.r-project.org/src/contrib/bootSVD_1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bootSVD/bootSVD_1.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('bootSVD')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "http://arxiv.org/abs/1405.0922",
   "license": "GPL-2.0-only",
   "license_family": "GPL2",
   "license_file": [
    "/lib/R/share/licenses/GPL-2"
   ],
   "summary": "Implements fast, exact bootstrap Principal Component Analysis and Singular Value Decompositions for high dimensional data, as described in <doi:10.1080/01621459.2015.1062383> (see also <arXiv:1405.0922> ). For data matrices that are too large to operate on in memory, users can input objects with class 'ff' (see the 'ff' package), where the actual data is stored on disk. In response, this package will implement a block matrix algebra procedure for calculating the principal components (PCs) and bootstrap PCs. Depending on options set by the user, the 'parallel' package can be used to parallelize the calculation of the bootstrap PCs."
  },
  "build": {
   "noarch": "generic",
   "number": "1",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "TCLamnidis"
   ]
  },
  "package": {
   "name": "r-bootsvd",
   "version": "1.1"
  },
  "requirements": {
   "build": [],
   "host": [
    "r-base",
    "r-ff"
   ],
   "run": [
    "r-base",
    "r-ff"
   ]
  },
  "source": {
   "sha256": "29eeabd85c47c284f655093399c4ba96b0aad958933eb776a2dbc1bfd1c6a399",
   "url": [
    "https://cran.r-project.org/src/contrib/bootSVD_1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bootSVD/bootSVD_1.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('bootSVD')\""
   ]
  }
 },
 "name": "r-bootsvd",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-bootsvd"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/r-bootsvd.json"
 },
 "raw_meta_yaml": "{% set version = '1.1' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-bootsvd\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/bootSVD_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/bootSVD/bootSVD_{{ version }}.tar.gz\n  sha256: 29eeabd85c47c284f655093399c4ba96b0aad958933eb776a2dbc1bfd1c6a399\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-ff\n  run:\n    - r-base\n    - r-ff\n\ntest:\n  commands:\n    - $R -e \"library('bootSVD')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('bootSVD')\\\"\"  # [win]\n\nabout:\n  home: http://arxiv.org/abs/1405.0922\n  license: GPL-2.0-only\n  summary: Implements fast, exact bootstrap Principal Component Analysis and Singular Value Decompositions\n    for high dimensional data, as described in <doi:10.1080/01621459.2015.1062383> (see\n    also <arXiv:1405.0922> ). For data matrices that are too large to operate on in\n    memory, users can input objects with class 'ff' (see the 'ff' package), where the\n    actual data is stored on disk. In response, this package will implement a block\n    matrix algebra procedure for calculating the principal components (PCs) and bootstrap\n    PCs. Depending on options set by the user, the 'parallel' package can be used to\n    parallelize the calculation of the bootstrap PCs.\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - TCLamnidis\n\n# Package: bootSVD\n# Title: Fast, Exact Bootstrap Principal Component Analysis for High Dimensional Data\n# Description: Implements fast, exact bootstrap Principal Component Analysis and Singular Value Decompositions for high dimensional data, as described in <doi:10.1080/01621459.2015.1062383> (see also <arXiv:1405.0922> ). For data matrices that are too large to operate on in memory, users can input objects with class 'ff' (see the 'ff' package), where the actual data is stored on disk. In response, this package will implement a block matrix algebra procedure for calculating the principal components (PCs) and bootstrap PCs. Depending on options set by the user, the 'parallel' package can be used to parallelize the calculation of the bootstrap PCs.\n# Version: 1.1\n# Author: Aaron Fisher <afishe27@alumni.jh.edu>\n# Maintainer: Aaron Fisher <afishe27@alumni.jh.edu>\n# URL: http://arxiv.org/abs/1405.0922\n# Depends: R (>= 3.0.2)\n# Imports: ff, parallel\n# License: GPL-2\n# LazyData: true\n# RoxygenNote: 6.0.1\n# NeedsCompilation: no\n# Packaged: 2021-02-01 22:28:49 UTC; aaronfisher\n# Repository: CRAN\n# Date/Publication: 2021-02-02 10:20:12 UTC\n",
 "req": {
  "__set__": true,
  "elements": [
   "r-base",
   "r-ff"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-ff"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/bootSVD_1.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/bootSVD/bootSVD_1.1.tar.gz"
 ],
 "version": "1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/r-bootsvd.json"
 }
}