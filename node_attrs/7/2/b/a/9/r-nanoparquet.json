{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "error_overlinking": true
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "r-nanoparquet",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/r-lib/nanoparquet, https://r-lib.github.io/nanoparquet/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE",
    "inst/COPYRIGHTS"
   ],
   "summary": "Self-sufficient reader and writer for flat 'Parquet' files. Can read most 'Parquet' data types. Can write many 'R' data types, including factors and temporal types. See docs for limitations."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "dlaehnemann"
   ]
  },
  "package": {
   "name": "r-nanoparquet",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "3171e227c94ca96daab80bea2cc081f6735d8d09a2455bc1a5964ef86fa22b9d",
   "url": [
    "https://cran.r-project.org/src/contrib/nanoparquet_0.3.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/nanoparquet/nanoparquet_0.3.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('nanoparquet')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/r-lib/nanoparquet, https://r-lib.github.io/nanoparquet/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE",
    "inst/COPYRIGHTS"
   ],
   "summary": "Self-sufficient reader and writer for flat 'Parquet' files. Can read most 'Parquet' data types. Can write many 'R' data types, including factors and temporal types. See docs for limitations."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "dlaehnemann"
   ]
  },
  "package": {
   "name": "r-nanoparquet",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "3171e227c94ca96daab80bea2cc081f6735d8d09a2455bc1a5964ef86fa22b9d",
   "url": [
    "https://cran.r-project.org/src/contrib/nanoparquet_0.3.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/nanoparquet/nanoparquet_0.3.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('nanoparquet')\""
   ]
  }
 },
 "name": "r-nanoparquet",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/r-lib/nanoparquet, https://r-lib.github.io/nanoparquet/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE",
    "inst/COPYRIGHTS"
   ],
   "summary": "Self-sufficient reader and writer for flat 'Parquet' files. Can read most 'Parquet' data types. Can write many 'R' data types, including factors and temporal types. See docs for limitations."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r",
    "dlaehnemann"
   ]
  },
  "package": {
   "name": "r-nanoparquet",
   "version": "0.3.1"
  },
  "requirements": {
   "build": [
    "c_stdlib_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base"
   ],
   "run": [
    "r-base"
   ]
  },
  "source": {
   "sha256": "3171e227c94ca96daab80bea2cc081f6735d8d09a2455bc1a5964ef86fa22b9d",
   "url": [
    "https://cran.r-project.org/src/contrib/nanoparquet_0.3.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/nanoparquet/nanoparquet_0.3.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('nanoparquet')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-nanoparquet"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/r-nanoparquet.json"
 },
 "raw_meta_yaml": "{% set version = '0.3.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-nanoparquet\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/nanoparquet_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/nanoparquet/nanoparquet_{{ version }}.tar.gz\n  sha256: 3171e227c94ca96daab80bea2cc081f6735d8d09a2455bc1a5964ef86fa22b9d\n\nbuild:\n  skip: true  # [win]\n  merge_build_host: True  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n\ntest:\n  commands:\n    - $R -e \"library('nanoparquet')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('nanoparquet')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/r-lib/nanoparquet, https://r-lib.github.io/nanoparquet/\n  license: MIT\n  summary: Self-sufficient reader and writer for flat 'Parquet' files. Can read most 'Parquet'\n    data types. Can write many 'R' data types, including factors and temporal types.\n    See docs for limitations.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n    - inst/COPYRIGHTS\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - dlaehnemann\n\n# Package: nanoparquet\n# Title: Read and Write 'Parquet' Files\n# Version: 0.3.1\n# Authors@R: c( person(\"Gabor\", \"Csardi\", role = c(\"aut\", \"cre\"), email = \"csardi.gabor@gmail.com\"), person(\"Hannes\", \"Muhleisen\", role = c(\"aut\", \"cph\"), comment = c(ORCID = \"0000-0001-8552-0029\")), person(\"Google Inc.\", role = \"cph\"), person(\"Apache Software Foundation\", role = \"cph\"), person(\"Posit Software, PBC\", role = \"cph\"), person(\"RAD Game Tools\", role = \"cph\"), person(\"Valve Software\", role = \"cph\"), person(\"Tenacious Software LLC\", role = \"cph\"), person(\"Facebook, Inc.\", role = \"cph\"))\n# Description: Self-sufficient reader and writer for flat 'Parquet' files. Can read most 'Parquet' data types. Can write many 'R' data types, including factors and temporal types. See docs for limitations.\n# Depends: R (>= 4.0.0)\n# License: MIT + file LICENSE\n# URL: https://github.com/r-lib/nanoparquet, https://r-lib.github.io/nanoparquet/\n# BugReports: https://github.com/r-lib/nanoparquet/issues\n# Encoding: UTF-8\n# Suggests: arrow, bit64, DBI, duckdb, hms, mockery, pillar, processx, rprojroot, spelling, testthat, withr\n# RoxygenNote: 7.3.1\n# Config/testthat/edition: 3\n# Config/Needs/website: tidyverse/tidytemplate\n# Language: en-US\n# NeedsCompilation: yes\n# Packaged: 2024-07-01 11:36:06 UTC; gaborcsardi\n# Author: Gabor Csardi [aut, cre], Hannes Muhleisen [aut, cph] (<https://orcid.org/0000-0001-8552-0029>), Google Inc. [cph], Apache Software Foundation [cph], Posit Software, PBC [cph], RAD Game Tools [cph], Valve Software [cph], Tenacious Software LLC [cph], Facebook, Inc. [cph]\n# Maintainer: Gabor Csardi <csardi.gabor@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2024-07-01 17:10:02 UTC\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "c_stdlib_stub",
   "cxx_compiler_stub",
   "make",
   "r-base"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": [
  "https://cran.r-project.org/src/contrib/nanoparquet_0.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/nanoparquet/nanoparquet_0.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/nanoparquet_0.3.1.tar.gz",
  "https://cran.r-project.org/src/contrib/Archive/nanoparquet/nanoparquet_0.3.1.tar.gz"
 ],
 "version": "0.3.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/r-nanoparquet.json"
 }
}