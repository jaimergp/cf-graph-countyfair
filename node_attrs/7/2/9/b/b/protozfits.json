{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "test_on_native_only": true
 },
 "feedstock_name": "protozfits",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "protozfits are the python bindings for reading the protozfits raw data format,\nwhich is a prototype raw data format build in FITS and Protocol Buffers for\nthe data of the Cherenkov Telescope Array.\n",
   "dev_url": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "home": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python bindings the CTA zfits reader"
  },
  "build": {
   "number": "5",
   "script": [
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise"
   ]
  },
  "package": {
   "name": "protozfits",
   "version": "2.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib"
   ],
   "run": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch"
   ],
   "sha256": "9803d604f60f2d996cedecc056505f4b72d9d23c056ef335e57b714bf37368c8",
   "url": "https://pypi.io/packages/source/p/protozfits/protozfits-2.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "protobuf",
    "python",
    "setuptools",
    "zeromq",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "protozfits are the python bindings for reading the protozfits raw data format,\nwhich is a prototype raw data format build in FITS and Protocol Buffers for\nthe data of the Cherenkov Telescope Array.\n",
   "dev_url": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "home": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python bindings the CTA zfits reader"
  },
  "build": {
   "number": "5",
   "script": [
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise"
   ]
  },
  "package": {
   "name": "protozfits",
   "version": "2.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib"
   ],
   "run": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch"
   ],
   "sha256": "9803d604f60f2d996cedecc056505f4b72d9d23c056ef335e57b714bf37368c8",
   "url": "https://pypi.io/packages/source/p/protozfits/protozfits-2.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "protozfits",
 "osx_64_meta_yaml": {
  "about": {
   "description": "protozfits are the python bindings for reading the protozfits raw data format,\nwhich is a prototype raw data format build in FITS and Protocol Buffers for\nthe data of the Cherenkov Telescope Array.\n",
   "dev_url": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "home": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python bindings the CTA zfits reader"
  },
  "build": {
   "number": "5",
   "script": [
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise"
   ]
  },
  "package": {
   "name": "protozfits",
   "version": "2.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib"
   ],
   "run": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch"
   ],
   "sha256": "9803d604f60f2d996cedecc056505f4b72d9d23c056ef335e57b714bf37368c8",
   "url": "https://pypi.io/packages/source/p/protozfits/protozfits-2.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "protobuf",
    "python",
    "setuptools",
    "zeromq",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "protozfits are the python bindings for reading the protozfits raw data format,\nwhich is a prototype raw data format build in FITS and Protocol Buffers for\nthe data of the Cherenkov Telescope Array.\n",
   "dev_url": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "home": "https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python bindings the CTA zfits reader"
  },
  "build": {
   "number": "5",
   "script": [
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv",
    "PYTHON -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise",
    "maxnoe",
    "dneise"
   ]
  },
  "package": {
   "name": "protozfits",
   "version": "2.3.0"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cmake",
    "make"
   ],
   "host": [
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib",
    "pip",
    "python",
    "protobuf",
    "libabseil",
    "libprotobuf",
    "setuptools",
    "zeromq",
    "zlib"
   ],
   "run": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib",
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch",
    "patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch",
    "patches/0002-compatibility-with-C-17.patch",
    "patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch",
    "patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch"
   ],
   "sha256": "9803d604f60f2d996cedecc056505f4b72d9d23c056ef335e57b714bf37368c8",
   "url": "https://pypi.io/packages/source/p/protozfits/protozfits-2.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits",
    "protozfits",
    "protozfits.rawzfits"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "protobuf",
    "python",
    "setuptools",
    "zeromq",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "protozfits"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/protozfits.json"
 },
 "raw_meta_yaml": "{% set version = \"2.3.0\" %}\n\npackage:\n  name: protozfits\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/protozfits/protozfits-{{ version }}.tar.gz\n  sha256: 9803d604f60f2d996cedecc056505f4b72d9d23c056ef335e57b714bf37368c8\n  patches:\n    - patches/0001-Add-support-for-CMAKE_ARGS-in-setup.py-to-enable-con.patch\n    - patches/0002-compatibility-with-C-17.patch\n    - patches/0003-do-not-enforce-old-protobuf-version-in-installation-.patch\n    - patches/0004-ensure-DProtobuf_PROTOC_EXECUTABLE-.-is-respected.patch\n\nbuild:\n  number: 5\n  script:\n    - export CMAKE_ARGS=\"${CMAKE_ARGS} -DProtobuf_PROTOC_EXECUTABLE=$BUILD_PREFIX/bin/protoc\"  # [build_platform != target_platform]\n    - {{ PYTHON }} -m pip install . -vv\n  skip: true  # [win]\n  skip: true  # [python_impl == 'pypy']\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - cmake\n    - make   # [not win]\n    - ninja  # [win]\n    # for enabling m1 cross compilation\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - protobuf                               # [build_platform != target_platform]\n    - libprotobuf                            # [build_platform != target_platform]\n    - setuptools                             # [build_platform != target_platform]\n    - zeromq                                 # [build_platform != target_platform]\n    - zlib                                   # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n    - protobuf\n    - libabseil\n    - libprotobuf\n    - setuptools\n    - zeromq\n    - zlib\n  run:\n    - astropy\n    - numpy\n    - protobuf\n    - python\n    - zeromq\n    - zlib\n\ntest:\n  imports:\n    - protozfits\n    - protozfits.rawzfits\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Python bindings the CTA zfits reader\n  description: |\n    protozfits are the python bindings for reading the protozfits raw data format,\n    which is a prototype raw data format build in FITS and Protocol Buffers for\n    the data of the Cherenkov Telescope Array.\n  dev_url: https://gitlab.cta-observatory.org/cta-computing/common/acada-array-elements/adh-apis\n\nextra:\n  recipe-maintainers:\n    - maxnoe\n    - dneise\n",
 "req": {
  "__set__": true,
  "elements": [
   "astropy",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "libabseil",
   "libprotobuf",
   "make",
   "numpy",
   "pip",
   "protobuf",
   "python",
   "setuptools",
   "zeromq",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libabseil",
    "libprotobuf",
    "pip",
    "protobuf",
    "python",
    "setuptools",
    "zeromq",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "protobuf",
    "python",
    "setuptools",
    "zeromq",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "astropy",
    "numpy",
    "protobuf",
    "python",
    "zeromq",
    "zlib"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/protozfits/protozfits-2.3.0.tar.gz",
 "version": "2.3.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/protozfits.json"
 }
}