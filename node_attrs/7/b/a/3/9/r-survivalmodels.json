{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "r-survivalmodels",
 "hash_type": "md5",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/RaphaelS1/survivalmodels/",
   "home": "https://raphaels1.github.io/survivalmodels/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Implementations of classical and machine learning models for survival analysis, including deep neural networks via 'keras' and 'tensorflow'. Each model includes a separated fit and predict interface with consistent prediction types for predicting risk, survival probabilities, or survival distributions with 'distr6' <https://CRAN.R-project.org/package=distr6>. Models are either implemented from 'Python' via 'reticulate' <https://CRAN.R-project.org/package=reticulate>, from code in GitHub packages, or novel implementations using 'Rcpp' <https://CRAN.R-project.org/package=Rcpp>. Novel machine learning survival models wil be included in the package in near-future updates. Neural networks are implemented from the 'Python' package 'pycox' <https://github.com/havakv/pycox> and are detailed by Kvamme et al. (2019) <https://jmlr.org/papers/v20/18-424.html>. The 'Akritas' estimator is defined in Akritas (1994) <doi:10.1214/aos/1176325630>. 'DNNSurv' is defined in Zhao and Feng (2020) <arXiv:1908.02337>."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-survivalmodels",
   "version": "0.1.19"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-rcpp >=1.0.5"
   ],
   "run": [
    "r-base",
    "r-rcpp >=1.0.5"
   ]
  },
  "source": {
   "md5": "8fb08056b97f623385f676590078b7b5",
   "url": "https://raphaels1.r-universe.dev/src/contrib/survivalmodels_0.1.19.tar.gz"
  },
  "test": {
   "commands": [
    "$R -e \"library('survivalmodels')\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/RaphaelS1/survivalmodels/",
   "home": "https://raphaels1.github.io/survivalmodels/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Implementations of classical and machine learning models for survival analysis, including deep neural networks via 'keras' and 'tensorflow'. Each model includes a separated fit and predict interface with consistent prediction types for predicting risk, survival probabilities, or survival distributions with 'distr6' <https://CRAN.R-project.org/package=distr6>. Models are either implemented from 'Python' via 'reticulate' <https://CRAN.R-project.org/package=reticulate>, from code in GitHub packages, or novel implementations using 'Rcpp' <https://CRAN.R-project.org/package=Rcpp>. Novel machine learning survival models wil be included in the package in near-future updates. Neural networks are implemented from the 'Python' package 'pycox' <https://github.com/havakv/pycox> and are detailed by Kvamme et al. (2019) <https://jmlr.org/papers/v20/18-424.html>. The 'Akritas' estimator is defined in Akritas (1994) <doi:10.1214/aos/1176325630>. 'DNNSurv' is defined in Zhao and Feng (2020) <arXiv:1908.02337>."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-survivalmodels",
   "version": "0.1.19"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "filesystem",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-rcpp >=1.0.5"
   ],
   "run": [
    "r-base",
    "r-rcpp >=1.0.5",
    "gcc-libs"
   ]
  },
  "source": {
   "md5": "8fb08056b97f623385f676590078b7b5",
   "url": "https://raphaels1.r-universe.dev/src/contrib/survivalmodels_0.1.19.tar.gz"
  },
  "test": {
   "commands": [
    "$R -e \"library('survivalmodels')\"",
    "\"%R%\" -e \"library('survivalmodels')\""
   ]
  }
 },
 "name": "r-survivalmodels",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/RaphaelS1/survivalmodels/",
   "home": "https://raphaels1.github.io/survivalmodels/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Implementations of classical and machine learning models for survival analysis, including deep neural networks via 'keras' and 'tensorflow'. Each model includes a separated fit and predict interface with consistent prediction types for predicting risk, survival probabilities, or survival distributions with 'distr6' <https://CRAN.R-project.org/package=distr6>. Models are either implemented from 'Python' via 'reticulate' <https://CRAN.R-project.org/package=reticulate>, from code in GitHub packages, or novel implementations using 'Rcpp' <https://CRAN.R-project.org/package=Rcpp>. Novel machine learning survival models wil be included in the package in near-future updates. Neural networks are implemented from the 'Python' package 'pycox' <https://github.com/havakv/pycox> and are detailed by Kvamme et al. (2019) <https://jmlr.org/papers/v20/18-424.html>. The 'Akritas' estimator is defined in Akritas (1994) <doi:10.1214/aos/1176325630>. 'DNNSurv' is defined in Zhao and Feng (2020) <arXiv:1908.02337>."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-survivalmodels",
   "version": "0.1.19"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "r-base",
    "r-rcpp >=1.0.5"
   ],
   "run": [
    "r-base",
    "r-rcpp >=1.0.5"
   ]
  },
  "source": {
   "md5": "8fb08056b97f623385f676590078b7b5",
   "url": "https://raphaels1.r-universe.dev/src/contrib/survivalmodels_0.1.19.tar.gz"
  },
  "test": {
   "commands": [
    "$R -e \"library('survivalmodels')\""
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "r-survivalmodels"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/r-survivalmodels.json"
 },
 "raw_meta_yaml": "{% set version = \"0.1.19\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-survivalmodels\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url: https://raphaels1.r-universe.dev/src/contrib/survivalmodels_{{ version }}.tar.gz\n  md5: 8fb08056b97f623385f676590078b7b5\n\nbuild:\n  merge_build_host: true  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp >=1.0.5\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-rcpp >=1.0.5\n\ntest:\n  commands:\n    - $R -e \"library('survivalmodels')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('survivalmodels')\\\"\"  # [win]\n\nabout:\n  home: https://raphaels1.github.io/survivalmodels/\n  dev_url: https://github.com/RaphaelS1/survivalmodels/\n  license: MIT\n  summary: Implementations of classical and machine learning models for survival analysis, including deep neural networks via 'keras' and 'tensorflow'. Each model includes a separated fit and predict interface with consistent prediction types for predicting risk, survival probabilities, or survival distributions with 'distr6'\n    <https://CRAN.R-project.org/package=distr6>. Models are either implemented from 'Python' via 'reticulate' <https://CRAN.R-project.org/package=reticulate>, from code in GitHub packages, or novel implementations using 'Rcpp' <https://CRAN.R-project.org/package=Rcpp>. Novel machine learning survival models wil be included\n    in the package in near-future updates. Neural networks are implemented from the 'Python' package 'pycox' <https://github.com/havakv/pycox> and are detailed by Kvamme et al. (2019) <https://jmlr.org/papers/v20/18-424.html>. The 'Akritas' estimator is defined in Akritas (1994) <doi:10.1214/aos/1176325630>. 'DNNSurv' is\n    defined in Zhao and Feng (2020) <arXiv:1908.02337>.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "coreutils",
   "cxx_compiler_stub",
   "filesystem",
   "gcc-libs",
   "m2w64_c_compiler_stub",
   "m2w64_cxx_compiler_stub",
   "make",
   "r-base",
   "r-rcpp",
   "sed",
   "zip"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "r-base",
    "r-rcpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "gcc-libs",
    "r-base",
    "r-rcpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "coreutils",
    "cxx_compiler_stub",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp >=1.0.5"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base",
    "r-rcpp >=1.0.5"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://raphaels1.r-universe.dev/src/contrib/survivalmodels_0.1.19.tar.gz",
 "version": "0.1.19",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/r-survivalmodels.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/RaphaelS1/survivalmodels/",
   "home": "https://raphaels1.github.io/survivalmodels/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Implementations of classical and machine learning models for survival analysis, including deep neural networks via 'keras' and 'tensorflow'. Each model includes a separated fit and predict interface with consistent prediction types for predicting risk, survival probabilities, or survival distributions with 'distr6' <https://CRAN.R-project.org/package=distr6>. Models are either implemented from 'Python' via 'reticulate' <https://CRAN.R-project.org/package=reticulate>, from code in GitHub packages, or novel implementations using 'Rcpp' <https://CRAN.R-project.org/package=Rcpp>. Novel machine learning survival models wil be included in the package in near-future updates. Neural networks are implemented from the 'Python' package 'pycox' <https://github.com/havakv/pycox> and are detailed by Kvamme et al. (2019) <https://jmlr.org/papers/v20/18-424.html>. The 'Akritas' estimator is defined in Akritas (1994) <doi:10.1214/aos/1176325630>. 'DNNSurv' is defined in Zhao and Feng (2020) <arXiv:1908.02337>."
  },
  "build": {
   "merge_build_host": true,
   "number": "0",
   "rpaths": [
    "lib/R/lib/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-survivalmodels",
   "version": "0.1.19"
  },
  "requirements": {
   "build": [
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "filesystem",
    "make",
    "sed",
    "coreutils",
    "zip"
   ],
   "host": [
    "r-base",
    "r-rcpp >=1.0.5"
   ],
   "run": [
    "r-base",
    "gcc-libs",
    "r-rcpp >=1.0.5"
   ]
  },
  "source": {
   "md5": "8fb08056b97f623385f676590078b7b5",
   "url": "https://raphaels1.r-universe.dev/src/contrib/survivalmodels_0.1.19.tar.gz"
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('survivalmodels')\""
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "coreutils",
    "filesystem",
    "m2w64_c_compiler_stub",
    "m2w64_cxx_compiler_stub",
    "make",
    "sed",
    "zip"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "r-base",
    "r-rcpp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "gcc-libs",
    "r-base",
    "r-rcpp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}