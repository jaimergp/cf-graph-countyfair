{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "abi_migration_branches": [
    "16.x",
    "15.x"
   ]
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "win": "azure"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "clangdev",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0",
   "skip": true
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-64",
      "sysroot_linux-64",
      "libgcc-devel_linux-64",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-64",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3"
   ],
   "host": [
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libgcc-devel_linux-64",
    "libstdcxx-devel_linux-64",
    "llvmdev",
    "python",
    "sysroot_linux-64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0",
   "skip": true
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-aarch64",
      "sysroot_linux-aarch64",
      "libgcc-devel_linux-aarch64",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-aarch64",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3"
   ],
   "host": [
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-aarch64",
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libgcc-devel_linux-aarch64",
    "libstdcxx-devel_linux-aarch64",
    "llvmdev",
    "python",
    "sysroot_linux-aarch64"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0",
   "skip": true
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-ppc64le",
      "sysroot_linux-ppc64le",
      "libgcc-devel_linux-ppc64le",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-ppc64le",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3"
   ],
   "host": [
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-ppc64le",
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libgcc-devel_linux-ppc64le",
    "libstdcxx-devel_linux-ppc64le",
    "llvmdev",
    "python",
    "sysroot_linux-ppc64le"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0",
   "skip": true
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari",
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-64",
      "sysroot_linux-64",
      "libgcc-devel_linux-64",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-64",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-aarch64",
      "sysroot_linux-aarch64",
      "libgcc-devel_linux-aarch64",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-aarch64",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so.18.1"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang-cpp.so"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so.13"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so.13\"",
      "test ! -f \"$PREFIX/lib/libclang.so\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18\"",
      "test ! -f \"$PREFIX/lib/libclang.so.18.1.1\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/libclang.so"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.so\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.so\"",
      "test -f \"$PREFIX/lib/libclang-cpp.so.18.1\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "binutils_impl_linux-ppc64le",
      "sysroot_linux-ppc64le",
      "libgcc-devel_linux-ppc64le",
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libstdcxx-devel_linux-ppc64le",
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "hcc_h1234567_0",
     "track_features": [
      "hcc"
     ]
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "hcc_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.18.1.dylib"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.dylib"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.13.dylib"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.13.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.1.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.dylib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "libcxx"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.18.1.dylib"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.dylib"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.13.dylib"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.13.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.1.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.dylib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "libcxx"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "run_exports": null,
     "skip": true,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": null,
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/bin/libclang-13.dll"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libclang-13.dll exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang.dll exit 1",
      "if exist %LIBRARY_LIB%\\\\libclang.lib exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang-18.dll exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang-18.1.1.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/lib/libclang.lib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\\\libclang.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/lib/clang",
     "Library/bin/clang-18.exe"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.bat",
    "test": {
     "commands": [
      "clang-18 --version",
      "if exist %LIBRARY_BIN%\\\\clang.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1",
      "if not exist %LIBRARY_LIB%\\\\clang\\\\18\\\\include\\\\stdatomic.h exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.bat",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.bat",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "set \"CONDA_BUILD_SYSROOT=\"",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "skip": true,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": null,
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "clang-format-18 --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/bin/clang-format.exe"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_clang_format.bat",
    "test": {
     "commands": [
      "clang-format --version",
      "if exist %LIBRARY_BIN%\\\\c-index-test.exe exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "ucrt",
      "clang-format",
      "libclang13"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.bat",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "m2w64-xz",
    "python >3"
   ],
   "host": [
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd",
    "libcxx 16",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   },
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   },
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   },
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0006-Only-error-on-undefined-TARGET_OS_OSX.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   },
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   },
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a",
    "%LIBRARY_BIN%/clang -v -c mytest.c",
    "if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1"
   ],
   "files": [
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c",
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "name": "clang_packages",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.18.1.dylib"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.dylib"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.13.dylib"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.13.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.1.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.dylib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "libcxx"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3"
   ],
   "host": [
    "libcxx 16",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0006-Only-error-on-undefined-TARGET_OS_OSX.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "libcxx",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/include/clang/Config/config.h\"",
      "test -f \"$PREFIX/lib/libclangAST.a\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.18.1.dylib"
    ],
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang-cpp18.1"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang-cpp.dylib"
    ],
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_libclang_cpp.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang-cpp.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.13.dylib"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.13.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.dylib\"",
      "test ! -f \"$PREFIX/lib/libclang.18.1.1.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/libclang.dylib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang13"
     ]
    },
    "script": "install_libclang.sh",
    "test": {
     "commands": [
      "test -f \"$PREFIX/lib/libclang.dylib\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "lib/clang",
     "bin/clang-18"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "make",
      "libcxx"
     ],
     "host": [
      "llvm ==18.1.1",
      "libclang-cpp18.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.sh",
    "test": {
     "commands": [
      "clang-18 --version",
      "test ! -f \"$PREFIX/bin/clang\"",
      "test ! -f \"$PREFIX/bin/clang-cl\"",
      "test ! -f \"$PREFIX/bin/clang-cpp\"",
      "test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"",
      "test -f \"$PREFIX/lib/libclang-cpp.18.1.dylib\"",
      "test -f \"$PREFIX/lib/clang/18/include/stdatomic.h\""
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.sh",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.sh",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "unset CONDA_BUILD_SYSROOT",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "libxml2",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format-18"
    ],
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format-18 --version",
      "test ! -f ${PREFIX}/bin/clang-format",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "bin/clang-format"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format-18",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "libclang-cpp18.1",
      "clang-format-18"
     ]
    },
    "script": "install_clang_format.sh",
    "test": {
     "commands": [
      "clang-format --version",
      "test ! -f ${PREFIX}/bin/c-index-test"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "make"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "libcxx 16",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libcxx",
      "clang-format",
      "libclang13",
      "libclang-cpp18.1"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.sh",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "make",
    "python >3"
   ],
   "host": [
    "libcxx 16",
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "$PREFIX/bin/clang --version",
    "$PREFIX/bin/clang++ --version",
    "$PREFIX/bin/clang-check --version",
    "$PREFIX/bin/clang -v -c mytest.c",
    "test -f $PREFIX/include/clang/Lex/Lexer.h",
    "test -f $PREFIX/lib/libclangBasic.a"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "make",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "llvmdev",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "clang",
   "clang-18",
   "clang-format",
   "clang-format-18",
   "clang-tools",
   "clangdev",
   "clangxx",
   "libclang",
   "libclang-cpp",
   "libclang-cpp18.1",
   "libclang13",
   "python-clang"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/clangdev.json"
 },
 "raw_meta_yaml": "{% set version = \"18.1.1\" %}\n{% set major_version = version.split(\".\")[0] %}\n{% set build_number = 0 %}\n\n# always includes minor as of v18, see https://github.com/llvm/llvm-project/issues/76273\n{% set minor_aware_ext = major_version ~ \".\" ~ version.split(\".\")[1] %}\n{% if version.split(\".\")[-1].startswith(\"rc\") %}\n{% set minor_aware_ext = minor_aware_ext ~ \"rc\" %}\n{% elif version.split(\".\")[-1] == \"dev0\" %}\n{% set minor_aware_ext = minor_aware_ext ~ \"git\" %}\n{% endif %}\n\n{% if libclang_soversion is not defined %}\n# see https://github.com/llvm/llvm-project/blob/release/18.x/clang/tools/libclang/CMakeLists.txt\n{% set libclang_soversion = \"13\" %}\n{% endif %}\n\npackage:\n  name: clang_packages\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}/llvm-project-{{ version.replace(\".rc\", \"rc\") }}.src.tar.xz\n    sha256: 8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad\n    patches:\n      - patches/0001-Fix-sysroot-detection-for-linux.patch\n      - patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch\n      - patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch\n      - patches/0004-Set-VERSION-in-osx-as-well.patch\n      - patches/0005-Fix-crosscompiling-LLVM-tools.patch\n      # Disable -Werror,-Wundef-prefix=TARGET_OS as they are not yet defined in the 10.9 SDK used for osx-64\n      # Only enable it for TARGET_OS_OSX.\n      - patches/0006-Only-error-on-undefined-TARGET_OS_OSX.patch  # [osx and x86_64]\n      - patches/0007-set-libclang-SOVERSION-unconditionally.patch\n      - patches/0008-Make-PIE-default-on-macOS-too.patch\n      - patches/0009-Find-ROCm-device-library-in-conda-layout.patch\n      # check out git history before LLVM 16 for these patches\n      # - patches/amd-roc-2.7.0.diff   # [variant != \"hcc\"]\n      # - patches/amd-roc-hcc-2.7.0.diff  # [variant == \"hcc\"]\n    # name folder for easier deletion; we do the equivalent of downloading\n    # the subproject sources, so the work folder then has clang in it;\n    # for details see build scripts\n    folder: llvm-project\n\nbuild:\n  number: {{ build_number }}\n  skip: true  # [variant == \"hcc\"]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja  # [win]\n    - make   # [unix]\n    # Needed to unpack the source tarball\n    - m2w64-xz  # [win]\n    # \"compiling .pyc files\" fails without this\n    - python >3\n    - llvmdev =={{ version }}    # [build_platform != target_platform]\n    - libxml2                    # [build_platform != target_platform]\n    - zlib                       # [build_platform != target_platform]\n    - zstd                       # [build_platform != target_platform]\n  host:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    - llvmdev =={{ version }}\n    - libxml2\n    - zlib\n    - zstd\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n  files:\n    - mytest.c\n  commands:\n    - $PREFIX/bin/clang --version        # [unix]\n    - $PREFIX/bin/clang++ --version      # [unix]\n    - $PREFIX/bin/clang-check --version  # [unix]\n\n    - $PREFIX/bin/clang -v -c mytest.c      # [unix]\n    - '%LIBRARY_BIN%/clang -v -c mytest.c'  # [win]\n\n    - if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1  # [win]\n    - test -f $PREFIX/include/clang/Lex/Lexer.h      # [unix]\n    - test -f $PREFIX/lib/libclangBasic.a            # [unix]\n\n\noutputs:\n  - name: clangdev\n    script: install_clangdev.sh  # [unix]\n    script: install_clangdev.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - libxml2  # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n        - llvmdev =={{ version }}\n    test:\n      commands:\n        - test -f \"$PREFIX/include/clang/Config/config.h\"   # [unix]\n        - test -f \"$PREFIX/lib/libclangAST.a\"               # [unix]\n        - if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1   # [win]\n        - if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1            # [win]\n\n  - name: libclang-cpp{{ minor_aware_ext }}\n    script: install_libclang_cpp.sh  # [unix]\n    files:\n      - lib/libclang-cpp.so.{{ minor_aware_ext }}     # [linux]\n      - lib/libclang-cpp.{{ minor_aware_ext }}.dylib  # [osx]\n    build:\n      skip: true  # [win]\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - libxml2  # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - llvm =={{ version }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n    test:\n      commands:\n        - test ! -f \"$PREFIX/lib/libclang-cpp.so\"                             # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.so.{{ minor_aware_ext }}\"         # [linux]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"                          # [osx]\n        - test -f \"$PREFIX/lib/libclang-cpp.{{ minor_aware_ext }}.dylib\"      # [osx]\n\n  - name: libclang-cpp\n    # note that this is just an empty wrapper on windows\n    script: install_libclang_cpp.sh  # [unix]\n    files:   # [unix]\n      - lib/libclang-cpp.so     # [linux]\n      - lib/libclang-cpp.dylib  # [osx]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:   # [unix]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - libxml2  # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - llvm =={{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, exact=True) }}  # [unix]\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                        # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, exact=True) }}  # [unix]\n    test:\n      commands:\n        - test -f \"$PREFIX/lib/libclang-cpp.so\"                     # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.dylib\"                  # [osx]\n        - if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1           # [win]\n\n  - name: libclang{{ libclang_soversion }}\n    script: install_libclang.sh  # [unix]\n    script: install_libclang.bat  # [win]\n    files:\n      - Library/bin/libclang-13.dll  # [win]\n      - lib/libclang.so.13           # [linux]\n      - lib/libclang.13.dylib        # [osx]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        # note that the name (e.g. libclang13) does not necessarily\n        # match the version lower bound (e.g. >=14.0.0)\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                      # [win]\n        - make                       # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - llvm =={{ version }}\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n    test:\n      commands:\n        # presence of versioned libraries\n        - test -f \"$PREFIX/lib/libclang.so.{{ libclang_soversion }}\"                # [linux]\n        - test -f \"$PREFIX/lib/libclang.{{ libclang_soversion }}.dylib\"             # [osx]\n        - if not exist %LIBRARY_BIN%\\\\libclang-{{ libclang_soversion }}.dll exit 1  # [win]\n\n        # absence of unversioned libraries\n        - test ! -f \"$PREFIX/lib/libclang.so\"                              # [linux]\n        - test ! -f \"$PREFIX/lib/libclang.dylib\"                           # [osx]\n        - if exist %LIBRARY_BIN%\\\\libclang.dll exit 1                      # [win]\n        - if exist %LIBRARY_LIB%\\\\libclang.lib exit 1                      # [win]\n\n        {% if libclang_soversion != major_version %}\n        # absence of major version if soversion is different\n        - test ! -f \"$PREFIX/lib/libclang.so.{{ major_version }}\"          # [linux]\n        - test ! -f \"$PREFIX/lib/libclang.{{ major_version }}.dylib\"       # [osx]\n        - if exist %LIBRARY_BIN%\\\\libclang-{{ major_version }}.dll exit 1  # [win]\n\n        # same for full version (i.e. with major that doesn't match soversion)\n        - test ! -f \"$PREFIX/lib/libclang.so.{{ version }}\"                # [linux]\n        - test ! -f \"$PREFIX/lib/libclang.{{ version }}.dylib\"             # [osx]\n        - if exist %LIBRARY_BIN%\\\\libclang-{{ version }}.dll exit 1        # [win]\n        {% endif %}\n\n  - name: libclang\n    script: install_libclang.sh  # [unix]\n    script: install_libclang.bat  # [win]\n    files:\n      - Library/lib/libclang.lib  # [win]\n      - lib/libclang.so           # [linux]\n      - lib/libclang.dylib        # [osx]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        # note that the name (e.g. libclang13) does not necessarily\n        # match the version lower bound (e.g. >=14.0.0)\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - libxml2  # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                      # [win]\n        - make                       # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - llvm =={{ version }}\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                # [osx]\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, exact=True) }}\n    test:\n      commands:\n        - test -f \"$PREFIX/lib/libclang.so\"                # [linux]\n        - test -f \"$PREFIX/lib/libclang.dylib\"             # [osx]\n        - if not exist %LIBRARY_LIB%\\\\libclang.lib exit 1  # [win]\n\n  - name: clang-{{ major_version }}\n    script: install_clang.sh  # [unix]\n    script: install_clang.bat  # [win]\n    files:\n      - lib/clang                                  # [unix]\n      - bin/clang-{{ major_version }}              # [unix]\n      - Library/lib/clang                          # [win]\n      - Library/bin/clang-{{ major_version }}.exe  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                              # [win]\n        - make                               # [unix]\n        - libcxx                             # [osx]\n        - llvmdev =={{ version }}            # [build_platform != target_platform]\n      host:\n        - llvm =={{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, exact=True) }}  # [unix]\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                        # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, exact=True) }}  # [unix]\n      run_constrained:\n        - clangdev {{ version }}\n        - clangxx {{ version }}\n        - clang-tools {{ version }}\n        - llvm-tools {{ version }}\n    test:\n      commands:\n        - clang-{{ major_version }} --version\n        - test ! -f \"$PREFIX/bin/clang\"                                   # [unix]\n        - test ! -f \"$PREFIX/bin/clang-cl\"                                # [unix]\n        - test ! -f \"$PREFIX/bin/clang-cpp\"                               # [unix]\n        - if exist %LIBRARY_BIN%\\\\clang.exe exit 1                        # [win]\n        - if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1                     # [win]\n        - if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1                    # [win]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.so\"                         # [linux]\n        - test -f \"$PREFIX/lib/libclang-cpp.so.{{ minor_aware_ext }}\"     # [linux]\n        - test ! -f \"$PREFIX/lib/libclang-cpp.dylib\"                      # [osx]\n        - test -f \"$PREFIX/lib/libclang-cpp.{{ minor_aware_ext }}.dylib\"  # [osx]\n        - test -f \"$PREFIX/lib/clang/{{ version.split('.')[0] }}/include/stdatomic.h\"                    # [unix]\n        - if not exist %LIBRARY_LIB%\\\\clang\\\\{{ version.split('.')[0] }}\\\\include\\\\stdatomic.h exit 1    # [win]\n\n  - name: clang\n    script: install_clang_symlinks.sh  # [unix]\n    script: install_clang_symlinks.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      host:\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - binutils_impl_{{ target_platform }}  # [linux]\n        - sysroot_{{ target_platform }}        # [linux]\n        - libgcc-devel_{{ target_platform }}   # [linux]\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n    test:\n      commands:\n        - clang --version\n        - clang-cl --version\n        - clang-cpp --version\n\n  - name: clangxx\n    script: install_clangxx.sh  # [unix]\n    script: install_clangxx.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - libstdcxx-devel_{{ target_platform }}  # [linux]\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n    test:\n      requires:\n        - {{ compiler(\"cxx\") }}\n      files:\n        - mytest.cxx\n      commands:\n        - clang++ --version\n        - clang++ -v -c mytest.cxx\n        - unset CONDA_BUILD_SYSROOT   # [unix]\n        - set \"CONDA_BUILD_SYSROOT=\"  # [win]\n        - clang++ -v -c mytest.cxx\n\n  - name: clang-format-{{ major_version }}\n    script: install_clang_format.sh  # [unix]\n    files:\n      - bin/clang-format-{{ major_version }}                # [unix]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      # for windows, use the clang-format package.\n      skip: true  # [win]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - libxml2  # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ compiler('cxx') }}\n        - cmake\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - llvm =={{ version }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                            # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n    test:\n      commands:\n        - clang-format-{{ major_version }} --version\n        - test ! -f ${PREFIX}/bin/clang-format                   # [unix]\n        - test ! -f ${PREFIX}/bin/c-index-test                   # [unix]\n\n  - name: clang-format\n    script: install_clang_format.sh  # [unix]\n    script: install_clang_format.bat  # [win]\n    files:\n      - bin/clang-format               # [unix]\n      - Library/bin/clang-format.exe   # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2\n        - zlib\n        - zstd\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_subpackage(\"clang-format-\" ~ major_version, exact=True) }}      # [unix]\n        - llvm =={{ version }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}                           # [osx]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, max_pin=\"x.x\") }}  # [unix]\n        - {{ pin_subpackage(\"clang-format-\" ~ major_version, exact=True) }}      # [unix]\n    test:\n      commands:\n        - clang-format --version\n        - test ! -f ${PREFIX}/bin/c-index-test                   # [unix]\n        - if exist %LIBRARY_BIN%\\\\c-index-test.exe exit 1        # [win]\n\n  - name: clang-tools\n    script: install_clang_tools.sh  # [unix]\n    script: install_clang_tools.bat  # [win]\n    build:\n      track_features:\n        - hcc          # [variant==\"hcc\"]\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev =={{ version }}    # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_subpackage(\"clang-format\", exact=True) }}\n        - llvm =={{ version }}\n        # Use the same requirements as the top-level requirements\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - llvmdev =={{ version }}\n        - libxml2\n        - zlib\n        - zstd\n      run:\n        - ucrt                                          # [win]\n        - {{ pin_compatible(\"libcxx\", max_pin=None) }}  # [osx]\n        - {{ pin_subpackage(\"clang-format\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ minor_aware_ext, max_pin=\"x.x\") }}   # [unix]\n      run_constrained:\n        - clangdev {{ version }}\n    test:\n      commands:\n        - clang-check --version\n        - clang-tidy --version\n\n  - name: python-clang\n    build:\n      noarch: python\n      # Building this output using this recipe is only supported on unix\n      # It can still be installed on Windows as it is marked as `noarch: python`\n      skip: true  # [not linux64]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    script: build_python_bindings.sh\n    requirements:\n      host:\n        - python >=3.7\n      run:\n        - python >=3.7\n        - libclang =={{ version }}\n    test:\n      source_files:\n        - clang/bindings/python/tests\n        - clang/bindings/python/examples/cindex\n      imports:\n        - clang\n        - clang.cindex\n      commands:\n        - cd clang/bindings/python\n        - python -m unittest discover -v\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: clang/LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for Clang\n  dev_url: https://github.com/llvm/llvm-project\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - inducer\n    - isuruf\n    - jakirkham\n    - katietz\n    - SylvainCorlay\n    - timsnyder\n    - chrisburr\n    - xhochy\n    - h-vetinari\n  feedstock-name: clangdev\n",
 "req": {
  "__set__": true,
  "elements": [
   "binutils_impl_linux-64",
   "binutils_impl_linux-aarch64",
   "binutils_impl_linux-ppc64le",
   "clang",
   "clang-18",
   "clang-format",
   "clang-format-18",
   "clang-tools",
   "clangxx",
   "cmake",
   "cxx_compiler_stub",
   "libclang",
   "libclang-cpp",
   "libclang-cpp18.1",
   "libclang13",
   "libcxx",
   "libgcc-devel_linux-64",
   "libgcc-devel_linux-aarch64",
   "libgcc-devel_linux-ppc64le",
   "libstdcxx-devel_linux-64",
   "libstdcxx-devel_linux-aarch64",
   "libstdcxx-devel_linux-ppc64le",
   "libxml2",
   "llvm",
   "llvmdev",
   "m2w64-xz",
   "make",
   "ninja",
   "python",
   "sysroot_linux-64",
   "sysroot_linux-aarch64",
   "sysroot_linux-ppc64le",
   "ucrt",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "m2w64-xz",
    "make",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "cxx_compiler_stub",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "cxx_compiler_stub",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "libgcc-devel_linux-64",
    "libgcc-devel_linux-aarch64",
    "libgcc-devel_linux-ppc64le",
    "libstdcxx-devel_linux-64",
    "libstdcxx-devel_linux-aarch64",
    "libstdcxx-devel_linux-ppc64le",
    "llvmdev",
    "python",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "libcxx",
    "m2w64-xz",
    "make",
    "ninja",
    "python >3"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx 16",
    "libxml2",
    "llvm ==18.1.1",
    "llvmdev ==18.1.1",
    "python >=3.7",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "binutils_impl_linux-64",
    "binutils_impl_linux-aarch64",
    "binutils_impl_linux-ppc64le",
    "clang",
    "clang-18",
    "clang-format",
    "clang-format-18",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang ==18.1.1",
    "libclang-cpp",
    "libclang-cpp18.1",
    "libclang13",
    "libcxx",
    "libgcc-devel_linux-64",
    "libgcc-devel_linux-aarch64",
    "libgcc-devel_linux-ppc64le",
    "libstdcxx-devel_linux-64",
    "libstdcxx-devel_linux-aarch64",
    "libstdcxx-devel_linux-ppc64le",
    "llvmdev ==18.1.1",
    "python >=3.7",
    "sysroot_linux-64",
    "sysroot_linux-aarch64",
    "sysroot_linux-ppc64le",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 },
 "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz",
 "version": "18.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/clangdev.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://github.com/llvm/llvm-project",
   "home": "http://llvm.org/",
   "license": "Apache-2.0 WITH LLVM-exception",
   "license_family": "Apache",
   "license_file": "clang/LICENSE.TXT",
   "summary": "Development headers and libraries for Clang"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "feedstock-name": "clangdev",
   "recipe-maintainers": [
    "JohanMabille",
    "inducer",
    "isuruf",
    "jakirkham",
    "katietz",
    "SylvainCorlay",
    "timsnyder",
    "chrisburr",
    "xhochy",
    "h-vetinari"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangdev",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang",
      "clangxx",
      "clang-tools",
      "libclang",
      "libclang-cpp",
      "llvmdev ==18.1.1"
     ]
    },
    "script": "install_clangdev.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_INC%\\\\clang/Config/config.h exit 1",
      "if not exist %LIBRARY_LIB%\\\\clangAST.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "run_exports": null,
     "skip": true,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": null,
    "name": "libclang-cpp18.1",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": null
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "libclang-cpp",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "if exist %LIBRARY_BIN%\\\\libclang-cpp.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/bin/libclang-13.dll"
    ],
    "name": "libclang13",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\libclang-13.dll exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang.dll exit 1",
      "if exist %LIBRARY_LIB%\\\\libclang.lib exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang-18.dll exit 1",
      "if exist %LIBRARY_BIN%\\\\libclang-18.1.1.dll exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "run_exports": [
      "libclang13"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/lib/libclang.lib"
    ],
    "name": "libclang",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "clang",
      "libclang13",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "libclang13"
     ]
    },
    "script": "install_libclang.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_LIB%\\\\libclang.lib exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/lib/clang",
     "Library/bin/clang-18.exe"
    ],
    "name": "clang-18",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [],
     "run_constrained": [
      "clangdev 18.1.1",
      "clangxx 18.1.1",
      "clang-tools 18.1.1",
      "llvm-tools 18.1.1"
     ]
    },
    "script": "install_clang.bat",
    "test": {
     "commands": [
      "clang-18 --version",
      "if exist %LIBRARY_BIN%\\\\clang.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cl.exe exit 1",
      "if exist %LIBRARY_BIN%\\\\clang-cpp.exe exit 1",
      "if not exist %LIBRARY_LIB%\\\\clang\\\\18\\\\include\\\\stdatomic.h exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang",
    "requirements": {
     "host": [
      "clang-18",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang-18"
     ]
    },
    "script": "install_clang_symlinks.bat",
    "test": {
     "commands": [
      "clang --version",
      "clang-cl --version",
      "clang-cpp --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clangxx",
    "requirements": {
     "host": [
      "clang",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "clang"
     ]
    },
    "script": "install_clangxx.bat",
    "test": {
     "commands": [
      "clang++ --version",
      "clang++ -v -c mytest.cxx",
      "set \"CONDA_BUILD_SYSROOT=\"",
      "clang++ -v -c mytest.cxx"
     ],
     "files": [
      "mytest.cxx"
     ],
     "requires": [
      "cxx_compiler_stub"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "skip": true,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": null,
    "name": "clang-format-18",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "test": {
     "commands": [
      "clang-format-18 --version"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": [
      "libxml2",
      "zlib",
      "zstd"
     ],
     "string": "default_h1234567_0",
     "track_features": null
    },
    "files": [
     "Library/bin/clang-format.exe"
    ],
    "name": "clang-format",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": []
    },
    "script": "install_clang_format.bat",
    "test": {
     "commands": [
      "clang-format --version",
      "if exist %LIBRARY_BIN%\\\\c-index-test.exe exit 1"
     ]
    }
   },
   {
    "build": {
     "ignore_run_exports_from": null,
     "string": "default_h1234567_0",
     "track_features": null
    },
    "name": "clang-tools",
    "requirements": {
     "build": [
      "python >3",
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "clang",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "clang-format",
      "llvm ==18.1.1",
      "llvmdev ==18.1.1",
      "libxml2",
      "zlib",
      "zstd"
     ],
     "run": [
      "ucrt",
      "clang-format",
      "libclang13"
     ],
     "run_constrained": [
      "clangdev 18.1.1"
     ]
    },
    "script": "install_clang_tools.bat",
    "test": {
     "commands": [
      "clang-check --version",
      "clang-tidy --version"
     ]
    }
   },
   {
    "build": {
     "noarch": "python",
     "skip": true,
     "string": "default_h1234567_0"
    },
    "name": "python-clang",
    "requirements": {
     "host": [
      "python >=3.7"
     ],
     "run": [
      "python >=3.7",
      "libclang ==18.1.1"
     ]
    },
    "script": "build_python_bindings.sh",
    "test": {
     "commands": [
      "cd clang/bindings/python",
      "python -m unittest discover -v"
     ],
     "imports": [
      "clang",
      "clang.cindex"
     ],
     "source_files": [
      "clang/bindings/python/tests",
      "clang/bindings/python/examples/cindex"
     ]
    }
   }
  ],
  "package": {
   "name": "clang_packages",
   "version": "18.1.1"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "m2w64-xz",
    "python >3"
   ],
   "host": [
    "llvmdev ==18.1.1",
    "libxml2",
    "zlib",
    "zstd"
   ]
  },
  "source": [
   {
    "folder": "llvm-project",
    "patches": [
     "patches/0001-Fix-sysroot-detection-for-linux.patch",
     "patches/0002-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
     "patches/0003-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
     "patches/0004-Set-VERSION-in-osx-as-well.patch",
     "patches/0005-Fix-crosscompiling-LLVM-tools.patch",
     "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
     "patches/0008-Make-PIE-default-on-macOS-too.patch",
     "patches/0009-Find-ROCm-device-library-in-conda-layout.patch"
    ],
    "sha256": "8f34c6206be84b186b4b31f47e1b52758fa38348565953fad453d177ef34c0ad",
    "url": "https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.1/llvm-project-18.1.1.src.tar.xz"
   }
  ],
  "test": {
   "commands": [
    "%LIBRARY_BIN%/clang -v -c mytest.c",
    "if not exist %LIBRARY_INC%\\\\clang\\\\Lex\\\\Lexer.h exit 1"
   ],
   "files": [
    "mytest.c"
   ],
   "requires": [
    "cxx_compiler_stub",
    "cmake"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "m2w64-xz",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang13",
    "libxml2",
    "llvm",
    "llvmdev",
    "python",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clang",
    "clang-18",
    "clang-format",
    "clang-tools",
    "clangxx",
    "libclang",
    "libclang-cpp",
    "libclang13",
    "llvmdev",
    "python",
    "ucrt"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub"
   ]
  }
 }
}