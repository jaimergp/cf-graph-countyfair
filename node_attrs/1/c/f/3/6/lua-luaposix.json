{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "lua-luaposix",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a POSIX binding for LuaJIT, Lua 5.1, 5.2, 5.3 and 5.4; like most libraries\nit simply binds to C APIs on the underlying system, so it won't work on\nnon-POSIX systems. However, it does try to detect the level of POSIX\nconformance of the underlying system and bind only available APIs.\n",
   "home": "http://luaposix.github.io/luaposix/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "This is a POSIX binding for LuaJIT, Lua 5.1, 5.2 and 5.3"
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/lua/5.4/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jerowe",
    "izahn"
   ]
  },
  "package": {
   "name": "lua-luaposix",
   "version": "35.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub"
   ],
   "host": [
    "zlib",
    "luarocks",
    "lua",
    "perl"
   ],
   "run": [
    "lua",
    "luarocks"
   ]
  },
  "source": {
   "sha256": "a4edf2f715feff65acb009e8d1689e57ec665eb79bc36a6649fae55eafd56809",
   "url": "https://github.com/luaposix/luaposix/archive/refs/tags/v35.0.tar.gz"
  },
  "test": {
   "commands": [
    "lua -e \"require 'posix'\""
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks",
    "perl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a POSIX binding for LuaJIT, Lua 5.1, 5.2, 5.3 and 5.4; like most libraries\nit simply binds to C APIs on the underlying system, so it won't work on\nnon-POSIX systems. However, it does try to detect the level of POSIX\nconformance of the underlying system and bind only available APIs.\n",
   "home": "http://luaposix.github.io/luaposix/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "This is a POSIX binding for LuaJIT, Lua 5.1, 5.2 and 5.3"
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/lua/5.4/",
    "lib/"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "jerowe",
    "izahn"
   ]
  },
  "package": {
   "name": "lua-luaposix",
   "version": "35.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub"
   ],
   "host": [
    "zlib",
    "luarocks",
    "lua",
    "perl"
   ],
   "run": [
    "lua",
    "luarocks"
   ]
  },
  "source": {
   "sha256": "a4edf2f715feff65acb009e8d1689e57ec665eb79bc36a6649fae55eafd56809",
   "url": "https://github.com/luaposix/luaposix/archive/refs/tags/v35.0.tar.gz"
  },
  "test": {
   "commands": [
    "lua -e \"require 'posix'\""
   ]
  }
 },
 "name": "lua-luaposix",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lua-luaposix"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/lua-luaposix.json"
 },
 "raw_meta_yaml": "{% set name = \"lua-luaposix\" %}\n{% set version = \"35.0\" %}\n\npackage:\n  name: {{ name }} \n  version: {{ version }}\n\nsource:\n  url: https://github.com/luaposix/luaposix/archive/refs/tags/v35.0.tar.gz\n  sha256: a4edf2f715feff65acb009e8d1689e57ec665eb79bc36a6649fae55eafd56809\n\nbuild:\n  number: 1\n  ## osx lua build is broken, see https://github.com/conda-forge/lua-feedstock/pull/40\n  skip: true  # [not linux]\n  rpaths:\n    - lib/lua/5.4/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - zlib\n    - luarocks\n    - lua\n    - perl\n  run:\n    - lua\n    - luarocks\n\ntest:\n  commands:\n    - lua -e \"require 'posix'\"\n\nabout:\n  home: 'http://luaposix.github.io/luaposix/'\n  license: MIT\n  license_file: LICENSE\n  license_family: MIT\n  summary: 'This is a POSIX binding for LuaJIT, Lua 5.1, 5.2 and 5.3'\n  description: |\n       This is a POSIX binding for LuaJIT, Lua 5.1, 5.2, 5.3 and 5.4; like most libraries\n       it simply binds to C APIs on the underlying system, so it won't work on\n       non-POSIX systems. However, it does try to detect the level of POSIX\n       conformance of the underlying system and bind only available APIs.\n\nextra:\n  recipe-maintainers:\n    - jerowe\n    - izahn\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "lua",
   "luarocks",
   "perl",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks",
    "perl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks",
    "perl",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "lua",
    "luarocks"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/luaposix/luaposix/archive/refs/tags/v35.0.tar.gz",
 "version": "35.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/lua-luaposix.json"
 }
}