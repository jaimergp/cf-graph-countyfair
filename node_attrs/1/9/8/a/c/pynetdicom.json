{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  }
 },
 "feedstock_name": "pynetdicom",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "pynetdicom is a pure Python package that implements the\nDICOM networking protocol. Working with pydicom\n(https://github.com/pydicom/pydicom), it allows the easy creation of\nDICOM Service Class Users (SCUs) and Service Class Providers (SCPs)\nwhich can then be used to associate with other applications and transfer\nDICOM data.\n",
   "dev_url": "https://github.com/pydicom/pynetdicom",
   "doc_url": "https://pydicom.github.io/pynetdicom",
   "home": "https://github.com/pydicom/pynetdicom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENCE",
   "summary": "A Python implementation of the DICOM networking protocol"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "scaramallion"
   ]
  },
  "package": {
   "name": "pynetdicom",
   "version": "2.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.10",
    "pip",
    "poetry >=1.8"
   ],
   "run": [
    "python >=3.10",
    "pydicom >=2.4.0"
   ]
  },
  "source": {
   "fn": "pynetdicom-2.1.1.tar.gz",
   "sha256": "d8d0cec1bc6fab893fa7f57ec7a49d71accefd8760c1a3b2726d8237b3a5715e",
   "url": "https://github.com/pydicom/pynetdicom/archive/v2.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "pynetdicom"
   ],
   "requires": [
    "poetry >=1.8"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "poetry"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "pynetdicom is a pure Python package that implements the\nDICOM networking protocol. Working with pydicom\n(https://github.com/pydicom/pydicom), it allows the easy creation of\nDICOM Service Class Users (SCUs) and Service Class Providers (SCPs)\nwhich can then be used to associate with other applications and transfer\nDICOM data.\n",
   "dev_url": "https://github.com/pydicom/pynetdicom",
   "doc_url": "https://pydicom.github.io/pynetdicom",
   "home": "https://github.com/pydicom/pynetdicom",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENCE",
   "summary": "A Python implementation of the DICOM networking protocol"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . --no-deps -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "scaramallion"
   ]
  },
  "package": {
   "name": "pynetdicom",
   "version": "2.1.1"
  },
  "requirements": {
   "host": [
    "python >=3.10",
    "pip",
    "poetry >=1.8"
   ],
   "run": [
    "python >=3.10",
    "pydicom >=2.4.0"
   ]
  },
  "source": {
   "fn": "pynetdicom-2.1.1.tar.gz",
   "sha256": "d8d0cec1bc6fab893fa7f57ec7a49d71accefd8760c1a3b2726d8237b3a5715e",
   "url": "https://github.com/pydicom/pynetdicom/archive/v2.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "pynetdicom"
   ],
   "requires": [
    "poetry >=1.8"
   ]
  }
 },
 "name": "pynetdicom",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pynetdicom"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pynetdicom.json"
 },
 "raw_meta_yaml": "{% set name = \"pynetdicom\" %}\n{% set version = \"2.1.1\" %}\n{% set sha256 = \"d8d0cec1bc6fab893fa7f57ec7a49d71accefd8760c1a3b2726d8237b3a5715e\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/pydicom/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python >=3.10\n    - pip\n    - poetry >=1.8\n  run:\n    - python >=3.10\n    - pydicom >=2.4.0\n\ntest:\n  requires:\n    - poetry >=1.8\n  imports:\n    - pynetdicom\n\nabout:\n  home: https://github.com/pydicom/pynetdicom\n  license: MIT\n  license_family: MIT\n  license_file: LICENCE\n  summary: A Python implementation of the DICOM networking protocol\n  description: |\n    pynetdicom is a pure Python package that implements the\n    DICOM networking protocol. Working with pydicom\n    (https://github.com/pydicom/pydicom), it allows the easy creation of\n    DICOM Service Class Users (SCUs) and Service Class Providers (SCPs)\n    which can then be used to associate with other applications and transfer\n    DICOM data.\n  doc_url: https://pydicom.github.io/pynetdicom\n  dev_url: https://github.com/pydicom/pynetdicom\n\nextra:\n  recipe-maintainers:\n    - scaramallion\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "poetry",
   "pydicom",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydicom",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "poetry"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "poetry >=1.8",
    "python >=3.10"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pydicom >=2.4.0",
    "python >=3.10"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "poetry >=1.8"
   ]
  }
 },
 "url": "https://github.com/pydicom/pynetdicom/archive/v2.1.1.tar.gz",
 "version": "2.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pynetdicom.json"
 }
}