{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  },
  "test": "native"
 },
 "feedstock_name": "mamba",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl",
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl",
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl",
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl",
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl",
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog",
      "python"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "winreg",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%\\include\\mamba\\version.hpp (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfig.cmake (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfigVersion.cmake (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\bin\\libmamba.dll (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\libmamba.lib (exit 1)"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.bat",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "name": "mamba-split",
 "osx_64_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": [
      "test -d ${PREFIX}/include/mamba",
      "test -f ${PREFIX}/include/mamba/version.hpp",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake",
      "test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake",
      "test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR 2\"",
      "cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR 0\""
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.sh",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libmamba",
   "libmambapy"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/mamba.json"
 },
 "raw_meta_yaml": "{% set name = \"mamba\" %}\n{% set libmamba_version = \"2.0.0alpha3\" %}\n{% set libmambapy_version = \"2.0.0alpha3\" %}\n{% set release = \"2024.02.28\" %}\n\npackage:\n  name: mamba-split\n\nsource:\n  url: https://github.com/mamba-org/mamba/archive/refs/tags/{{ release }}.tar.gz\n  sha256: c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d\n\nbuild:\n  number: 0\n\noutputs:\n  - name: libmamba\n    version: {{ libmamba_version }}\n    script: build_mamba.sh                       # [unix]\n    script: build_mamba.bat                      # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libmamba', max_pin='x.x') }}\n      ignore_run_exports:\n        - spdlog\n        - python  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python  # [win]\n      host:\n        - libsolv >=0.7.23\n        - libcurl >=8.4.0\n        - openssl\n        - libarchive\n        - nlohmann_json\n        - cpp-expected\n        - reproc\n        - reproc-cpp >=14.2.4.post0\n        - spdlog\n        - yaml-cpp\n        - cli11\n        - fmt\n        - winreg                                 # [win]\n        - zstd\n        - simdjson >=3.3.0\n      run:\n        - libsolv >=0.7.23\n    test:\n      commands:\n        - test -d ${PREFIX}/include/mamba  # [unix]\n        - test -f ${PREFIX}/include/mamba/version.hpp  # [unix]\n        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake  # [unix]\n        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake  # [unix]\n        - test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_PREFIX%\\include\\mamba\\version.hpp (exit 1)  # [win]\n        - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfig.cmake (exit 1)  # [win]\n        - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfigVersion.cmake (exit 1)  # [win]\n        - if not exist %LIBRARY_PREFIX%\\bin\\libmamba.dll (exit 1)  # [win]\n        - if not exist %LIBRARY_PREFIX%\\lib\\libmamba.lib (exit 1)  # [win]\n        {% set libmamba_version_split = libmamba_version.split('.') %}\n        - cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MAJOR {{ libmamba_version_split[0] }}\"  # [unix]\n        - cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_MINOR {{ libmamba_version_split[1] }}\"  # [unix]\n        # TODO: uncomment for release 2.0.0\n        #- cat $PREFIX/include/mamba/version.hpp | grep \"LIBMAMBA_VERSION_PATCH {{ libmamba_version_split[2] }}\"  # [unix]\n\n  - name: libmambapy\n    version: {{ libmambapy_version }}\n    script: build_mamba.sh                       # [unix]\n    script: build_mamba.bat                      # [win]\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      run_exports:\n        - {{ pin_subpackage('libmambapy', max_pin='x.x') }}\n      ignore_run_exports:\n        - spdlog\n      skip: True  # [python_impl == 'pypy']\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - pybind11                               # [build_platform != target_platform]\n        - pybind11-abi                           # [build_platform != target_platform]\n      host:\n        - python\n        - scikit-build\n        - pip\n        - pybind11\n        - pybind11-abi\n        - openssl\n        - yaml-cpp\n        - cpp-expected\n        - spdlog\n        - fmt\n        - termcolor-cpp\n        - nlohmann_json\n        - {{ pin_subpackage('libmamba', exact=True) }}\n      run:\n        - python\n        - {{ pin_subpackage('libmamba', exact=True) }}\n\n    test:\n      imports:\n        - libmambapy\n        - libmambapy.bindings\n      commands:\n        #- python -c \"import libmambapy._version; assert libmambapy._version.__version__ == '{{ libmambapy_version }}'\"\n\nabout:\n  home: https://github.com/mamba-org/mamba\n  license: BSD-3-Clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: A fast drop-in alternative to conda, using libsolv for dependency resolution\n  description: |\n    # Mamba, the Fast Cross-Platform Package Manager\n\n    [![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n    [![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n    [![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n    `mamba` is a reimplementation of the conda package manager in C++.\n\n    - parallel downloading of repository data and package files using multi-threading\n    - libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n    - core parts of `mamba` are implemented in C++ for maximum efficiency\n\n    At the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\n    Mamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\n    The ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n    ### Installation\n\n    Please refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n    ### Additional features in Mamba and Micromamba\n\n    `mamba` and `micromamba` come with features on top of stock `conda`.\n\n    ### `repoquery`\n\n    To efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\n    See the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n    ### Installing lock files\n\n    `micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n\n  dev_url: https://github.com/mamba-org/mamba\n\nextra:\n  recipe-maintainers:\n    - AntoinePrv\n    - adriendelsalle\n    - SylvainCorlay\n    - JohanMabille\n    - wolfv\n    - ericmjl\n",
 "req": {
  "__set__": true,
  "elements": [
   "cli11",
   "cmake",
   "cpp-expected",
   "cxx_compiler_stub",
   "fmt",
   "libarchive",
   "libcurl",
   "libmamba",
   "libsolv",
   "ninja",
   "nlohmann_json",
   "openssl",
   "pip",
   "pybind11",
   "pybind11-abi",
   "python",
   "reproc",
   "reproc-cpp",
   "scikit-build",
   "simdjson",
   "spdlog",
   "termcolor-cpp",
   "winreg",
   "yaml-cpp",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "cxx_compiler_stub",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "winreg",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl >=8.4.0",
    "libmamba",
    "libsolv >=0.7.23",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp >=14.2.4.post0",
    "scikit-build",
    "simdjson >=3.3.0",
    "spdlog",
    "termcolor-cpp",
    "winreg",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv >=0.7.23",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz",
 "version": "2023.12.18",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/mamba.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "\n[![Build Status](https://github.com/mamba-org/mamba/workflows/CI/badge.svg)](https://github.com/mamba-org/mamba/actions)\n[![Join the Gitter Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mamba-org/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![docs](https://readthedocs.org/projects/mamba/badge/?version=latest&style=flat)](https://mamba.readthedocs.io/en/latest)\n\n`mamba` is a reimplementation of the conda package manager in C++.\n\n- parallel downloading of repository data and package files using multi-threading\n- libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n- core parts of `mamba` are implemented in C++ for maximum efficiency\n\nAt the same time, `mamba` utilizes the same command line parser, package installation and deinstallation code and transaction verification routines as `conda` to stay as compatible as possible.\n\nMamba is part of a bigger ecosystem to make scientific packaging more sustainable. You can read our [announcement blog post](https://medium.com/@QuantStack/open-software-packaging-for-science-61cecee7fc23).\nThe ecosystem also consists of `quetz`, an open source `conda` package server and `boa`, a fast `conda` package builder.\n\n\nPlease refer to the [`mamba` and `micromamba` installation guide](https://mamba.readthedocs.io/en/latest/installation.html) in the documentation.\n\n\n`mamba` and `micromamba` come with features on top of stock `conda`.\n\n\nTo efficiently query repositories and query package dependencies you can use `mamba repoquery` or `micromamba repoquery`.\nSee the [repoquery documentation](https://mamba.readthedocs.io/en/latest/user_guide/mamba.html#repoquery) for details.\n\n\n`micromamba` can be used to install lock files generated by [conda-lock](https://conda-incubator.github.io/conda-lock/) without having to install `conda-lock`. Simply invoke e.g. `micromamba create -n my-env -f conda-lock.yml` with an environment lockfile named `*-lock.yml` or `*-lock.yaml`.\n",
   "dev_url": "https://github.com/mamba-org/mamba",
   "home": "https://github.com/mamba-org/mamba",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "A fast drop-in alternative to conda, using libsolv for dependency resolution"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "AntoinePrv",
    "adriendelsalle",
    "SylvainCorlay",
    "JohanMabille",
    "wolfv",
    "ericmjl"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_run_exports": [
      "spdlog",
      "python"
     ],
     "run_exports": [
      "libmamba"
     ]
    },
    "name": "libmamba",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja",
      "python"
     ],
     "host": [
      "libsolv >=0.7.23",
      "libcurl >=8.4.0",
      "openssl",
      "libarchive",
      "nlohmann_json",
      "cpp-expected",
      "reproc",
      "reproc-cpp >=14.2.4.post0",
      "spdlog",
      "yaml-cpp",
      "cli11",
      "fmt",
      "winreg",
      "zstd",
      "simdjson >=3.3.0"
     ],
     "run": [
      "libsolv >=0.7.23"
     ]
    },
    "script": "build_mamba.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%\\include\\mamba\\version.hpp (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfig.cmake (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\libmamba\\libmambaConfigVersion.cmake (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\bin\\libmamba.dll (exit 1)",
      "if not exist %LIBRARY_PREFIX%\\lib\\libmamba.lib (exit 1)"
     ]
    },
    "version": "2.0.0alpha3"
   },
   {
    "build": {
     "ignore_run_exports": [
      "spdlog"
     ],
     "run_exports": [
      "libmambapy"
     ],
     "string": "py39h1234567_0"
    },
    "name": "libmambapy",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "cmake",
      "ninja"
     ],
     "host": [
      "python",
      "scikit-build",
      "pip",
      "pybind11",
      "pybind11-abi",
      "openssl",
      "yaml-cpp",
      "cpp-expected",
      "spdlog",
      "fmt",
      "termcolor-cpp",
      "nlohmann_json",
      "libmamba"
     ],
     "run": [
      "python",
      "libmamba"
     ]
    },
    "script": "build_mamba.bat",
    "test": {
     "commands": null,
     "imports": [
      "libmambapy",
      "libmambapy.bindings"
     ]
    },
    "version": "2.0.0alpha3"
   }
  ],
  "package": {
   "name": "mamba-split"
  },
  "source": {
   "sha256": "c5350aea775582e269ba750bd96d207614edc99006b823857b3923095001662d",
   "url": "https://github.com/mamba-org/mamba/archive/refs/tags/2024.02.28.tar.gz"
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "ninja",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cli11",
    "cpp-expected",
    "fmt",
    "libarchive",
    "libcurl",
    "libmamba",
    "libsolv",
    "nlohmann_json",
    "openssl",
    "pip",
    "pybind11",
    "pybind11-abi",
    "python",
    "reproc",
    "reproc-cpp",
    "scikit-build",
    "simdjson",
    "spdlog",
    "termcolor-cpp",
    "winreg",
    "yaml-cpp",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libmamba",
    "libsolv",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}