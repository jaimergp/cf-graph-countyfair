{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  },
  "test": "native_and_emulated"
 },
 "feedstock_name": "smart_open",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "smart_open is a Python 3 library\nfor efficient streaming of very large files\nfrom/to S3, HDFS, WebHDFS or local (compressed) files.\n",
   "dev_url": "https://github.com/RaRe-Technologies/smart_open",
   "home": "https://github.com/RaRe-Technologies/smart_open",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "dist/LICENSE",
   "summary": "Python library for efficient streaming of large files"
  },
  "build": {
   "noarch": "python",
   "number": "0"
  },
  "extra": {
   "feedstock-name": "smart_open",
   "recipe-maintainers": [
    "timkpaine",
    "souravsingh",
    "mpenkov",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "cd dist && PYTHON -m pip install . --no-deps -vv --no-build-isolation"
     ]
    },
    "name": "smart_open",
    "requirements": {
     "host": [
      "python >=3.6",
      "pip"
     ],
     "run": [
      "python >=3.6",
      "wrapt"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open",
    "requirements": {
     "run": [
      "smart_open"
     ]
    },
    "test": {
     "imports": [
      "smart_open"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-all",
    "requirements": {
     "run": [
      "smart_open",
      "smart-open-with-azure",
      "smart-open-with-gcs",
      "smart-open-with-http",
      "smart-open-with-s3",
      "smart-open-with-ssh",
      "smart-open-with-webhdfs",
      "smart-open-with-zst"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python hotfix_tests.py",
      "coverage run --source=smart_open --branch -m pytest src/smart_open/tests -vv --tb=long --color=yes -k \"not ( http_gz or http_gz_query or https_seek_forward or s3_disable_compression or s3_gzip_compress_sanity or s3_read_explicit or s3_write_explicit or s3_write_implicit or seek_from_current or seek_from_end or seek_from_start )\"",
      "coverage report --show-missing --skip-covered --fail-under=36"
     ],
     "files": [
      "hotfix_tests.py"
     ],
     "requires": [
      "coverage",
      "moto",
      "pip",
      "pytest",
      "pytest-benchmark",
      "pytest-rerunfailures",
      "responses"
     ],
     "source_files": [
      "src/smart_open/tests"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-azure",
    "requirements": {
     "run": [
      "python >=3.6",
      "smart_open",
      "azure-common",
      "azure-core",
      "azure-storage-blob"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.azure"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-gcs",
    "requirements": {
     "run": [
      "smart_open",
      "google-cloud-storage >=2.6.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.gcs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-http",
    "requirements": {
     "run": [
      "smart_open",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.http"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-s3",
    "requirements": {
     "run": [
      "smart_open",
      "boto3"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.s3"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-ssh",
    "requirements": {
     "run": [
      "smart_open",
      "paramiko"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.ssh"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-webhdfs",
    "requirements": {
     "run": [
      "smart_open",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.webhdfs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-zst",
    "requirements": {
     "run": [
      "smart_open",
      "zstandard"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "smart_open_split",
   "version": "7.0.1"
  },
  "requirements": {
   "host": [
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "c03d00e49483d8e5375720d4d6c1402107f23584bf96505db0b4e17f92339e56",
    "url": "https://pypi.io/packages/source/s/smart_open/smart_open-7.0.1.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "95b942e6075a9216848eb7264b5d66963d916361e9c9c40f771559948649feaf",
    "url": "https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v7.0.1.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage",
    "paramiko",
    "python",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart-open-with-zst",
    "smart_open",
    "wrapt",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coverage",
    "moto",
    "pip",
    "pytest",
    "pytest-benchmark",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "smart_open is a Python 3 library\nfor efficient streaming of very large files\nfrom/to S3, HDFS, WebHDFS or local (compressed) files.\n",
   "dev_url": "https://github.com/RaRe-Technologies/smart_open",
   "home": "https://github.com/RaRe-Technologies/smart_open",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "dist/LICENSE",
   "summary": "Python library for efficient streaming of large files"
  },
  "build": {
   "noarch": "python",
   "number": "0"
  },
  "extra": {
   "feedstock-name": "smart_open",
   "recipe-maintainers": [
    "timkpaine",
    "souravsingh",
    "mpenkov",
    "bollwyvl"
   ]
  },
  "outputs": [
   {
    "build": {
     "noarch": "python",
     "script": [
      "cd dist && PYTHON -m pip install . --no-deps -vv --no-build-isolation"
     ]
    },
    "name": "smart_open",
    "requirements": {
     "host": [
      "python >=3.6",
      "pip"
     ],
     "run": [
      "python >=3.6",
      "wrapt"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open",
    "requirements": {
     "run": [
      "smart_open"
     ]
    },
    "test": {
     "imports": [
      "smart_open"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-all",
    "requirements": {
     "run": [
      "smart_open",
      "smart-open-with-azure",
      "smart-open-with-gcs",
      "smart-open-with-http",
      "smart-open-with-s3",
      "smart-open-with-ssh",
      "smart-open-with-webhdfs",
      "smart-open-with-zst"
     ]
    },
    "test": {
     "commands": [
      "pip check",
      "python hotfix_tests.py",
      "coverage run --source=smart_open --branch -m pytest src/smart_open/tests -vv --tb=long --color=yes -k \"not ( http_gz or http_gz_query or https_seek_forward or s3_disable_compression or s3_gzip_compress_sanity or s3_read_explicit or s3_write_explicit or s3_write_implicit or seek_from_current or seek_from_end or seek_from_start )\"",
      "coverage report --show-missing --skip-covered --fail-under=36"
     ],
     "files": [
      "hotfix_tests.py"
     ],
     "requires": [
      "coverage",
      "moto",
      "pip",
      "pytest",
      "pytest-benchmark",
      "pytest-rerunfailures",
      "responses"
     ],
     "source_files": [
      "src/smart_open/tests"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-azure",
    "requirements": {
     "run": [
      "python >=3.6",
      "smart_open",
      "azure-common",
      "azure-core",
      "azure-storage-blob"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.azure"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-gcs",
    "requirements": {
     "run": [
      "smart_open",
      "google-cloud-storage >=2.6.0"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.gcs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-http",
    "requirements": {
     "run": [
      "smart_open",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.http"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-s3",
    "requirements": {
     "run": [
      "smart_open",
      "boto3"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.s3"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-ssh",
    "requirements": {
     "run": [
      "smart_open",
      "paramiko"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.ssh"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-webhdfs",
    "requirements": {
     "run": [
      "smart_open",
      "requests"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "imports": [
      "smart_open.webhdfs"
     ],
     "requires": [
      "pip"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic"
    },
    "name": "smart-open-with-zst",
    "requirements": {
     "run": [
      "smart_open",
      "zstandard"
     ]
    },
    "test": {
     "commands": [
      "pip check"
     ],
     "requires": [
      "pip"
     ]
    }
   }
  ],
  "package": {
   "name": "smart_open_split",
   "version": "7.0.1"
  },
  "requirements": {
   "host": [
    "python >=3.6"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "c03d00e49483d8e5375720d4d6c1402107f23584bf96505db0b4e17f92339e56",
    "url": "https://pypi.io/packages/source/s/smart_open/smart_open-7.0.1.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "95b942e6075a9216848eb7264b5d66963d916361e9c9c40f771559948649feaf",
    "url": "https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v7.0.1.tar.gz"
   }
  ]
 },
 "name": "smart_open_split",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "smart-open",
   "smart-open-with-all",
   "smart-open-with-azure",
   "smart-open-with-gcs",
   "smart-open-with-http",
   "smart-open-with-s3",
   "smart-open-with-ssh",
   "smart-open-with-webhdfs",
   "smart-open-with-zst",
   "smart_open",
   "smart_open_split"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/smart_open.json"
 },
 "raw_meta_yaml": "{% set version = \"7.0.1\" %}\n{% set min_python = \"python >=3.6\" %}\n\n# handle undefined PYTHON in `noarch: generic` packages\n{% if PYTHON is undefined %}{% set PYTHON = \"$PYTHON\" %}{% endif %}\n\npackage:\n  name: smart_open_split\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/s/smart_open/smart_open-{{ version }}.tar.gz\n    sha256: c03d00e49483d8e5375720d4d6c1402107f23584bf96505db0b4e17f92339e56\n  - folder: src\n    url: https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 95b942e6075a9216848eb7264b5d66963d916361e9c9c40f771559948649feaf\n\nbuild:\n  noarch: python\n  number: 0\n\nrequirements:\n  host:\n    - {{ min_python }}\n  run:\n    - {{ min_python }}\n\noutputs:\n  # the actual package\n  - name: smart_open\n    build:\n      noarch: python\n      script:\n        - cd dist && {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation\n    requirements:\n      host:\n        - {{ min_python }}\n        - pip\n      run:\n        - {{ min_python }}\n        - wrapt\n    test:\n      imports:\n        - smart_open\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  # the normalized hyphen-convention package\n  - name: smart-open\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n    test:\n      imports:\n        - smart_open\n\n  # the kitchen sink with tests\n  - name: smart-open-with-all\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-azure\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-gcs\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-http\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-s3\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-ssh\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-webhdfs\", exact=True) }}\n        - {{ pin_subpackage(\"smart-open-with-zst\", exact=True) }}\n    test:\n      source_files:\n        - src/smart_open/tests\n      files:\n        - hotfix_tests.py\n      requires:\n        - coverage\n        - moto\n        - pip\n        - pytest\n        - pytest-benchmark\n        - pytest-rerunfailures\n        - responses\n      commands:\n        - pip check\n        # tests reference `smart_open.tests`, but not included in distributions\n        - python hotfix_tests.py\n        -\n          coverage run --source=smart_open --branch -m pytest\n            src/smart_open/tests\n            -vv\n            --tb=long\n            --color=yes\n            -k \"not (\n              http_gz\n              or http_gz_query\n              or https_seek_forward\n              or s3_disable_compression\n              or s3_gzip_compress_sanity\n              or s3_read_explicit\n              or s3_write_explicit\n              or s3_write_implicit\n              or seek_from_current\n              or seek_from_end\n              or seek_from_start\n            )\"\n        - coverage report --show-missing --skip-covered --fail-under=36\n\n  # extras from here on out\n  - name: smart-open-with-azure\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ min_python }}\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - azure-common\n        - azure-core\n        - azure-storage-blob\n    test:\n      imports:\n        - smart_open.azure\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-gcs\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - google-cloud-storage >=2.6.0\n    test:\n      imports:\n        - smart_open.gcs\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-http\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - requests\n    test:\n      imports:\n        - smart_open.http\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-s3\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - boto3\n    test:\n      imports:\n        - smart_open.s3\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-ssh\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - paramiko\n    test:\n      imports:\n        - smart_open.ssh\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-webhdfs\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - requests\n    test:\n      imports:\n        - smart_open.webhdfs\n      requires:\n        - pip\n      commands:\n        - pip check\n\n  - name: smart-open-with-zst\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"smart_open\", exact=True) }}\n        - zstandard\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check\n\nabout:\n  home: https://github.com/RaRe-Technologies/smart_open\n  license: MIT\n  license_family: MIT\n  license_file: dist/LICENSE\n  summary: Python library for efficient streaming of large files\n\n  description: |\n    smart_open is a Python 3 library\n    for efficient streaming of very large files\n    from/to S3, HDFS, WebHDFS or local (compressed) files.\n  dev_url: https://github.com/RaRe-Technologies/smart_open\n\nextra:\n  feedstock-name: smart_open\n  recipe-maintainers:\n    - timkpaine\n    - souravsingh\n    - mpenkov\n    - bollwyvl\n",
 "req": {
  "__set__": true,
  "elements": [
   "azure-common",
   "azure-core",
   "azure-storage-blob",
   "boto3",
   "google-cloud-storage",
   "paramiko",
   "pip",
   "python",
   "requests",
   "smart-open-with-azure",
   "smart-open-with-gcs",
   "smart-open-with-http",
   "smart-open-with-s3",
   "smart-open-with-ssh",
   "smart-open-with-webhdfs",
   "smart-open-with-zst",
   "smart_open",
   "wrapt",
   "zstandard"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage",
    "paramiko",
    "python",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart-open-with-zst",
    "smart_open",
    "wrapt",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coverage",
    "moto",
    "pip",
    "pytest",
    "pytest-benchmark",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "azure-common",
    "azure-core",
    "azure-storage-blob",
    "boto3",
    "google-cloud-storage >=2.6.0",
    "paramiko",
    "python >=3.6",
    "requests",
    "smart-open-with-azure",
    "smart-open-with-gcs",
    "smart-open-with-http",
    "smart-open-with-s3",
    "smart-open-with-ssh",
    "smart-open-with-webhdfs",
    "smart-open-with-zst",
    "smart_open",
    "wrapt",
    "zstandard"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "coverage",
    "moto",
    "pip",
    "pytest",
    "pytest-benchmark",
    "pytest-rerunfailures",
    "responses"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/s/smart_open/smart_open-7.0.1.tar.gz",
 "version": "7.0.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/smart_open.json"
 }
}