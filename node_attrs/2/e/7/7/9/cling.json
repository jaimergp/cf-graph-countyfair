{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "provider": {
   "linux_aarch64": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "cling",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.9"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 9.0.1 cling_v0.9*",
    "clangdev 9.0.1 cling_v0.9*",
    "zlib"
   ],
   "run": [
    "cxx_compiler_stub",
    "clangdev 9.0.1 cling_v0.9*"
   ],
   "run_constrained": [
    "gxx_linux-64 !=9.5.0"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-Fix-LLVM_DYLIB-usage.patch",
    "patches/0001-Fix-ClingTargets.cmake-not-being-installed.patch"
   ],
   "sha256": "5fe545b4ca2884dc861e1241f2ae7b975b60514062675995cfbc401e3b3e8258",
   "url": "https://github.com/root-project/cling/archive/v0.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.9"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ],
   "host": [
    "llvmdev 9.0.1 cling_v0.9*",
    "clangdev 9.0.1 cling_v0.9*",
    "zlib"
   ],
   "run": [
    "cxx_compiler_stub",
    "clangdev 9.0.1 cling_v0.9*"
   ],
   "run_constrained": null
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-Fix-LLVM_DYLIB-usage.patch",
    "patches/0001-Fix-ClingTargets.cmake-not-being-installed.patch"
   ],
   "sha256": "5fe545b4ca2884dc861e1241f2ae7b975b60514062675995cfbc401e3b3e8258",
   "url": "https://github.com/root-project/cling/archive/v0.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'",
    "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)"
   ]
  }
 },
 "name": "cling",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.9"
  },
  "requirements": {
   "build": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 9.0.1 cling_v0.9*",
    "clangdev 9.0.1 cling_v0.9*",
    "zlib"
   ],
   "run": [
    "clangdev 9.0.1 cling_v0.9*"
   ],
   "run_constrained": null
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-Fix-LLVM_DYLIB-usage.patch",
    "patches/0001-Fix-ClingTargets.cmake-not-being-installed.patch"
   ],
   "sha256": "5fe545b4ca2884dc861e1241f2ae7b975b60514062675995cfbc401e3b3e8258",
   "url": "https://github.com/root-project/cling/archive/v0.9.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/cling",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clangdev"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "cling"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/cling.json"
 },
 "raw_meta_yaml": "{% set name = \"cling\" %}\n{% set version = \"0.9\" %}\n{% set sha256 = \"5fe545b4ca2884dc861e1241f2ae7b975b60514062675995cfbc401e3b3e8258\" %}\n{% set build_number = 1 %}\n{% set clang_version = [9, 0, 1] %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/root-project/cling/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    # Export all symbols on windows to generate import library\n    - patches/0001-Export-all-symbols-on-windows.patch\n    # Do not build Jupyter kernel - use xeus-cling instead\n    - patches/0001-remove-jupyter.patch\n    - patches/0027-conda-packaging.patch\n    # Prevent setting sysroot include directory on OS X\n    - patches/0001-Drop-compile-time-sysroot.patch\n    # Enable redefinitions\n    - patches/enable-redefinition-allowed.patch\n    # LLVM_REQUIES_EH\n    - patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch\n    # Fix incorrect dylib interactions\n    - patches/0001-Fix-LLVM_DYLIB-usage.patch\n    # Install ClingTargets.cmake\n    - patches/0001-Fix-ClingTargets.cmake-not-being-installed.patch\n\n\nbuild:\n  number: {{ build_number }}\n  skip: true  # [win and vc<14 or aarch64]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - ninja  # [win]\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - llvmdev {{ clang_version|join('.') }} cling_v{{ version }}*\n    - clangdev {{ clang_version|join('.') }} cling_v{{ version }}*\n    - zlib\n  run:\n    # We really depend on the host compiler at runtime:\n    #  - the host compiler STL is one to be used.\n    #  - it is used by cling's runtime compatibility check.\n    - {{ compiler('cxx') }}  # [linux]\n    - clangdev {{ clang_version|join('.') }} cling_v{{ version }}*\n  run_constrained:\n   # For C++14/C++17 headers from GCC 9.5.0 cannot be parsed due to a missing commit:\n    # https://github.com/gcc-mirror/gcc/commit/32bbf76e4345a7961445b86a7cfccffa8a287fc1\n    - gxx_linux-64 !=9.5.0  # [clangdev == \"5.*\"] - sysroot_linux-64  # [linux]\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/cling  # [unix]\n    - if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)  # [win]\n    - cling '2+3; 0'\n    - cling '#include <vector>'\n\nabout:\n  dev_url: https://github.com/root-project/cling\n  doc_url: https://root.cern.ch/cling\n  home: https://root.cern.ch/cling\n  license: NCSA OR LGPL-2.1-only\n  license_file: LICENSE.TXT\n  summary: Cling - The Interactive C++ Interpreter\n  description: Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n    - gouarin\n    - chrisburr\n",
 "req": {
  "__set__": true,
  "elements": [
   "clangdev",
   "cmake",
   "cxx_compiler_stub",
   "llvmdev",
   "make",
   "ninja",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cxx_compiler_stub",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clangdev",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev 9.0.1 cling_v0.9*",
    "llvmdev 9.0.1 cling_v0.9*",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clangdev 9.0.1 cling_v0.9*",
    "cxx_compiler_stub"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/root-project/cling/archive/v0.9.tar.gz",
 "version": "0.9",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/cling.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
   "dev_url": "https://github.com/root-project/cling",
   "doc_url": "https://root.cern.ch/cling",
   "home": "https://root.cern.ch/cling",
   "license": "NCSA OR LGPL-2.1-only",
   "license_file": "LICENSE.TXT",
   "summary": "Cling - The Interactive C++ Interpreter"
  },
  "build": {
   "number": "1",
   "run_exports": [
    "cling"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille",
    "gouarin",
    "chrisburr"
   ]
  },
  "package": {
   "name": "cling",
   "version": "0.9"
  },
  "requirements": {
   "build": [
    "cmake",
    "ninja",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "llvmdev 9.0.1 cling_v0.9*",
    "clangdev 9.0.1 cling_v0.9*",
    "zlib"
   ],
   "run": [
    "clangdev 9.0.1 cling_v0.9*"
   ],
   "run_constrained": null
  },
  "source": {
   "patches": [
    "patches/0001-Export-all-symbols-on-windows.patch",
    "patches/0001-remove-jupyter.patch",
    "patches/0027-conda-packaging.patch",
    "patches/0001-Drop-compile-time-sysroot.patch",
    "patches/enable-redefinition-allowed.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-Fix-LLVM_DYLIB-usage.patch",
    "patches/0001-Fix-ClingTargets.cmake-not-being-installed.patch"
   ],
   "sha256": "5fe545b4ca2884dc861e1241f2ae7b975b60514062675995cfbc401e3b3e8258",
   "url": "https://github.com/root-project/cling/archive/v0.9.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)",
    "cling '2+3; 0'",
    "cling '#include <vector>'"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cmake",
    "cxx_compiler_stub",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clangdev",
    "llvmdev",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "clangdev"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}