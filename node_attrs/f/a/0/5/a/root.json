{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "azure": {
   "store_build_artifacts": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "conda_build": {
   "pkg_format": "2"
  },
  "conda_forge_output_validation": true,
  "github": {
   "branch_name": "main",
   "tooling_branch_name": "main"
  },
  "os_version": {
   "linux_64": "cos7"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "osx_arm64": "default"
  },
  "test": "native"
 },
 "feedstock_name": "root",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "lib/*.pcm"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make",
    "cdt_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "clangdev 16.0.6 root_63200*",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxpm",
    "xorg-libxft",
    "libglu"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "root -l -b -q -x test.cpp++",
    "echo '.q' | root -e 'sddsa0'"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev",
    "cxx_compiler_stub",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "libglu",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxft",
    "xorg-libxpm",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "etc/allDict.cxx.pch"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make",
    "cdt_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "clangdev 16.0.6 root_63200*",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxpm",
    "xorg-libxft",
    "libglu"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "root -l -b -q -x test.cpp++",
    "echo '.q' | root -e 'sddsa0'"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev",
    "cxx_compiler_stub",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "libglu",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxft",
    "xorg-libxpm",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "lib/*.pcm"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make",
    "cdt_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "clangdev 16.0.6 root_63200*",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxpm",
    "xorg-libxft",
    "libglu"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "root -l -b -q -x test.cpp++",
    "echo '.q' | root -e 'sddsa0'"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev",
    "cxx_compiler_stub",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "libglu",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxft",
    "xorg-libxpm",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "lib/*.pcm",
    "etc/allDict.cxx.pch"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "etc/allDict.cxx.pch"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make",
      "cdt_stub"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make",
    "cdt_stub"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "clangdev 16.0.6 root_63200*",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxpm",
    "xorg-libxft",
    "libglu"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch",
    "patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch",
    "patches/0001-force-one-modulemap-for-darwin.patch",
    "patches/0001-Remove-check-for-SDK-version-in-CIFactory.patch",
    "patches/0001-avoid-linking-TPython-against-libPython.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "root -l -b -q -x test.cpp++",
    "echo '.q' | root -e 'sddsa0'"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "name": "root_base",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "lib/*.pcm"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "clangdev 16.0.6 root_63200*",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch",
    "patches/0001-force-one-modulemap-for-darwin.patch",
    "patches/0001-Remove-check-for-SDK-version-in-CIFactory.patch",
    "patches/0001-avoid-linking-TPython-against-libPython.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "root -l -b -q -x test.cpp++",
    "echo '.q' | root -e 'sddsa0'"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.\n\nROOT was built with and will report `-std=c++17` from `root-config`.\n",
   "dev_url": "https://github.com/root-project/root/",
   "doc_url": "https://root.cern/documentation",
   "home": "https://root.cern/",
   "license": "LGPL-2.1-only",
   "license_file": "root-source/LICENSE",
   "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R.\n"
  },
  "build": {
   "ignore_prefix_files": [
    "lib/*.pcm"
   ],
   "ignore_run_exports_from": [
    "clangdev"
   ],
   "number": "2",
   "script_env": [
    "clang_version=16.0.6",
    "clang_patches_version=root_63200",
    "ROOT_CONDA_BUILTIN_PYROOT=1"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "vepadulano",
    "chrisburr",
    "henryiii",
    "eguiraud"
   ]
  },
  "outputs": [
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   },
   {
    "build": {
     "ignore_prefix_files": [
      "lib/*.pcm"
     ],
     "number": "2",
     "run_exports": [
      "root_base"
     ]
    },
    "name": "root_base",
    "requirements": {
     "build": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "git",
      "pkg-config",
      "sed",
      "make"
     ]
    },
    "script": "install_root.sh"
   },
   {
    "build": {
     "number": "2"
    },
    "name": "root",
    "requirements": {
     "host": [
      "root_base",
      "python",
      "openssl",
      "ld_impl_linux-64 <2.40"
     ],
     "run": [
      "root_base",
      "python",
      "compilers",
      "metakernel",
      "ipython",
      "notebook",
      "numba"
     ]
    },
    "test": {
     "commands": [
      "python test_pyroot.py",
      "root -l -b -q -x test.cpp",
      "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
      "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
      "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
      "root -l -b -q -x test.cpp++",
      "jupyter-kernelspec list | grep ' root '"
     ],
     "files": [
      "test.cpp",
      "test_pyroot.py"
     ],
     "imports": [
      "ROOT",
      "JupyROOT"
     ]
    }
   }
  ],
  "package": {
   "name": "root_base",
   "version": "6.32.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "git",
    "pkg-config",
    "sed",
    "make"
   ],
   "host": [
    "libblas",
    "libcblas",
    "c_stdlib_stub",
    "afterimage",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "glew",
    "glib",
    "gl2ps",
    "graphviz",
    "gsl",
    "gtest",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "openssl",
    "pcre",
    "pythia8",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vector-classes",
    "vdt",
    "xrootd",
    "xz",
    "libcxx",
    "xxhash",
    "zlib",
    "zstd",
    "python",
    "numpy"
   ],
   "run": [
    "python",
    "numpy",
    "libcxx",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_stdlib_stub",
    "xxhash",
    "nlohmann_json",
    "cffi",
    "graphviz"
   ],
   "run_constrained": [
    "numba >=0.52",
    "cling 9999",
    "root5 9999"
   ]
  },
  "source": {
   "folder": "root-source",
   "patches": [
    "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
    "patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch",
    "patches/0001-Hacks.patch",
    "patches/0001-Patch-for-apple-silicon.patch",
    "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
    "patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch",
    "patches/0001-core-Link-clad-to-clang-only-if-target-available.patch",
    "patches/0001-Reset-CMAKE-module-path-for-interpreter.patch",
    "patches/0001-force-one-modulemap-for-darwin.patch",
    "patches/0001-Remove-check-for-SDK-version-in-CIFactory.patch",
    "patches/0001-avoid-linking-TPython-against-libPython.patch"
   ],
   "sha256": "3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634",
   "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz"
  },
  "test": {
   "commands": [
    "root -l -b -q -x",
    "root -l -b -q -x test.cpp",
    "root -b -l -q -x -e '2+3; 0'",
    "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
    "thisroot.sh",
    "thisroot.csh",
    "thisroot.fish",
    "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
    "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
    "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
    "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
    "root -l -b -q -x test.cpp++"
   ],
   "files": [
    "test.cpp"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_stdlib_stub",
    "cfitsio",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "root",
   "root_base"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/root.json"
 },
 "raw_meta_yaml": "{% set name = \"root\" %}\n{% set tag_name = \"6-32-00\" %}\n{% set version = \".\".join(tag_name.split(\"-\")|map(\"int\")|map(\"string\")) %}\n{% set build_number = 2 %}\n{% set clang_version = \"16.0.6\" %}\n{% set clang_patches_version = \"root_63200\" %}\n\n{% set builtin_pyroot = True %}\n{% set builtin_clang = False %}\n{% set run_gtests = False %}\n\n{%- if \"ROOT_CONDA_IS_CI\" in os.environ %}\n  {%- set version = os.environ[\"ROOT_CONDA_VERSION\"] %}\n  {% set clang_patches_version = \"root_\" + os.environ[\"ROOT_CONDA_GIT_REV\"] %}\n  {% set build_number = os.environ[\"ROOT_CONDA_BUILD_NUMBER\"] %}\n  {% set run_gtests = True %}\n{%- endif %}\n\npackage:\n  name: root_base\n  version: {{ version }}\n\nsource:\n{%- if \"ROOT_CONDA_GIT_REV\" in os.environ %}\n  git_url: {{ os.environ.get(\"ROOT_CONDA_GIT_URL\", \"https://github.com/root-project/root.git\") }}\n  git_rev: {{ os.environ[\"ROOT_CONDA_GIT_REV\"] }}\n{%- else %}\n  url: https://github.com/root-project/root/archive/refs/tags/v{{ tag_name }}.tar.gz\n  sha256: 3e497c8217b3ef629f339077f92d7ad377e5295611a2bf9faf0067566125c634\n{%- endif %}\n  folder: root-source\n  patches:\n    - patches/root-x.xx.xx_cling-runtime-sysroot.patch\n    - patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch  # [osx]\n    - patches/0001-Hacks.patch\n    - patches/0001-Patch-for-apple-silicon.patch\n    - patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch\n    - patches/disable-hsimple.root  # [build_platform != target_platform]\n    - patches/0001-core-Fallback-to-urandom-for-increased-compatibility.patch\n    - patches/0001-core-Link-clad-to-clang-only-if-target-available.patch\n    - patches/0001-Reset-CMAKE-module-path-for-interpreter.patch\n    - patches/0001-force-one-modulemap-for-darwin.patch  # [osx]\n    - patches/0001-Remove-check-for-SDK-version-in-CIFactory.patch  # [osx]\n    - patches/0001-avoid-linking-TPython-against-libPython.patch  # [osx]\n{% if not builtin_pyroot %}\n    - 0001-Support-standalone-pyroot.patch\n{% endif %}\n\nbuild:\n  number: {{ build_number }}\n  skip: True  # [win]\n  ignore_prefix_files:\n    - lib/*.pcm            # [not aarch64]\n    # https://github.com/root-project/root/blob/975be1e7647098ee8db5333f0769fb12287d0f75/cmake/modules/RootBuildOptions.cmake#L328-L332\n    - etc/allDict.cxx.pch  # [aarch64]\n  ignore_run_exports_from:\n    - clangdev\n  script_env:\n    - clang_version={{ clang_version }}\n    - clang_patches_version={{ clang_patches_version }}\n    {% if builtin_pyroot %}- ROOT_CONDA_BUILTIN_PYROOT=1 {%- endif %}\n    {% if builtin_clang %}- ROOT_CONDA_BUILTIN_CLANG=1 {%- endif %}\n    {% if run_gtests %}- ROOT_CONDA_RUN_GTESTS=1 {%- endif %}\n    {% if \"ROOT_CONDA_BUILD_TYPE\" in os.environ %}- ROOT_CONDA_BUILD_TYPE {%- endif %}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - git\n    - pkg-config\n    - sed\n    - make\n    # Required for OpenGL support\n    # See https://conda-forge.org/docs/maintainer/knowledge_base.html?highlight=cdt#libgl\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n  host:\n    - libblas\n    - libcblas\n    - {{ compiler('c') }}  # [linux]\n    - {{ compiler('cxx') }}  # [linux]\n    - {{ stdlib(\"c\") }}\n    - afterimage\n    - cfitsio\n    - davix\n    - fftw\n    - freetype\n    - ftgl\n    - gdk-pixbuf\n    - giflib\n    - glew\n    - glib\n    - gl2ps\n    - graphviz\n    - gsl\n    - gtest\n    - libglu  # [linux]\n    - libpng\n    - librsvg\n    - libtiff\n    - libxml2\n    - lz4-c\n    # - mysql\n    - nlohmann_json\n    - openssl\n    - pcre\n    # - postgresql\n    - pythia8\n    - sqlite\n    - tbb\n    - tbb-devel\n    - vector-classes\n    - vdt\n    - xorg-libx11  # [linux]\n    - xorg-libxau  # [linux]\n    - xorg-libxcursor  # [linux]\n    - xorg-libxext  # [linux]\n    - xorg-libxfixes  # [linux]\n    - xorg-libxft  # [linux]\n    - xorg-libxpm  # [linux]\n    - xrootd\n    - xz\n    # FIXME: The generated allDict.cxx.pch is dependent on version of the C++ headers used\n    - {{ pin_compatible('libcxx', min_pin='x', max_pin='x') }}\n    - xxhash\n    - zlib\n    - zstd\n{% if not builtin_clang %}\n    - llvm {{ clang_version }}  # [not (osx and arm64)]\n    - llvmdev {{ clang_version }}  # [not (osx and arm64)]\n    - clangdev {{ clang_version }} {{ clang_patches_version }}*  # [not (osx and arm64)]\n{% endif %}\n{% if builtin_pyroot %}\n    - python\n    - numpy\n{% endif %}\n  run:\n{% if builtin_pyroot %}\n    - python\n    - {{ pin_compatible('numpy') }}\n{% endif %}\n    # FIXME: Required to ensure a consistent etc/allDict.cxx.pch\n    - {{ pin_compatible('libcxx', min_pin='x', max_pin='x') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - {{ pin_compatible('xxhash', max_pin='x.x.x') }}\n    - {{ pin_compatible('nlohmann_json', max_pin='x.x.x') }}\n    - cffi\n    - graphviz\n    - xorg-libx11  # [linux]\n    - xorg-libxext  # [linux]\n    - xorg-libxpm  # [linux]\n    - xorg-libxft  # [linux]\n    - libglu  # [linux]\n  run_constrained:\n    # Older numba versions have trouble with how LLVM is linked\n    - numba >=0.52\n    # Items listed here conflict with ROOT\n    - cling 9999\n    - root5 9999\n\ntest:\n  files:\n    - test.cpp\n  commands:\n    - root -l -b -q -x\n    - root -l -b -q -x test.cpp\n    # When testing with -e, explicitly set the return code to zero\n    - root -b -l -q -x -e '2+3; 0'\n    - root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'\n    # Check the thisroot scripts work\n    - thisroot.sh\n    - thisroot.csh\n    - thisroot.fish\n    # Test if OpenGL is working\n    - root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'\n    # This test will fail due to lack of graphics support but try it anyway\n    # It should exit with \"TEveException: TEveManager::Create ROOT is running in batch mode.\"\n    - root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true\n    # This tutorial uses davix to access a ROOT file over HTTP\n    - root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"\n    # FIXME: This test fails on ppc64le for some reason...\n    - XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"  # [not ppc64le]\n    # This command only works if the compilers are available\n    - root -l -b -q -x test.cpp++\n    # Ensure exceptions don't cause the interpreter to exit\n    # Expected to fail on apple silicon: https://github.com/root-project/root/issues/7541\n    - echo '.q' | root -e 'sddsa0'  # [not (osx and arm64) and build_platform == target_platform]\n\noutputs:\n  - name: root_base\n    script: install_root.sh\n    build:\n      number: {{ build_number }}\n      run_exports:\n        # https://abi-laboratory.pro/?view=timeline&l=root\n        - {{ pin_subpackage('root_base', max_pin='x.x.x') }}\n      ignore_prefix_files:\n        - lib/*.pcm            # [not aarch64]\n        # https://github.com/root-project/root/blob/975be1e7647098ee8db5333f0769fb12287d0f75/cmake/modules/RootBuildOptions.cmake#L328-L332\n        - etc/allDict.cxx.pch  # [aarch64]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - git\n        - pkg-config\n        - sed\n        - make\n        # Required for OpenGL support\n        # See https://conda-forge.org/docs/maintainer/knowledge_base.html?highlight=cdt#libgl\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n{% if not builtin_pyroot %}\n  - name: pyroot\n    build:\n      number: {{ build_number }}\n      script:\n        - mkdir \"pyroot-$PY_VER-build-dir\"\n        - cd \"pyroot-$PY_VER-build-dir\"\n        - |\n          cmake \\\n            ../root-source/bindings \\\n            -DPython_EXECUTABLE=${PYTHON} \\\n            -DCMAKE_INSTALL_PREFIX=${PREFIX} \\\n            -Ddataframe=ON \\\n            -Dstandalone_pyroot=ON\n        - make -j${CPU_COUNT}\n        - make install\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - make\n      host:\n        - {{ pin_subpackage('root_base', exact=True) }}\n        - python\n        - numpy\n        - nlohmann_json <3.10.4\n      run:\n        - {{ pin_subpackage('root_base', exact=True) }}\n        - python\n        - {{ pin_compatible('numpy') }}\n    test:\n      files:\n        - test_pyroot.py\n      imports:\n        - ROOT\n      commands:\n        - python test_pyroot.py\n        - jupyter-kernelspec list | grep ' root '\n{% endif %}\n  - name: root\n    build:\n      number: {{ build_number }}\n    requirements:\n      host:\n        - {{ pin_subpackage('root_base', exact=True) }}\n{% if not builtin_pyroot %}\n        - {{ pin_subpackage('pyroot', exact=True) }}\n{% endif %}\n        - python\n        - openssl\n        # Workaround due to root_base's ld_impl_linux-64 constraint not being accounted for when rendering\n        - ld_impl_linux-64 <2.40\n      run:\n        - {{ pin_subpackage('root_base', exact=True) }}\n{% if not builtin_pyroot %}\n        - {{ pin_subpackage('pyroot', exact=True) }}\n{% endif %}\n        - python\n        - compilers  # This package is hostile to how conda-build manages compilers\n        - metakernel\n        - ipython\n        - notebook\n        - numba\n    test:\n      files:\n        - test.cpp\n        - test_pyroot.py\n      imports:\n        - ROOT\n        - JupyROOT\n      commands:\n        - python test_pyroot.py\n        - root -l -b -q -x test.cpp\n        - root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'\n        - root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true\n        - root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"\n        - root -l -b -q -x test.cpp++\n        - jupyter-kernelspec list | grep ' root '\n{%- if \"ROOT_CONDA_IS_CI\" in os.environ %}\n  - name: root-nightly\n    build:\n      number: {{ build_number }}\n    requirements:\n      host:\n        - {{ pin_subpackage('root', exact=True) }}\n        - python\n        # https://github.com/conda/conda-build/issues/3308\n        - openssl\n      run:\n        - {{ pin_subpackage('root', exact=True) }}\n        - python\n        # https://github.com/conda/conda-build/issues/3308\n        - openssl\n{%- endif %}\n\nabout:\n  home: https://root.cern/\n  license: LGPL-2.1-only\n  license_file: root-source/LICENSE\n  doc_url: https://root.cern/documentation\n  dev_url: https://github.com/root-project/root/\n  summary: |\n      ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\n      processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\n      languages such as Python and R.\n  description: |\n      Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\n      on. Here are a few things to try:\n\n      * `root`: you can start up a session and see the splash screen; Control-D to exit.\n      * `python` followed by `import ROOT` will load PyROOT.\n      * `root --notebook` will start a notebook server with a ROOT kernel choice.\n      * `rootbrowse` will open a TBrowser session so you can look through files.\n      * `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n      * `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n      * `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\n      See the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\n      The ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n      `$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\n      scripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\n      There is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\n      having a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\n      In most cases users should use the `root` package directly, since it adds both of these, along with compilers,\n      Jupyter, and a few other things to facilitate using ROOT or PyROOT.\n\n      ROOT was built with and will report `-std=c++17` from `root-config`.\n\nextra:\n  recipe-maintainers:\n    - vepadulano\n    - chrisburr\n    - henryiii\n    - eguiraud\n",
 "req": {
  "__set__": true,
  "elements": [
   "afterimage",
   "c_compiler_stub",
   "c_stdlib_stub",
   "cdt_stub",
   "cffi",
   "cfitsio",
   "clangdev",
   "cmake",
   "compilers",
   "cxx_compiler_stub",
   "davix",
   "fftw",
   "freetype",
   "ftgl",
   "gdk-pixbuf",
   "giflib",
   "git",
   "gl2ps",
   "glew",
   "glib",
   "graphviz",
   "gsl",
   "gtest",
   "ipython",
   "ld_impl_linux-64",
   "libblas",
   "libcblas",
   "libcxx",
   "libglu",
   "libpng",
   "librsvg",
   "libtiff",
   "libxml2",
   "llvm",
   "llvmdev",
   "lz4-c",
   "make",
   "metakernel",
   "nlohmann_json",
   "notebook",
   "numba",
   "numpy",
   "openssl",
   "pcre",
   "pkg-config",
   "pythia8",
   "python",
   "root_base",
   "sed",
   "sqlite",
   "tbb",
   "tbb-devel",
   "vdt",
   "vector-classes",
   "xorg-libx11",
   "xorg-libxau",
   "xorg-libxcursor",
   "xorg-libxext",
   "xorg-libxfixes",
   "xorg-libxft",
   "xorg-libxpm",
   "xrootd",
   "xxhash",
   "xz",
   "zlib",
   "zstd"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev",
    "cxx_compiler_stub",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64",
    "libblas",
    "libcblas",
    "libcxx",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm",
    "llvmdev",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "libglu",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxft",
    "xorg-libxpm",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cdt_stub",
    "cmake",
    "cxx_compiler_stub",
    "git",
    "make",
    "pkg-config",
    "sed"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "afterimage",
    "c_compiler_stub",
    "c_stdlib_stub",
    "cfitsio",
    "clangdev 16.0.6 root_63200*",
    "cxx_compiler_stub",
    "davix",
    "fftw",
    "freetype",
    "ftgl",
    "gdk-pixbuf",
    "giflib",
    "gl2ps",
    "glew",
    "glib",
    "graphviz",
    "gsl",
    "gtest",
    "ld_impl_linux-64 <2.40",
    "libblas",
    "libcblas",
    "libcxx",
    "libglu",
    "libpng",
    "librsvg",
    "libtiff",
    "libxml2",
    "llvm 16.0.6",
    "llvmdev 16.0.6",
    "lz4-c",
    "nlohmann_json",
    "numpy",
    "openssl",
    "pcre",
    "pythia8",
    "python",
    "root_base",
    "sqlite",
    "tbb",
    "tbb-devel",
    "vdt",
    "vector-classes",
    "xorg-libx11",
    "xorg-libxau",
    "xorg-libxcursor",
    "xorg-libxext",
    "xorg-libxfixes",
    "xorg-libxft",
    "xorg-libxpm",
    "xrootd",
    "xxhash",
    "xz",
    "zlib",
    "zstd"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "c_stdlib_stub",
    "cffi",
    "compilers",
    "cxx_compiler_stub",
    "graphviz",
    "ipython",
    "libcxx",
    "libglu",
    "metakernel",
    "nlohmann_json",
    "notebook",
    "numba",
    "numpy",
    "python",
    "root_base",
    "xorg-libx11",
    "xorg-libxext",
    "xorg-libxft",
    "xorg-libxpm",
    "xxhash"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/root-project/root/archive/refs/tags/v6-32-00.tar.gz",
 "version": "6.32.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/root.json"
 }
}