{
 "PRed": [
  {
   "PR": {
    "number": 3,
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "Compiler",
    "migrator_version": 0
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR": {
    "number": 4,
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "CompilerRebuild",
    "migrator_version": 1,
    "name": "Python 3.7, GCC 7, R 3.5.1, openBLAS 0.3.2"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "number": 8,
    "state": "closed"
   },
   "data": {
    "bot_rerun": 1581782824.6515687,
    "migrator_name": "Version",
    "migrator_version": 0,
    "version": "950"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR": {
    "number": 17,
    "state": "closed"
   },
   "data": {
    "bot_rerun": 1617961857.3348894,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "number": 20,
    "state": "closed"
   },
   "data": {
    "bot_rerun": 1620765073.1506104,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "number": 22,
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "OSXArm",
    "migrator_version": 1,
    "name": "arm osx addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "number": 23,
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "ArchRebuild",
    "migrator_version": 1,
    "name": "aarch64 and ppc64le addition"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad": {
  "exception": "Error running migrate-feedstock in container - error VersionMigrationError('The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\\n\\nPlease check the URLs in your recipe with version \\'10031\\' to make sure they exist!\\n\\nWe also found the following errors:\\n\\n - could not hash URL template \\'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ version | replace(\".\", \"\") }}/ghostscript-{{ version }}.tar.gz\\'\\n') raised:\ncmd: ['docker',\n 'run',\n '-e',\n 'CF_TICK_IN_CONTAINER=true',\n '--security-opt=no-new-privileges',\n '--read-only',\n '--cap-drop=all',\n '--mount',\n 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',\n '-m',\n '6000m',\n '--cpus',\n '1',\n '--ulimit',\n 'nofile=1024:1024',\n '--ulimit',\n 'nproc=2048:2048',\n '--rm',\n '-i',\n '--mount',\n 'type=bind,source=/tmp/tmph6vp98vg,destination=/cf_tick_dir',\n 'ghcr.io/regro/conda-forge-tick:master',\n '/opt/conda/envs/cf-scripts/bin/python',\n '-u',\n '/opt/autotick-bot/docker/run_bot_task.py',\n 'migrate-feedstock',\n '--feedstock-name',\n 'ghostscript',\n '--default-branch',\n 'main',\n '--existing-feedstock-node-attrs',\n '-',\n '--kwargs',\n '{\\n \"hash_type\": \"sha256\"\\n}',\n '--log-level',\n 'info']\nstdout: {'data': None,\n 'default_branch': 'main',\n 'error': \"VersionMigrationError('The recipe did not change in the version \"\n          'migration, a URL did not hash, or there is jinja2 syntax the bot '\n          'cannot handle!\\\\n\\\\nPlease check the URLs in your recipe with '\n          \"version \\\\'10031\\\\' to make sure they exist!\\\\n\\\\nWe also found the \"\n          'following errors:\\\\n\\\\n - could not hash URL template '\n          \"\\\\'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ \"\n          'version | replace(\".\", \"\") }}/ghostscript-{{ version '\n          \"}}.tar.gz\\\\'\\\\n')\",\n 'feedstock_name': 'ghostscript',\n 'input_kwargs': '{\\n \"hash_type\": \"sha256\"\\n}',\n 'traceback': 'Traceback (most recent call last):\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 120, in '\n              '_run_bot_task\\n'\n              '    data = func(attrs=attrs, **kwargs)\\n'\n              '           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 308, in '\n              '_migrate_feedstock\\n'\n              '    data = run_migration_local(\\n'\n              '           ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/autotick-bot/conda_forge_tick/migration_runner.py\", line '\n              '241, in run_migration_local\\n'\n              '    data[\"migrate_return_value\"] = migrator.migrate(\\n'\n              '                                   ^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/autotick-bot/conda_forge_tick/migrators/version.py\", line '\n              '215, in migrate\\n'\n              '    raise VersionMigrationError(\\n'\n              'conda_forge_tick.migrators.version.VersionMigrationError: The '\n              'recipe did not change in the version migration, a URL did not '\n              'hash, or there is jinja2 syntax the bot cannot handle!\\n'\n              '\\n'\n              \"Please check the URLs in your recipe with version '10031' to \"\n              'make sure they exist!\\n'\n              '\\n'\n              'We also found the following errors:\\n'\n              '\\n'\n              ' - could not hash URL template '\n              \"'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ \"\n              'version | replace(\".\", \"\") }}/ghostscript-{{ version '\n              \"}}.tar.gz'\\n\"\n              '\\n'}",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 572, in _run_migrator_on_feedstock_branch",
   "    migrator_uid, pr_json = run(",
   "                            ^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 216, in run",
   "    migration_run_data = run_migration(",
   "                         ^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migration_runner.py\", line 63, in run_migration",
   "    return run_migration_containerized(",
   "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migration_runner.py\", line 157, in run_migration_containerized",
   "    data = run_container_task(",
   "           ^^^^^^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/utils.py\", line 249, in run_container_task",
   "    raise RuntimeError(",
   "RuntimeError: Error running migrate-feedstock in container - error VersionMigrationError('The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\\n\\nPlease check the URLs in your recipe with version \\'10031\\' to make sure they exist!\\n\\nWe also found the following errors:\\n\\n - could not hash URL template \\'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ version | replace(\".\", \"\") }}/ghostscript-{{ version }}.tar.gz\\'\\n') raised:",
   "cmd: ['docker',",
   " 'run',",
   " '-e',",
   " 'CF_TICK_IN_CONTAINER=true',",
   " '--security-opt=no-new-privileges',",
   " '--read-only',",
   " '--cap-drop=all',",
   " '--mount',",
   " 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',",
   " '-m',",
   " '6000m',",
   " '--cpus',",
   " '1',",
   " '--ulimit',",
   " 'nofile=1024:1024',",
   " '--ulimit',",
   " 'nproc=2048:2048',",
   " '--rm',",
   " '-i',",
   " '--mount',",
   " 'type=bind,source=/tmp/tmph6vp98vg,destination=/cf_tick_dir',",
   " 'ghcr.io/regro/conda-forge-tick:master',",
   " '/opt/conda/envs/cf-scripts/bin/python',",
   " '-u',",
   " '/opt/autotick-bot/docker/run_bot_task.py',",
   " 'migrate-feedstock',",
   " '--feedstock-name',",
   " 'ghostscript',",
   " '--default-branch',",
   " 'main',",
   " '--existing-feedstock-node-attrs',",
   " '-',",
   " '--kwargs',",
   " '{\\n \"hash_type\": \"sha256\"\\n}',",
   " '--log-level',",
   " 'info']",
   "stdout: {'data': None,",
   " 'default_branch': 'main',",
   " 'error': \"VersionMigrationError('The recipe did not change in the version \"",
   "          'migration, a URL did not hash, or there is jinja2 syntax the bot '",
   "          'cannot handle!\\\\n\\\\nPlease check the URLs in your recipe with '",
   "          \"version \\\\'10031\\\\' to make sure they exist!\\\\n\\\\nWe also found the \"",
   "          'following errors:\\\\n\\\\n - could not hash URL template '",
   "          \"\\\\'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ \"",
   "          'version | replace(\".\", \"\") }}/ghostscript-{{ version '",
   "          \"}}.tar.gz\\\\'\\\\n')\",",
   " 'feedstock_name': 'ghostscript',",
   " 'input_kwargs': '{\\n \"hash_type\": \"sha256\"\\n}',",
   " 'traceback': 'Traceback (most recent call last):\\n'",
   "              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 120, in '",
   "              '_run_bot_task\\n'",
   "              '    data = func(attrs=attrs, **kwargs)\\n'",
   "              '           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 308, in '",
   "              '_migrate_feedstock\\n'",
   "              '    data = run_migration_local(\\n'",
   "              '           ^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/autotick-bot/conda_forge_tick/migration_runner.py\", line '",
   "              '241, in run_migration_local\\n'",
   "              '    data[\"migrate_return_value\"] = migrator.migrate(\\n'",
   "              '                                   ^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/autotick-bot/conda_forge_tick/migrators/version.py\", line '",
   "              '215, in migrate\\n'",
   "              '    raise VersionMigrationError(\\n'",
   "              'conda_forge_tick.migrators.version.VersionMigrationError: The '",
   "              'recipe did not change in the version migration, a URL did not '",
   "              'hash, or there is jinja2 syntax the bot cannot handle!\\n'",
   "              '\\n'",
   "              \"Please check the URLs in your recipe with version '10031' to \"",
   "              'make sure they exist!\\n'",
   "              '\\n'",
   "              'We also found the following errors:\\n'",
   "              '\\n'",
   "              ' - could not hash URL template '",
   "              \"'https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs{{ \"",
   "              'version | replace(\".\", \"\") }}/ghostscript-{{ version '",
   "              \"}}.tar.gz'\\n\"",
   "              '\\n'}",
   ""
  ]
 },
 "pinning_version": "2021.11.07.11.04.46",
 "pre_pr_migrator_attempts": {
  "version": 2
 },
 "pre_pr_migrator_status": {
  "version": "bot error (<a href=\"https://github.com/regro/autotick-bot/actions/runs/4073094548\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 414, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 501, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1041, in _create\n    self.do_handshake()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1310, in do_handshake\n    self._sslobj.do_handshake()\nConnectionResetError: [Errno 104] Connection reset by peer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 489, in send\n    resp = conn.urlopen(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/retry.py\", line 550, in increment\n    raise six.reraise(type(error), error, _stacktrace)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/packages/six.py\", line 769, in reraise\n    raise value.with_traceback(tb)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/connection.py\", line 414, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 501, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1041, in _create\n    self.do_handshake()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/ssl.py\", line 1310, in do_handshake\n    self._sslobj.do_handshake()\nurllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 1166, in _run_migrator\n    migrator_uid, pr_json = run(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/auto_tick.py\", line 211, in run\n    feedstock_dir, repo = get_repo(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 306, in get_repo\n    _sync_default_branches(\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/git_utils.py\", line 328, in _sync_default_branches\n    default_branch = gh.get_repo(f\"conda-forge/{reponame}\").default_branch\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/MainClass.py\", line 330, in get_repo\n    headers, data = self.__requester.requestJsonAndCheck(\"GET\", url)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 354, in requestJsonAndCheck\n    *self.requestJson(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 454, in requestJson\n    return self.__requestEncode(cnx, verb, url, parameters, headers, input, encode)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 528, in __requestEncode\n    status, responseHeaders, output = self.__requestRaw(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 555, in __requestRaw\n    response = cnx.getresponse()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/github/Requester.py\", line 127, in getresponse\n    r = verb(\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 600, in get\n    return self.request(\"GET\", url, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 587, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/sessions.py\", line 701, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/requests/adapters.py\", line 547, in send\n    raise ConnectionError(err, request=request)\nrequests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\n"
 },
 "smithy_version": "3.14.3"
}