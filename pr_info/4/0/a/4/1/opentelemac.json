{
 "PRed": [
  {
   "PR": {
    "labels": [
     {
      "name": "bot-rerun"
     }
    ],
    "number": 1,
    "state": "closed"
   },
   "data": {
    "bot_rerun": 1716798639.4361918,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openmpi5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  },
  {
   "PR": {
    "labels": [],
    "number": 2,
    "state": "closed"
   },
   "data": {
    "bot_rerun": false,
    "migrator_name": "MigrationYaml",
    "migrator_object_version": 1,
    "migrator_version": 0,
    "name": "openmpi5"
   },
   "keys": [
    "bot_rerun",
    "migrator_name",
    "migrator_object_version",
    "migrator_version",
    "name"
   ]
  }
 ],
 "bad": {
  "exception": "Error running check-solvable in container - error ValueError(\"Variant configuration errors in argument_variants:\\n  zip_key entry python in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\\n  zip_key entry numpy in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\") raised:\ncmd: ['docker',\n 'run',\n '-e',\n 'CF_TICK_IN_CONTAINER=true',\n '--security-opt=no-new-privileges',\n '--read-only',\n '--cap-drop=all',\n '--mount',\n 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',\n '-m',\n '6000m',\n '--cpus',\n '1',\n '--ulimit',\n 'nofile=1024:1024',\n '--ulimit',\n 'nproc=2048:2048',\n '--rm',\n '-i',\n '--mount',\n 'type=bind,source=/tmp/tmp3is0wqf3/opentelemac-feedstock,destination=/cf_tick_dir,readonly',\n 'ghcr.io/regro/conda-forge-tick:master',\n '/opt/conda/envs/cf-scripts/bin/python',\n '-u',\n '/opt/autotick-bot/docker/run_bot_task.py',\n 'check-solvable',\n '--timeout',\n '600',\n '--verbosity',\n '2',\n '--log-level',\n 'info']\nstdout: {'additional_channels': None,\n 'build_platform': None,\n 'data': None,\n 'error': 'ValueError(\"Variant configuration errors in argument_variants:\\\\n  '\n          \"zip_key entry python in group frozenset({'python', 'numpy'}) is a \"\n          'duplicate, keys can only occur in one group\\\\n  zip_key entry numpy '\n          \"in group frozenset({'python', 'numpy'}) is a duplicate, keys can \"\n          'only occur in one group\")',\n 'timeout': 600,\n 'traceback': 'Traceback (most recent call last):\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 123, in '\n              '_run_bot_task\\n'\n              '    data = func(**kwargs)\\n'\n              '           ^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 406, in '\n              '_check_solvable\\n'\n              '    data[\"solvable\"], data[\"errors\"], '\n              'data[\"solvable_by_variant\"] = is_recipe_solvable(\\n'\n              '                                                                    '\n              '^^^^^^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/conda_forge_tick/solver_checks.py\", '\n              'line 91, in is_recipe_solvable\\n'\n              '    return _is_recipe_solvable(\\n'\n              '           ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 79, in is_recipe_solvable\\n'\n              '    res = _is_recipe_solvable(\\n'\n              '          ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 159, in _is_recipe_solvable\\n'\n              '    _solvable, _errors = _is_recipe_solvable_on_platform(\\n'\n              '                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 256, in _is_recipe_solvable_on_platform\\n'\n              '    metas = conda_build.api.render(\\n'\n              '            ^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/api.py\", '\n              'line 63, in render\\n'\n              '    metadata_tuples = render_recipe(\\n'\n              '                      ^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/render.py\", '\n              'line 990, in render_recipe\\n'\n              '    variants = get_package_variants(m, variants=variants)\\n'\n              '               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 698, in get_package_variants\\n'\n              '    combined_spec, specs = get_package_combined_spec(\\n'\n              '                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 662, in get_package_combined_spec\\n'\n              '    validate_spec(f, spec)\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 201, in validate_spec\\n'\n              '    raise ValueError(\\n'\n              'ValueError: Variant configuration errors in argument_variants:\\n'\n              \"  zip_key entry python in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n'\n              \"  zip_key entry numpy in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n',\n 'verbosity': 2}",
  "traceback": [
   "Traceback (most recent call last):",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 572, in _run_migrator_on_feedstock_branch",
   "    migrator_uid, pr_json = run(",
   "                            ^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 365, in run",
   "    solvable, errors, _ = is_recipe_solvable(",
   "                          ^^^^^^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 79, in is_recipe_solvable",
   "    return _is_recipe_solvable_containerized(",
   "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 138, in _is_recipe_solvable_containerized",
   "    data = run_container_task(",
   "           ^^^^^^^^^^^^^^^^^^^",
   "  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/utils.py\", line 249, in run_container_task",
   "    raise RuntimeError(",
   "RuntimeError: Error running check-solvable in container - error ValueError(\"Variant configuration errors in argument_variants:\\n  zip_key entry python in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\\n  zip_key entry numpy in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\") raised:",
   "cmd: ['docker',",
   " 'run',",
   " '-e',",
   " 'CF_TICK_IN_CONTAINER=true',",
   " '--security-opt=no-new-privileges',",
   " '--read-only',",
   " '--cap-drop=all',",
   " '--mount',",
   " 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',",
   " '-m',",
   " '6000m',",
   " '--cpus',",
   " '1',",
   " '--ulimit',",
   " 'nofile=1024:1024',",
   " '--ulimit',",
   " 'nproc=2048:2048',",
   " '--rm',",
   " '-i',",
   " '--mount',",
   " 'type=bind,source=/tmp/tmp3is0wqf3/opentelemac-feedstock,destination=/cf_tick_dir,readonly',",
   " 'ghcr.io/regro/conda-forge-tick:master',",
   " '/opt/conda/envs/cf-scripts/bin/python',",
   " '-u',",
   " '/opt/autotick-bot/docker/run_bot_task.py',",
   " 'check-solvable',",
   " '--timeout',",
   " '600',",
   " '--verbosity',",
   " '2',",
   " '--log-level',",
   " 'info']",
   "stdout: {'additional_channels': None,",
   " 'build_platform': None,",
   " 'data': None,",
   " 'error': 'ValueError(\"Variant configuration errors in argument_variants:\\\\n  '",
   "          \"zip_key entry python in group frozenset({'python', 'numpy'}) is a \"",
   "          'duplicate, keys can only occur in one group\\\\n  zip_key entry numpy '",
   "          \"in group frozenset({'python', 'numpy'}) is a duplicate, keys can \"",
   "          'only occur in one group\")',",
   " 'timeout': 600,",
   " 'traceback': 'Traceback (most recent call last):\\n'",
   "              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 123, in '",
   "              '_run_bot_task\\n'",
   "              '    data = func(**kwargs)\\n'",
   "              '           ^^^^^^^^^^^^^^\\n'",
   "              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 406, in '",
   "              '_check_solvable\\n'",
   "              '    data[\"solvable\"], data[\"errors\"], '",
   "              'data[\"solvable_by_variant\"] = is_recipe_solvable(\\n'",
   "              '                                                                    '",
   "              '^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File \"/opt/autotick-bot/conda_forge_tick/solver_checks.py\", '",
   "              'line 91, in is_recipe_solvable\\n'",
   "              '    return _is_recipe_solvable(\\n'",
   "              '           ^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '",
   "              'line 79, in is_recipe_solvable\\n'",
   "              '    res = _is_recipe_solvable(\\n'",
   "              '          ^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '",
   "              'line 159, in _is_recipe_solvable\\n'",
   "              '    _solvable, _errors = _is_recipe_solvable_on_platform(\\n'",
   "              '                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '",
   "              'line 256, in _is_recipe_solvable_on_platform\\n'",
   "              '    metas = conda_build.api.render(\\n'",
   "              '            ^^^^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/api.py\", '",
   "              'line 63, in render\\n'",
   "              '    metadata_tuples = render_recipe(\\n'",
   "              '                      ^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/render.py\", '",
   "              'line 990, in render_recipe\\n'",
   "              '    variants = get_package_variants(m, variants=variants)\\n'",
   "              '               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '",
   "              'line 698, in get_package_variants\\n'",
   "              '    combined_spec, specs = get_package_combined_spec(\\n'",
   "              '                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '",
   "              'line 662, in get_package_combined_spec\\n'",
   "              '    validate_spec(f, spec)\\n'",
   "              '  File '",
   "              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '",
   "              'line 201, in validate_spec\\n'",
   "              '    raise ValueError(\\n'",
   "              'ValueError: Variant configuration errors in argument_variants:\\n'",
   "              \"  zip_key entry python in group frozenset({'python', 'numpy'}) \"",
   "              'is a duplicate, keys can only occur in one group\\n'",
   "              \"  zip_key entry numpy in group frozenset({'python', 'numpy'}) \"",
   "              'is a duplicate, keys can only occur in one group\\n',",
   " 'verbosity': 2}",
   ""
  ]
 },
 "pinning_version": "2024.05.27.20.59.24",
 "pre_pr_migrator_attempts": {
  "numpy2": 44,
  "python312": 25
 },
 "pre_pr_migrator_status": {
  "numpy2": "bot error (<a href=\"https://github.com/regro/cf-scripts/actions/runs/9438397903\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 572, in _run_migrator_on_feedstock_branch\n    migrator_uid, pr_json = run(\n                            ^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 365, in run\n    solvable, errors, _ = is_recipe_solvable(\n                          ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 79, in is_recipe_solvable\n    return _is_recipe_solvable_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 138, in _is_recipe_solvable_containerized\n    data = run_container_task(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/utils.py\", line 249, in run_container_task\n    raise RuntimeError(\nRuntimeError: Error running check-solvable in container - error ValueError(\"Variant configuration errors in argument_variants:\\n  zip_key entry python in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\\n  zip_key entry numpy in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\\n  zip fields in zip_key group frozenset({'python_impl', 'python', 'numpy'}) are not all the same length\") raised:\ncmd: ['docker',\n 'run',\n '-e',\n 'CF_TICK_IN_CONTAINER=true',\n '--security-opt=no-new-privileges',\n '--read-only',\n '--cap-drop=all',\n '--mount',\n 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',\n '-m',\n '6000m',\n '--cpus',\n '1',\n '--ulimit',\n 'nofile=1024:1024',\n '--ulimit',\n 'nproc=2048:2048',\n '--rm',\n '-i',\n '--mount',\n 'type=bind,source=/tmp/tmpmi4qg7yd/opentelemac-feedstock,destination=/cf_tick_dir,readonly',\n 'ghcr.io/regro/conda-forge-tick:master',\n '/opt/conda/envs/cf-scripts/bin/python',\n '-u',\n '/opt/autotick-bot/docker/run_bot_task.py',\n 'check-solvable',\n '--timeout',\n '600',\n '--verbosity',\n '2',\n '--log-level',\n 'info']\nstdout: {'additional_channels': None,\n 'build_platform': None,\n 'data': None,\n 'error': 'ValueError(\"Variant configuration errors in argument_variants:\\\\n  '\n          \"zip_key entry python in group frozenset({'python', 'numpy'}) is a \"\n          'duplicate, keys can only occur in one group\\\\n  zip_key entry numpy '\n          \"in group frozenset({'python', 'numpy'}) is a duplicate, keys can \"\n          'only occur in one group\\\\n  zip fields in zip_key group '\n          \"frozenset({'python_impl', 'python', 'numpy'}) are not all the same \"\n          'length\")',\n 'timeout': 600,\n 'traceback': 'Traceback (most recent call last):\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 123, in '\n              '_run_bot_task\\n'\n              '    data = func(**kwargs)\\n'\n              '           ^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 406, in '\n              '_check_solvable\\n'\n              '    data[\"solvable\"], data[\"errors\"], '\n              'data[\"solvable_by_variant\"] = is_recipe_solvable(\\n'\n              '                                                                    '\n              '^^^^^^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/conda_forge_tick/solver_checks.py\", '\n              'line 91, in is_recipe_solvable\\n'\n              '    return _is_recipe_solvable(\\n'\n              '           ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 79, in is_recipe_solvable\\n'\n              '    res = _is_recipe_solvable(\\n'\n              '          ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 159, in _is_recipe_solvable\\n'\n              '    _solvable, _errors = _is_recipe_solvable_on_platform(\\n'\n              '                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 256, in _is_recipe_solvable_on_platform\\n'\n              '    metas = conda_build.api.render(\\n'\n              '            ^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/api.py\", '\n              'line 63, in render\\n'\n              '    metadata_tuples = render_recipe(\\n'\n              '                      ^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/render.py\", '\n              'line 990, in render_recipe\\n'\n              '    variants = get_package_variants(m, variants=variants)\\n'\n              '               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 698, in get_package_variants\\n'\n              '    combined_spec, specs = get_package_combined_spec(\\n'\n              '                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 662, in get_package_combined_spec\\n'\n              '    validate_spec(f, spec)\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 201, in validate_spec\\n'\n              '    raise ValueError(\\n'\n              'ValueError: Variant configuration errors in argument_variants:\\n'\n              \"  zip_key entry python in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n'\n              \"  zip_key entry numpy in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n'\n              \"  zip fields in zip_key group frozenset({'python_impl', \"\n              \"'python', 'numpy'}) are not all the same length\\n\",\n 'verbosity': 2}\n",
  "python312": "bot error (<a href=\"https://github.com/regro/cf-scripts/actions/runs/9439060676\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 572, in _run_migrator_on_feedstock_branch\n    migrator_uid, pr_json = run(\n                            ^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 365, in run\n    solvable, errors, _ = is_recipe_solvable(\n                          ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 79, in is_recipe_solvable\n    return _is_recipe_solvable_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/solver_checks.py\", line 138, in _is_recipe_solvable_containerized\n    data = run_container_task(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/utils.py\", line 249, in run_container_task\n    raise RuntimeError(\nRuntimeError: Error running check-solvable in container - error ValueError(\"Variant configuration errors in argument_variants:\\n  zip_key entry python in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\\n  zip_key entry numpy in group frozenset({'python', 'numpy'}) is a duplicate, keys can only occur in one group\") raised:\ncmd: ['docker',\n 'run',\n '-e',\n 'CF_TICK_IN_CONTAINER=true',\n '--security-opt=no-new-privileges',\n '--read-only',\n '--cap-drop=all',\n '--mount',\n 'type=tmpfs,destination=/tmp,tmpfs-mode=1777,tmpfs-size=6000000000',\n '-m',\n '6000m',\n '--cpus',\n '1',\n '--ulimit',\n 'nofile=1024:1024',\n '--ulimit',\n 'nproc=2048:2048',\n '--rm',\n '-i',\n '--mount',\n 'type=bind,source=/tmp/tmp3is0wqf3/opentelemac-feedstock,destination=/cf_tick_dir,readonly',\n 'ghcr.io/regro/conda-forge-tick:master',\n '/opt/conda/envs/cf-scripts/bin/python',\n '-u',\n '/opt/autotick-bot/docker/run_bot_task.py',\n 'check-solvable',\n '--timeout',\n '600',\n '--verbosity',\n '2',\n '--log-level',\n 'info']\nstdout: {'additional_channels': None,\n 'build_platform': None,\n 'data': None,\n 'error': 'ValueError(\"Variant configuration errors in argument_variants:\\\\n  '\n          \"zip_key entry python in group frozenset({'python', 'numpy'}) is a \"\n          'duplicate, keys can only occur in one group\\\\n  zip_key entry numpy '\n          \"in group frozenset({'python', 'numpy'}) is a duplicate, keys can \"\n          'only occur in one group\")',\n 'timeout': 600,\n 'traceback': 'Traceback (most recent call last):\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 123, in '\n              '_run_bot_task\\n'\n              '    data = func(**kwargs)\\n'\n              '           ^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/docker/run_bot_task.py\", line 406, in '\n              '_check_solvable\\n'\n              '    data[\"solvable\"], data[\"errors\"], '\n              'data[\"solvable_by_variant\"] = is_recipe_solvable(\\n'\n              '                                                                    '\n              '^^^^^^^^^^^^^^^^^^^\\n'\n              '  File \"/opt/autotick-bot/conda_forge_tick/solver_checks.py\", '\n              'line 91, in is_recipe_solvable\\n'\n              '    return _is_recipe_solvable(\\n'\n              '           ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 79, in is_recipe_solvable\\n'\n              '    res = _is_recipe_solvable(\\n'\n              '          ^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 159, in _is_recipe_solvable\\n'\n              '    _solvable, _errors = _is_recipe_solvable_on_platform(\\n'\n              '                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_check_solvable/check_solvable.py\", '\n              'line 256, in _is_recipe_solvable_on_platform\\n'\n              '    metas = conda_build.api.render(\\n'\n              '            ^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/api.py\", '\n              'line 63, in render\\n'\n              '    metadata_tuples = render_recipe(\\n'\n              '                      ^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/render.py\", '\n              'line 990, in render_recipe\\n'\n              '    variants = get_package_variants(m, variants=variants)\\n'\n              '               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 698, in get_package_variants\\n'\n              '    combined_spec, specs = get_package_combined_spec(\\n'\n              '                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 662, in get_package_combined_spec\\n'\n              '    validate_spec(f, spec)\\n'\n              '  File '\n              '\"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/variants.py\", '\n              'line 201, in validate_spec\\n'\n              '    raise ValueError(\\n'\n              'ValueError: Variant configuration errors in argument_variants:\\n'\n              \"  zip_key entry python in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n'\n              \"  zip_key entry numpy in group frozenset({'python', 'numpy'}) \"\n              'is a duplicate, keys can only occur in one group\\n',\n 'verbosity': 2}\n"
 },
 "smithy_version": "3.36.0"
}