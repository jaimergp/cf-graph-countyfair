{
 "bad": false,
 "new_version": "6.29.4",
 "new_version_attempts": {
  "5.2.1": 1,
  "5.3.0": 1,
  "5.3.1": 1,
  "5.3.2": 1,
  "5.3.3": 1,
  "5.3.4": 1,
  "5.4.0": 1,
  "5.4.1": 1,
  "5.4.2": 1,
  "5.4.3": 1,
  "5.5.0": 1,
  "5.5.1": 1,
  "5.5.2": 1,
  "5.5.3": 1,
  "5.5.4": 1,
  "5.5.5": 1,
  "6.0.0": 1,
  "6.0.1": 1,
  "6.0.2": 1,
  "6.0.3": 2,
  "6.1.0": 1,
  "6.11.0": 1,
  "6.12.0": 1,
  "6.12.1": 1,
  "6.13.0": 1,
  "6.13.1": 1,
  "6.14.0": 2,
  "6.15.0": 1,
  "6.15.1": 1,
  "6.15.2": 1,
  "6.15.3": 1,
  "6.16.1": 1,
  "6.16.2": 1,
  "6.17.1": 1,
  "6.18.0": 1,
  "6.18.1": 1,
  "6.18.2": 1,
  "6.18.3": 1,
  "6.19.0": 1,
  "6.19.1": 1,
  "6.19.2": 1,
  "6.2.0": 1,
  "6.20.0": 1,
  "6.20.2": 1,
  "6.21.0": 1,
  "6.21.1": 0,
  "6.21.2": 1,
  "6.21.3": 1,
  "6.22.0": 1,
  "6.23.0": 1,
  "6.23.1": 1,
  "6.23.2": 1,
  "6.23.3": 1,
  "6.24.0": 1,
  "6.25.0": 1,
  "6.25.1": 1,
  "6.25.2": 1,
  "6.26.0": 1,
  "6.27.0": 1,
  "6.27.1": 1,
  "6.28.0": 1,
  "6.29.2": 1,
  "6.29.3": 1,
  "6.29.4": 6,
  "6.3.1": 1,
  "6.4.1": 1,
  "6.4.2": 1,
  "6.5.0": 1,
  "6.5.1": 7,
  "6.6.0": 4,
  "6.6.1": 4,
  "6.8.0": 1,
  "6.9.0": 1,
  "6.9.1": 1,
  "6.9.2": 1
 },
 "new_version_errors": {
  "6.29.4": "bot error (<a href=\"https://github.com/regro/cf-scripts/actions/runs/9221948270\">bot CI job</a>): main: Traceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 567, in _run_migrator_on_feedstock_branch\n    migrator_uid, pr_json = run(\n                            ^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/auto_tick.py\", line 214, in run\n    migration_run_data = run_migration(\n                         ^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migration_runner.py\", line 35, in run_migration\n    return run_migration_local(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migration_runner.py\", line 132, in run_migration_local\n    migrator.run_pre_piggyback_migrations(recipe_dir, feedstock_ctx.attrs, **kwargs)\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migrators/core.py\", line 418, in run_pre_piggyback_migrations\n    mini_migrator.migrate(recipe_dir, attrs, **kwargs)\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/migrators/conda_forge_yaml_cleanup.py\", line 42, in migrate\n    cfg = yaml.load(fp.read())\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/main.py\", line 451, in load\n    return constructor.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 116, in get_single_data\n    return self.construct_document(node)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 125, in construct_document\n    for _dummy in generator:\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1476, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1366, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 278, in check_mapping_key\n    raise DuplicateKeyError(*args)\nruamel.yaml.constructor.DuplicateKeyError: while constructing a mapping\n  in \"<unicode string>\", line 1, column 1:\n    conda_forge_output_validation: true\n    ^ (line: 1)\nfound duplicate key \"bot\" with value \"{'inspection': 'hint-all'}\" (original value: \"{'abi_migration_branches': ['5.x']}\")\n  in \"<unicode string>\", line 15, column 1:\n    bot:\n    ^ (line: 15)\n\nTo suppress this check see:\n    http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n\n",
  "6.5.1": "We found a problem parsing the recipe for version '6.5.1': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 447, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 115, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "6.6.0": "We found a problem parsing the recipe for version '6.6.0': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 447, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 115, in _parse_jinja2_variables\n    assert False, jinja2_data\n",
  "6.6.1": "We found a problem parsing the recipe for version '6.6.1': \n\nAssertionError('\\n')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 508, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 447, in __init__\n    v, e = _parse_jinja2_variables(meta_yaml)\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 115, in _parse_jinja2_variables\n    assert False, jinja2_data\n"
 }
}