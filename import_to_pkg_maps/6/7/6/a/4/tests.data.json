{
 "tests.data": {
  "__set__": true,
  "elements": [
   "pybtex"
  ]
 },
 "tests.data_asset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_citations": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_internals": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_data_asset_util": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_expectation_decorators": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_filedata_asset_expectations": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_asset.test_parameter_substitution": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.conftest": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_evaluation_parameter_store": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_expectations_store": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_html_site_store": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_store_backends": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.store.test_validations_store": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_configuration_storage": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_errors": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_config_variables": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_on_teams": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_resource_identifiers": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_store_configs": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_types": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.data_context.test_data_context_utils": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.database_test": {
  "__set__": true,
  "elements": [
   "pybtex"
  ]
 },
 "tests.database_test.data": {
  "__set__": true,
  "elements": [
   "pybtex"
  ]
 },
 "tests.database_test.database_test": {
  "__set__": true,
  "elements": [
   "pybtex"
  ]
 },
 "tests.dataset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_legacy": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.dataset.test_dataset_util_legacy": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.dataset.test_pandas_dataset": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.dataset.test_util": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasets": {
  "__set__": true,
  "elements": [
   "snntoolbox"
  ]
 },
 "tests.datasource": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.conftest": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_batch_kwargs_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_glob_reader_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_manual_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_query_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_s3_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_subdir_reader_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.generator.test_table_generator": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_generators": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_batch_kwargs": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_datasources": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_pandas_datasource": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_sparkdf_datasource": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datasource.test_sqlalchemy_datasource_workarounds": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.datatypes": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.datatypes.test_datatypes": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.datatypes.test_uuid": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 }
}