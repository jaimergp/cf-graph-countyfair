{
 "Test.Optimizer": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "Test.Optimizer.test_qgt_itersolve": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "Test.Optimizer.test_qgt_logic": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "Test.Optimizer.test_qgt_solvers": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "Test.Optimizer.test_sr_api": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "test.optim": {
  "__set__": true,
  "elements": [
   "gpytorch"
  ]
 },
 "test.optim.test_ngd": {
  "__set__": true,
  "elements": [
   "gpytorch"
  ]
 },
 "test.optim_adam_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_adamw_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_composite_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_constant_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_cosine_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_linear_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_multi_step_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_polynomial_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_step_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_step_with_fixed_gamma_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_param_scheduler_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_rmsprop_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_rmsprop_tf_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optim_sgd_test": {
  "__set__": true,
  "elements": [
   "classy_vision"
  ]
 },
 "test.optimizer": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "test.optimizer.test_qgt_itersolve": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "test.optimizer.test_qgt_logic": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "test.optimizer.test_qgt_solvers": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 },
 "test.optimizer.test_sr_api": {
  "__set__": true,
  "elements": [
   "netket"
  ]
 }
}