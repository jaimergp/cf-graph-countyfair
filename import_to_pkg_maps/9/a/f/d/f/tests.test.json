{
 "tests.test": {
  "__set__": true,
  "elements": [
   "jaws"
  ]
 },
 "tests.test_1_xlsx": {
  "__set__": true,
  "elements": [
   "sheet2dict"
  ]
 },
 "tests.test_1st_system": {
  "__set__": true,
  "elements": [
   "andes",
   "ltbams"
  ]
 },
 "tests.test_2_csv": {
  "__set__": true,
  "elements": [
   "sheet2dict"
  ]
 },
 "tests.test_2nd_order_grads": {
  "__set__": true,
  "elements": [
   "theano-pymc"
  ]
 },
 "tests.test_3_xlsx": {
  "__set__": true,
  "elements": [
   "sheet2dict"
  ]
 },
 "tests.test_AudioClips": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_Basic": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_BicgJacobi": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_COREG": {
  "__set__": true,
  "elements": [
   "arosics"
  ]
 },
 "tests.test_COREG_LOCAL": {
  "__set__": true,
  "elements": [
   "arosics"
  ]
 },
 "tests.test_Collection": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_FasterRCNN": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_IO": {
  "__set__": true,
  "elements": [
   "open3spn2"
  ]
 },
 "tests.test_IOH_benchmarking": {
  "__set__": true,
  "elements": [
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_function": {
  "__set__": true,
  "elements": [
   "iohexperimenter"
  ]
 },
 "tests.test_IOH_logger": {
  "__set__": true,
  "elements": [
   "iohexperimenter"
  ]
 },
 "tests.test_ImageSequenceClip": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_IoU": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_JmaCsvCatalog": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_Material": {
  "__set__": true,
  "elements": [
   "neutronics_material_maker"
  ]
 },
 "tests.test_Material_from_mixture": {
  "__set__": true,
  "elements": [
   "neutronics_material_maker"
  ]
 },
 "tests.test_Mumps": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_Mutation": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_Noise2VoidDataGenerator": {
  "__set__": true,
  "elements": [
   "n2v"
  ]
 },
 "tests.test_Noise2VoidDataWrapper": {
  "__set__": true,
  "elements": [
   "n2v"
  ]
 },
 "tests.test_PR": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_Pardiso": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_Scipy": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_Sensor": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_SeqLike": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SeqLikeAccessor": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SeqLike_alignment": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SeqLike_conversion_to_numerical": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SeqLike_magic_methods": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SeqLike_to_other_seq_formats": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_SequenceLike": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_TextClip": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_Triangle": {
  "__set__": true,
  "elements": [
   "pymatsolver"
  ]
 },
 "tests.test_VideoClip": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_VideoFileClip": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_Videos": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test__env": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_aaSeqLike_ntSeqLike": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_abspath": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_accel": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_accept": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_accessor": {
  "__set__": true,
  "elements": [
   "extract_model",
   "py-cordex"
  ]
 },
 "tests.test_accuracy": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_action": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_active_cells": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_activitysim": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_adaptiveHistogram": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_addressing": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_adversary": {
  "__set__": true,
  "elements": [
   "artificial-adversary"
  ]
 },
 "tests.test_ae": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_affinities": {
  "__set__": true,
  "elements": [
   "fasttsne"
  ]
 },
 "tests.test_aggregator": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_aio_subprocess": {
  "__set__": true,
  "elements": [
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_alg": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_all": {
  "__set__": true,
  "elements": [
   "stemflow"
  ]
 },
 "tests.test_all_notebooks": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_andes": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_animations": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_ann": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_annotations": {
  "__set__": true,
  "elements": [
   "pyannote.core"
  ]
 },
 "tests.test_anypath": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_api": {
  "__set__": true,
  "elements": [
   "flask-restplus",
   "jhub-client",
   "nb_cron",
   "pyinfra",
   "quilt",
   "quilt3",
   "tomlkit"
  ]
 },
 "tests.test_api.test_api": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_arguments": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_command": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_config": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_deploys": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_facts": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_host": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_inventory": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_operations": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_api.test_api_util": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_apidoc": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_app": {
  "__set__": true,
  "elements": [
   "localtileserver",
   "sanic",
   "sigpy"
  ]
 },
 "tests.test_application": {
  "__set__": true,
  "elements": [
   "tranquilizer"
  ]
 },
 "tests.test_apps": {
  "__set__": true,
  "elements": [
   "afwizard"
  ]
 },
 "tests.test_archive": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_arg_tool": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_argument_parser": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_artifacts": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_asgi": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_asprs": {
  "__set__": true,
  "elements": [
   "afwizard"
  ]
 },
 "tests.test_assets": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_async_cursor": {
  "__set__": true,
  "elements": [
   "pyathena"
  ]
 },
 "tests.test_async_query": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_async_result": {
  "__set__": true,
  "elements": [
   "mpire"
  ]
 },
 "tests.test_async_retry": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_async_tx": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_asyncio_client": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_atom": {
  "__set__": true,
  "elements": [
   "crystals"
  ]
 },
 "tests.test_atom_number": {
  "__set__": true,
  "elements": [
   "xymol"
  ]
 },
 "tests.test_attacks": {
  "__set__": true,
  "elements": [
   "artificial-adversary"
  ]
 },
 "tests.test_augmentation": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_auth": {
  "__set__": true,
  "elements": [
   "conda-store-server"
  ]
 },
 "tests.test_auto": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_autograd": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_autoreload": {
  "__set__": true,
  "elements": [
   "plum-dispatch"
  ]
 },
 "tests.test_autouri_localize": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_autouri_lock": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_avalanche_classification_dataset": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_aws": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_azure_specific": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_backend": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_backwards_compatibility": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_bad_commands_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_compile_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_cryptography_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_defusedxml_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_dl_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_duo_client_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_eval_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_exec_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_gl_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_hashlib_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_input_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_itsdangerous_kwarg_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_marshal_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_n_sp": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_bad_onelogin_kwarg_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_onelogin_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_os_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_pickle_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_popen2_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_pycrypto_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_random_generator_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_re_catastrophic_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_request": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_bad_requests_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_shelve_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_ssl_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_subprocess_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_sys_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_tarfile_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_tempfile_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_kwarg_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_urllib3_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_xml_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_xmlrpc_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_xmlsec_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_yaml_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bad_zipfile_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_bart": {
  "__set__": true,
  "elements": [
   "pymc-bart"
  ]
 },
 "tests.test_base": {
  "__set__": true,
  "elements": [
   "atlassian-python-api",
   "awacs",
   "crccheck",
   "crystals",
   "embetter",
   "pathy",
   "sanic"
  ]
 },
 "tests.test_base_class_erosion_model_boundary_handers": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_inputs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_misc": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_output_writers": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_outputs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_erosion_model_run": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_stochastic_erosion_model": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_class_two_lithology_base": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_dataclasses": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_base_level_capture_node_baselevel_handler": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_level_generic_function_baselevel_handler": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_level_not_core_node_baselevel_handler": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_level_precip_changer": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_level_single_node_baselevel_handler": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_base_recipe": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_base_url": {
  "__set__": true,
  "elements": [
   "pyradios"
  ]
 },
 "tests.test_baseposelist": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_basic": {
  "__set__": true,
  "elements": [
   "aiomysql",
   "histogrammar",
   "igl",
   "scvelo",
   "torch-optimizer"
  ]
 },
 "tests.test_basic_regression": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_basic_types_utils": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_basics": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_benchmark": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_bias": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_bigint": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_binary_field": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_biomech_model": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_biplots": {
  "__set__": true,
  "elements": [
   "emperor"
  ]
 },
 "tests.test_bitbucket_cloud": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_cloud_oo": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_bitbucket_server_oo": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_block": {
  "__set__": true,
  "elements": [
   "andes",
   "sigpy"
  ]
 },
 "tests.test_blocking_client": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_blueprint_copy": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_blueprint_group": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_blueprints": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_bool_field": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_boosting_models": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_bootstrap": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_bounds": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_box": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_breakpoint": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_bucket": {
  "__set__": true,
  "elements": [
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_build": {
  "__set__": true,
  "elements": [
   "ablog",
   "bamnostic",
   "tomlkit"
  ]
 },
 "tests.test_bulk": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_bulk_inserts": {
  "__set__": true,
  "elements": [
   "aiomysql"
  ]
 },
 "tests.test_bytes_and_string_lists": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_bytescollection": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_cache": {
  "__set__": true,
  "elements": [
   "suds-jurko",
   "typhos"
  ]
 },
 "tests.test_caching": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_calc": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_calculation_node": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_calculator": {
  "__set__": true,
  "elements": [
   "pymace"
  ]
 },
 "tests.test_callbacks": {
  "__set__": true,
  "elements": [
   "deepforest",
   "glymur"
  ]
 },
 "tests.test_cameraconfig": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "tests.test_canopy": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_capabilities": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_caper_labels": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_caper_wdl_parser": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_caper_workflow_opts": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_capture_controller": {
  "__set__": true,
  "elements": [
   "pymagewell"
  ]
 },
 "tests.test_case": {
  "__set__": true,
  "elements": [
   "andes",
   "ltbams"
  ]
 },
 "tests.test_catalog": {
  "__set__": true,
  "elements": [
   "pycsep",
   "pystac"
  ]
 },
 "tests.test_catalyst": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_cats_only": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_cell_metadata": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_cells": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_centerline": {
  "__set__": true,
  "elements": [
   "sed-plume"
  ]
 },
 "tests.test_cevae": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_cg": {
  "__set__": true,
  "elements": [
   "pymace"
  ]
 },
 "tests.test_characters": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_check": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_checks": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_checksum": {
  "__set__": true,
  "elements": [
   "crccheck"
  ]
 },
 "tests.test_cifar100_benchmarks": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_cifar10_benchmarks": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_cinema": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_classifier_base": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_classifier_explainer": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_cli": {
  "__set__": true,
  "elements": [
   "afwizard",
   "andes",
   "biom-format",
   "compaction",
   "explainerdashboard",
   "jupytext",
   "ltbams",
   "model-index",
   "mofchecker",
   "openamundsen",
   "optuna",
   "pathy",
   "plotext",
   "pyinfra",
   "pyremo",
   "pystac-client",
   "quilt",
   "quilt3",
   "sanic",
   "saws",
   "sed-plume",
   "typhos",
   "verta"
  ]
 },
 "tests.test_cli.test_add_metadata": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_cli": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_deploy": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_exceptions": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli.test_cli_util": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli.test_context_objects": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli.test_endpoint": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_cli.test_registry": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_cli.test_repository": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_cli.test_show_install_info": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_subset_table": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_summarize_table": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_converter": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_table_normalizer": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_uc_processor": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.test_validate_table": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_cli.util": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_cli_run": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_cli_server_client_gcp": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_client": {
  "__set__": true,
  "elements": [
   "cloudpathlib",
   "kylinpy",
   "localtileserver",
   "notion-client",
   "pystac-client",
   "yarg"
  ]
 },
 "tests.test_client_cache": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_client_it": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_client_resource_it": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_client_unit": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_clients": {
  "__set__": true,
  "elements": [
   "pathy"
  ]
 },
 "tests.test_climatology": {
  "__set__": true,
  "elements": [
   "esmlab"
  ]
 },
 "tests.test_clock": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_cloudpath_file_io": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_instantiation": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_internal": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_manipulation": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_cloudpath_upload_copy": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_clustering": {
  "__set__": true,
  "elements": [
   "pycircstat"
  ]
 },
 "tests.test_cmor": {
  "__set__": true,
  "elements": [
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_cmreshandler": {
  "__set__": true,
  "elements": [
   "cmreshandler"
  ]
 },
 "tests.test_cmresserializer": {
  "__set__": true,
  "elements": [
   "cmreshandler"
  ]
 },
 "tests.test_codegen": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_codestream": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_codon_tables": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_coefficient": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_coffee": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_collection": {
  "__set__": true,
  "elements": [
   "fiona",
   "pystac"
  ]
 },
 "tests.test_collection_client": {
  "__set__": true,
  "elements": [
   "pystac-client"
  ]
 },
 "tests.test_collection_crs": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_collection_legacy": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_collections": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_colors": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_colour_specification_box": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_columns": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_combine": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_combine_data": {
  "__set__": true,
  "elements": [
   "metocean-api"
  ]
 },
 "tests.test_combined": {
  "__set__": true,
  "elements": [
   "portalocker"
  ]
 },
 "tests.test_combustor": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_comcat": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_command_line": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_command_line_tool": {
  "__set__": true,
  "elements": [
   "remove_dagmc_tags"
  ]
 },
 "tests.test_commandline": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_commandline_entrypoint": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_commands": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_common": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_common.test_basics": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_common.test_transformerselectormixin": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_comms": {
  "__set__": true,
  "elements": [
   "mpire"
  ]
 },
 "tests.test_compaction": {
  "__set__": true,
  "elements": [
   "compaction"
  ]
 },
 "tests.test_compare": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_compare_logs": {
  "__set__": true,
  "elements": [
   "felling"
  ]
 },
 "tests.test_compat": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_compilation": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_compiler": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_completer": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_component": {
  "__set__": true,
  "elements": [
   "compaction"
  ]
 },
 "tests.test_components": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_compositing": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_compound_crs": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_compressor": {
  "__set__": true,
  "elements": [
   "django-tinymce",
   "pyturbo"
  ]
 },
 "tests.test_compressor_aero": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_compressor_geom": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_con_utils": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_concurrency": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_concurrency.run_functions": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_concurrency.test_concurrency": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_concurrent": {
  "__set__": true,
  "elements": [
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_conditions": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_config": {
  "__set__": true,
  "elements": [
   "aesara",
   "btrack",
   "glymur",
   "lux-api",
   "magpylib",
   "mmsegmentation",
   "openamundsen",
   "pylama",
   "pytermgui",
   "sanic",
   "theano-pymc",
   "verta",
   "yggdrasil"
  ]
 },
 "tests.test_config_manager": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_configure_felling": {
  "__set__": true,
  "elements": [
   "felling"
  ]
 },
 "tests.test_confluence_advanced_mode": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_confluence_attach": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_connect": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_connection": {
  "__set__": true,
  "elements": [
   "aiomysql",
   "pymapd",
   "pyomniscidb",
   "webdavclient3"
  ]
 },
 "tests.test_connectors": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_ansible": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_chroot": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_docker": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_dockerssh": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_local": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_mech": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_ssh": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_sshuserclient": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_terraform": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_util": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_vagrant": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_connectors.test_winrm": {
  "__set__": true,
  "elements": [
   "pyinfra"
  ]
 },
 "tests.test_console": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_constants": {
  "__set__": true,
  "elements": [
   "openskill",
   "sanic"
  ]
 },
 "tests.test_constraint": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_constraints": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_contentsmanager": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_context": {
  "__set__": true,
  "elements": [
   "kit4dl"
  ]
 },
 "tests.test_contextmanager": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_control": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_controlcharacters": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_controls": {
  "__set__": true,
  "elements": [
   "mpl-interactions"
  ]
 },
 "tests.test_conv": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_conversion": {
  "__set__": true,
  "elements": [
   "crystals"
  ]
 },
 "tests.test_converter": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_converters": {
  "__set__": true,
  "elements": [
   "radioactivedecay"
  ]
 },
 "tests.test_convertf": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_cookies": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_cordex": {
  "__set__": true,
  "elements": [
   "py-cordex"
  ]
 },
 "tests.test_core": {
  "__set__": true,
  "elements": [
   "dask_groupby",
   "edgetest",
   "emperor",
   "flox",
   "pylama",
   "weldx"
  ]
 },
 "tests.test_core50": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_correctness": {
  "__set__": true,
  "elements": [
   "fasttsne"
  ]
 },
 "tests.test_cors": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_counterfactual_unit_selection": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_countmin": {
  "__set__": true,
  "elements": [
   "sketchnu"
  ]
 },
 "tests.test_crawler": {
  "__set__": true,
  "elements": [
   "thredds_crawler"
  ]
 },
 "tests.test_crc": {
  "__set__": true,
  "elements": [
   "crccheck"
  ]
 },
 "tests.test_create_catalog": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_create_precipitator": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_create_rating": {
  "__set__": true,
  "elements": [
   "openskill"
  ]
 },
 "tests.test_create_runoff_generator": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_create_task": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_creating": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_credentials": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_cromwell": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_cromwell_backend": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_cromwell_metadata": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_cromwell_rest_api": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_crs": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_crystal": {
  "__set__": true,
  "elements": [
   "crystals"
  ]
 },
 "tests.test_csep1_evaluations": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_ctrl": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_cube_source": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_cuda_setup_evaluator": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_cursor": {
  "__set__": true,
  "elements": [
   "aiomysql",
   "pyathena",
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_cursor_interruptions": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_curve_geometries": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_custom_options": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_custom_request": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_custom_streams": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_cv": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_cyrilic_client_it": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_dae_names": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_dashboard": {
  "__set__": true,
  "elements": [
   "explainerdashboard",
   "optuna"
  ]
 },
 "tests.test_data": {
  "__set__": true,
  "elements": [
   "biom-format",
   "deepforest",
   "mofchecker",
   "pymace"
  ]
 },
 "tests.test_data_arrays": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_data_generators": {
  "__set__": true,
  "elements": [
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_data_no_nulls_cpu": {
  "__set__": true,
  "elements": [
   "pymapd"
  ]
 },
 "tests.test_data_no_nulls_gpu": {
  "__set__": true,
  "elements": [
   "pymapd"
  ]
 },
 "tests.test_data_paths": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_data_transfer": {
  "__set__": true,
  "elements": [
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_data_types": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_database": {
  "__set__": true,
  "elements": [
   "ezyrb",
   "mofchecker",
   "rse"
  ]
 },
 "tests.test_dataclasses": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_dataframes": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_dataloaders": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_datamodule": {
  "__set__": true,
  "elements": [
   "kit4dl"
  ]
 },
 "tests.test_dataseries": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset": {
  "__set__": true,
  "elements": [
   "afwizard",
   "deepforest",
   "mikeio",
   "pandora-geno",
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_anomalous": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_grid": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_implementations": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_dataset_implementations.test_dataset_implementations": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_dataset_index": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_preserve_attributes": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_symops": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_dataset_versioning": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_dataset_versioning.test_dataset_version": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_datasets": {
  "__set__": true,
  "elements": [
   "causalml",
   "esmlab",
   "scikit-lego",
   "verta"
  ]
 },
 "tests.test_datasources": {
  "__set__": true,
  "elements": [
   "yodapy"
  ]
 },
 "tests.test_datasources.test_datasources": {
  "__set__": true,
  "elements": [
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi": {
  "__set__": true,
  "elements": [
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi.test_helpers": {
  "__set__": true,
  "elements": [
   "yodapy"
  ]
 },
 "tests.test_datasources.test_ooi.test_ooi": {
  "__set__": true,
  "elements": [
   "yodapy"
  ]
 },
 "tests.test_date_time": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_dates": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_datetime": {
  "__set__": true,
  "elements": [
   "edgedb-python",
   "fiona"
  ]
 },
 "tests.test_dbapi2": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_dbimporters": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_dctypes": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_deallocate": {
  "__set__": true,
  "elements": [
   "pymapd"
  ]
 },
 "tests.test_decaydata": {
  "__set__": true,
  "elements": [
   "radioactivedecay"
  ]
 },
 "tests.test_decisiontrees": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_decorator": {
  "__set__": true,
  "elements": [
   "tranquilizer"
  ]
 },
 "tests.test_decorators": {
  "__set__": true,
  "elements": [
   "pycircstat",
   "reciprocalspaceship"
  ]
 },
 "tests.test_deepforest": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_default": {
  "__set__": true,
  "elements": [
   "embetter"
  ]
 },
 "tests.test_definitions": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_definitions.test_expectations": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_deleting": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_deployment": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_deprecated": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_deprecated_field": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_deprecation": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_descriptive": {
  "__set__": true,
  "elements": [
   "pycircstat"
  ]
 },
 "tests.test_designer": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_detect": {
  "__set__": true,
  "elements": [
   "reacnetgenerator"
  ]
 },
 "tests.test_determinism": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_device": {
  "__set__": true,
  "elements": [
   "pymagewell"
  ]
 },
 "tests.test_df_cache": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_dfs0": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dfs1": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dfs2": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dfs3": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dfsu": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dfsu_plot": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_dialect": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_dict_tool": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_dictcursor": {
  "__set__": true,
  "elements": [
   "aiomysql"
  ]
 },
 "tests.test_dictionary_output": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_digit_version": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_discrete": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_display": {
  "__set__": true,
  "elements": [
   "lux-api",
   "magpylib",
   "typhos"
  ]
 },
 "tests.test_distance_metrics": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_distributions": {
  "__set__": true,
  "elements": [
   "optuna",
   "pycircstat"
  ]
 },
 "tests.test_dlm_perturbation": {
  "__set__": true,
  "elements": [
   "theseus-ai"
  ]
 },
 "tests.test_docs": {
  "__set__": true,
  "elements": [
   "embetter",
   "memo"
  ]
 },
 "tests.test_docstrings": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_doctests": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_doctor": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_document": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_document_store": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_documentation_code_blocks": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_domain": {
  "__set__": true,
  "elements": [
   "py-cordex",
   "pyremo"
  ]
 },
 "tests.test_dotnet": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_draw_utils": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_driver_options": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_drivers": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_drop_each_atom": {
  "__set__": true,
  "elements": [
   "xymol"
  ]
 },
 "tests.test_drop_each_bond": {
  "__set__": true,
  "elements": [
   "xymol"
  ]
 },
 "tests.test_drvsupport": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_dualquaternion": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_dump_n_load": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_dynamic_routes": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_ec2": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_edr": {
  "__set__": true,
  "elements": [
   "panedr"
  ]
 },
 "tests.test_em": {
  "__set__": true,
  "elements": [
   "extract_model"
  ]
 },
 "tests.test_email": {
  "__set__": true,
  "elements": [
   "felling"
  ]
 },
 "tests.test_embedding": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_embedding_comparison": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_encode": {
  "__set__": true,
  "elements": [
   "poster"
  ]
 },
 "tests.test_encoders": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_encoding": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_end2end": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_endless_cl_sim": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_endpoint": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_endpoint.test_endpoint": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_endpoint.test_resources": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_energies": {
  "__set__": true,
  "elements": [
   "open3spn2"
  ]
 },
 "tests.test_ensembles": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_entities": {
  "__set__": true,
  "elements": [
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_enum": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_env": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_environment": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_eo": {
  "__set__": true,
  "elements": [
   "pystac"
  ]
 },
 "tests.test_equality": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_err": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_error_generation": {
  "__set__": true,
  "elements": [
   "swot_simulator"
  ]
 },
 "tests.test_error_utils": {
  "__set__": true,
  "elements": [
   "swot_simulator"
  ]
 },
 "tests.test_error_warning": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_errorpages": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_errors": {
  "__set__": true,
  "elements": [
   "edgedb-python",
   "flask-restplus"
  ]
 },
 "tests.test_escape_magics": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_estimators": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_basics": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_deadzone": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_demographic_parity": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_equal_opportunity": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_gmm_naive_bayes": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_classifier": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_mixture_detector": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_probweight_regression": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_estimators.test_randomregressor": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_eum": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_evaluate": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_evaluations": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_evaluator": {
  "__set__": true,
  "elements": [
   "pyxel-sim",
   "xopt"
  ]
 },
 "tests.test_evapotranspiration": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_event": {
  "__set__": true,
  "elements": [
   "pymagewell"
  ]
 },
 "tests.test_event_series": {
  "__set__": true,
  "elements": [
   "pycircstat"
  ]
 },
 "tests.test_examples": {
  "__set__": true,
  "elements": [
   "awacs",
   "btrack",
   "klongpy",
   "larch",
   "localtileserver",
   "model-index",
   "moviepy",
   "point_cloud_utils"
  ]
 },
 "tests.test_exceptions": {
  "__set__": true,
  "elements": [
   "magpylib",
   "pymonetdb",
   "sanic",
   "webdavclient3",
   "yarg"
  ]
 },
 "tests.test_exceptions_handler": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_execute": {
  "__set__": true,
  "elements": [
   "afwizard",
   "jhub-client",
   "pymonetdb"
  ]
 },
 "tests.test_executor": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_experimental": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_experimentrun": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_experimentrun.test_attributes": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_experimentrun.test_environment": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_experimentrun.test_requirements": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_export": {
  "__set__": true,
  "elements": [
   "zarr-tools"
  ]
 },
 "tests.test_export_csv": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_export_models": {
  "__set__": true,
  "elements": [
   "n2v"
  ]
 },
 "tests.test_exporters": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_ext_integration": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_extension": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_external": {
  "__set__": true,
  "elements": [
   "ablog"
  ]
 },
 "tests.test_externalsource": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_extra": {
  "__set__": true,
  "elements": [
   "grayskull",
   "soupsieve"
  ]
 },
 "tests.test_extra.test_attribute": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_extra.test_contains": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_extra.test_custom": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_extra.test_defined": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_extra_suite": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_extract_data": {
  "__set__": true,
  "elements": [
   "metocean-api"
  ]
 },
 "tests.test_extraction": {
  "__set__": true,
  "elements": [
   "imagedataextractor"
  ]
 },
 "tests.test_ezc3d": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_factory": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_fan_module": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_fan_module_geom": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_fancy_repr": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_fastai": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_feature": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_features": {
  "__set__": true,
  "elements": [
   "causalml",
   "pyannote.core"
  ]
 },
 "tests.test_fetching": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_ffmpeg_reader": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_field_defaults": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_field_functions": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_fields": {
  "__set__": true,
  "elements": [
   "djangocms-icon",
   "flask-restplus"
  ]
 },
 "tests.test_fields_mask": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_file": {
  "__set__": true,
  "elements": [
   "pathy"
  ]
 },
 "tests.test_file_cache": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_file_handler": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_file_processing": {
  "__set__": true,
  "elements": [
   "muttlib"
  ]
 },
 "tests.test_file_system": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_fileio": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_base": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_data_source": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_model_language": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_orso": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_reduction": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio.test_schema": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_fileio_read_csv_c3d": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_fileio_read_other_formats": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_fileio_write": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_files": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_filetransfer": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_filetree": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_filetree.test_query": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_filetree.test_read": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_filetree.test_registration": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_filetree.test_template": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_filter": {
  "__set__": true,
  "elements": [
   "afwizard",
   "emperor"
  ]
 },
 "tests.test_filtering": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_finetuners": {
  "__set__": true,
  "elements": [
   "embetter"
  ]
 },
 "tests.test_fio_bounds": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_calc": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_cat": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_collect": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_distrib": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_dump": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_filter": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_info": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_load": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_ls": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_fio_rm": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_flake8": {
  "__set__": true,
  "elements": [
   "yt_astro_analysis"
  ]
 },
 "tests.test_fmnist_benckmarks": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_focal_correlations": {
  "__set__": true,
  "elements": [
   "focal-stats"
  ]
 },
 "tests.test_focal_function": {
  "__set__": true,
  "elements": [
   "focal-stats"
  ]
 },
 "tests.test_focal_statistics": {
  "__set__": true,
  "elements": [
   "focal-stats"
  ]
 },
 "tests.test_folium": {
  "__set__": true,
  "elements": [
   "localtileserver"
  ]
 },
 "tests.test_forecast": {
  "__set__": true,
  "elements": [
   "muttlib",
   "pycsep"
  ]
 },
 "tests.test_format": {
  "__set__": true,
  "elements": [
   "emperor"
  ]
 },
 "tests.test_formats": {
  "__set__": true,
  "elements": [
   "jupytext",
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_formatter": {
  "__set__": true,
  "elements": [
   "pyathena"
  ]
 },
 "tests.test_formatting": {
  "__set__": true,
  "elements": [
   "kit4dl"
  ]
 },
 "tests.test_fourier": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_frame": {
  "__set__": true,
  "elements": [
   "pymagewell"
  ]
 },
 "tests.test_frames": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "tests.test_from_clipboard": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_from_dalle": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_from_file": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_from_image_object": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_from_stable_diffusion": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_from_url": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_func": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_functional": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_functional_interface": {
  "__set__": true,
  "elements": [
   "starfile"
  ]
 },
 "tests.test_functions": {
  "__set__": true,
  "elements": [
   "arcjetcv",
   "flask-restless",
   "nptyping"
  ]
 },
 "tests.test_functions.test_get_type": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_functions.test_py_type": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_fx": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_gas_generator": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_gateway": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_gcsuri": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_gdrive": {
  "__set__": true,
  "elements": [
   "muttlib"
  ]
 },
 "tests.test_gemgis": {
  "__set__": true,
  "elements": [
   "gemgis"
  ]
 },
 "tests.test_general_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_generation": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_generator": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_generic": {
  "__set__": true,
  "elements": [
   "aiida-core",
   "mikeio",
   "mpl-interactions",
   "xclim"
  ]
 },
 "tests.test_generic_geom": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_geo": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_grid": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_coord_trafo": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_map_info": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_projection": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geo.test_vector.test_geometry": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_geoarray": {
  "__set__": true,
  "elements": [
   "geoarray"
  ]
 },
 "tests.test_geofile": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_gpd": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_ogr": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofileops_singlelayer_sql": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofileops_twolayers": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geofiletype": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geojson": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_geom3d": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_geometry": {
  "__set__": true,
  "elements": [
   "fiona",
   "mofchecker",
   "weldx"
  ]
 },
 "tests.test_geometry_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_geopackage": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_geoseries_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_getBH_interfaces": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_getBH_level2": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_getBHv": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_github_recipes": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_global_structure": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_globals": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_gpcca": {
  "__set__": true,
  "elements": [
   "pygpcca"
  ]
 },
 "tests.test_gpr": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_gpu": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_graceful_shutdown": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_gradient": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_grammar": {
  "__set__": true,
  "elements": [
   "guidance"
  ]
 },
 "tests.test_graph": {
  "__set__": true,
  "elements": [
   "pgraph-python"
  ]
 },
 "tests.test_grid": {
  "__set__": true,
  "elements": [
   "memo"
  ]
 },
 "tests.test_grid_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_gridded_output": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_grids": {
  "__set__": true,
  "elements": [
   "gridtest"
  ]
 },
 "tests.test_gridtest": {
  "__set__": true,
  "elements": [
   "gridtest"
  ]
 },
 "tests.test_group": {
  "__set__": true,
  "elements": [
   "andes",
   "ltbams"
  ]
 },
 "tests.test_groupby": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_gs_specific": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_handler": {
  "__set__": true,
  "elements": [
   "tranquilizer"
  ]
 },
 "tests.test_handler_annotations": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_harness": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_has_field": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_has_field_many": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_hash": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_hashes": {
  "__set__": true,
  "elements": [
   "sketchnu"
  ]
 },
 "tests.test_header": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_headers": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_heavyhitters": {
  "__set__": true,
  "elements": [
   "sketchnu"
  ]
 },
 "tests.test_helper": {
  "__set__": true,
  "elements": [
   "geofileops",
   "moviepy"
  ]
 },
 "tests.test_helper_method": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_helpers": {
  "__set__": true,
  "elements": [
   "awacs",
   "dlint",
   "mikeio",
   "mpl-interactions",
   "notion-client",
   "pytermgui",
   "sanic",
   "sketchnu"
  ]
 },
 "tests.test_helpers.test_bad_builtin_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_kwarg_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_module_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_helpers.test_bad_name_attribute_use": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_high_level_generators": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_highlight_markup_literal": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_histograms": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_hocon_string": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_homegenous_transform": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_hook": {
  "__set__": true,
  "elements": [
   "edgetest-pip-tools"
  ]
 },
 "tests.test_http": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_http_alt_svc": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_http_session": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_httpurl": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_huge_message": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_huggingface": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_huggingface_model": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_hybrid36": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_hydrogen_orientation": {
  "__set__": true,
  "elements": [
   "conservedwatersearch"
  ]
 },
 "tests.test_hyperloglog": {
  "__set__": true,
  "elements": [
   "sketchnu"
  ]
 },
 "tests.test_iam": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_idce": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_ideal_gas": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_identify_alphabet": {
  "__set__": true,
  "elements": [
   "seqlike"
  ]
 },
 "tests.test_ifelse": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_images": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_import": {
  "__set__": true,
  "elements": [
   "model-index",
   "panda3d_viewer",
   "rse"
  ]
 },
 "tests.test_imported_enums": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_imports": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_imputation": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_indices": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_ingv_readers": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_init": {
  "__set__": true,
  "elements": [
   "sphinx-js"
  ]
 },
 "tests.test_inlet_module": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_input": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_input_checks": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_input_output": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_input_parameters": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_inputs": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_insights": {
  "__set__": true,
  "elements": [
   "mpire"
  ]
 },
 "tests.test_int_mats": {
  "__set__": true,
  "elements": [
   "pfapack"
  ]
 },
 "tests.test_integration": {
  "__set__": true,
  "elements": [
   "cmyt",
   "edgetest",
   "fiona",
   "pymapd",
   "pyomniscidb",
   "spectrumdevice"
  ]
 },
 "tests.test_integrations": {
  "__set__": true,
  "elements": [
   "cloudpathlib",
   "pytmc",
   "verta"
  ]
 },
 "tests.test_interestingness": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_interface": {
  "__set__": true,
  "elements": [
   "edgetest",
   "mols2grid"
  ]
 },
 "tests.test_interop": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_interp": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_interpolation": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_inventory": {
  "__set__": true,
  "elements": [
   "radioactivedecay"
  ]
 },
 "tests.test_io": {
  "__set__": true,
  "elements": [
   "amset",
   "btrack",
   "kit4dl",
   "py-tools-ds",
   "xopt"
  ]
 },
 "tests.test_io.test_raster": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_io.test_raster.test_gdal": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_io_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_ipynb_to_R": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_py": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_ipynb_to_rmd": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_ir": {
  "__set__": true,
  "elements": [
   "sphinx-js"
  ]
 },
 "tests.test_is_initialized": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_issue_11": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_issue_69": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_issues": {
  "__set__": true,
  "elements": [
   "aiomysql",
   "moviepy"
  ]
 },
 "tests.test_item": {
  "__set__": true,
  "elements": [
   "pystac"
  ]
 },
 "tests.test_item_collection": {
  "__set__": true,
  "elements": [
   "pystac"
  ]
 },
 "tests.test_item_search": {
  "__set__": true,
  "elements": [
   "pystac-client"
  ]
 },
 "tests.test_items": {
  "__set__": true,
  "elements": [
   "pyrobuf",
   "tomlkit"
  ]
 },
 "tests.test_ivlearner": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_jp2box": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_jp2box_jpx": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_jp2box_uuid": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_jp2box_xml": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_jp2k": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_json_decoding": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_json_encoding": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_jsonapi": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_creating_resources": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_deleting_resources": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_document_structure": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_fetching_data": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_server_responsibilities": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_relationships": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonapi.test_updating_resources": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jsonpatch": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_jupytext_errors": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_k_neighbors_regressor": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_ke3_service": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_ke4_model_source": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_ke4_service": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_keep_alive_timeout": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_keras": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_keras_retinanet": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_keys": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_kgtests": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_kim_property": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_create": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_definition": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_destroy": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_instance": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_kim_property": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_modify": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_numeric": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_kim_property.test_pickle": {
  "__set__": true,
  "elements": [
   "kim-property"
  ]
 },
 "tests.test_knitr_spin": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_known_bugs": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_known_good": {
  "__set__": true,
  "elements": [
   "andes",
   "ltbams"
  ]
 },
 "tests.test_kylin_service": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_kylin_types": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_kylinpy": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_label": {
  "__set__": true,
  "elements": [
   "pystac"
  ]
 },
 "tests.test_lastools": {
  "__set__": true,
  "elements": [
   "afwizard"
  ]
 },
 "tests.test_latent_class": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_lattice": {
  "__set__": true,
  "elements": [
   "crystals"
  ]
 },
 "tests.test_launcher": {
  "__set__": true,
  "elements": [
   "swot_simulator"
  ]
 },
 "tests.test_layer": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_layouts": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_leaflet": {
  "__set__": true,
  "elements": [
   "localtileserver"
  ]
 },
 "tests.test_level1": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_active": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_at_rule": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_class": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_comments": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_descendant": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_escapes": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_id": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_link": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_list": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_class": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_pseudo_element": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level1.test_visited": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_attribute": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_first_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_focus": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_hover": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_lang": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_next_sibling": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level2.test_universal_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_attribute": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_checked": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_disabled": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_empty": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_enabled": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_first_of_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_last_of_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_namespace": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_not": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_last_of_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_nth_of_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_only_of_type": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_root": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_subsequent_sibling": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level3.test_target": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_any_link": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_attribute": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_current": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_default": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_dir": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_visible": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_focus_within": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_future": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_has": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_host_context": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_in_range": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_indeterminate": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_is": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_lang": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_local_link": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_matches": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_not": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_nth_child": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_optional": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_out_of_range": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_past": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_paused": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_placeholder_shown": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_playing": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_only": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_read_write": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_required": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_scope": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_target_within": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_user_invalid": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_level4.test_where": {
  "__set__": true,
  "elements": [
   "soupsieve"
  ]
 },
 "tests.test_lgbm": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_lib": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_library": {
  "__set__": true,
  "elements": [
   "afwizard",
   "model-index"
  ]
 },
 "tests.test_libtiff": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_lightning": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_linear": {
  "__set__": true,
  "elements": [
   "ezyrb",
   "larch"
  ]
 },
 "tests.test_linear4bit": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_linear8bitlt": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_linear_diffusion": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_linear_model": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_linop": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_lint": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_linters": {
  "__set__": true,
  "elements": [
   "pylama"
  ]
 },
 "tests.test_listing": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_lists": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_load_local": {
  "__set__": true,
  "elements": [
   "aiomysql"
  ]
 },
 "tests.test_load_multiple": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_loaders": {
  "__set__": true,
  "elements": [
   "pymapd"
  ]
 },
 "tests.test_local": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_local_structure": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_log": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_log_code": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_logger": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_loggers": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_logging": {
  "__set__": true,
  "elements": [
   "optuna",
   "sanic"
  ]
 },
 "tests.test_logo": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_logutils": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_main": {
  "__set__": true,
  "elements": [
   "deepforest",
   "dvclive",
   "enstat",
   "mikeio",
   "tranquilizer"
  ]
 },
 "tests.test_maintainence": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_makegif": {
  "__set__": true,
  "elements": [
   "stemflow"
  ]
 },
 "tests.test_manager": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_mapi": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_mapi_uri": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_markdown": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_marker": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_marker_casadi": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_marshalling": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_match": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_math": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_maths": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_measurement": {
  "__set__": true,
  "elements": [
   "weldx"
  ]
 },
 "tests.test_memfile": {
  "__set__": true,
  "elements": [
   "memo"
  ]
 },
 "tests.test_memlist": {
  "__set__": true,
  "elements": [
   "memo"
  ]
 },
 "tests.test_memory": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_memoryfile": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_merge_from": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_mesh": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_message": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_message_field_types": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_message_init_kwargs": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_message_with_colon_at_end": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_message_with_no_fields": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_meta": {
  "__set__": true,
  "elements": [
   "fiona",
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_confusion_balancer": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_decay_estimator": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_estimatortransformer": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_grouped_model": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_outlier_remover": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_subjective_classifier": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta.test_thresholder": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_meta_learners": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_metadata": {
  "__set__": true,
  "elements": [
   "autouri",
   "flask-restless",
   "geoarray",
   "openfisca-france",
   "verta"
  ]
 },
 "tests.test_metadata_filter": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_meteo": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_meteo_input": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_metrics": {
  "__set__": true,
  "elements": [
   "avalanche-lib",
   "kit4dl",
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_correlation_score": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_equal_opportunity": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_p_percent": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_metrics.test_subset_metric": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_middleware": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_middlewares": {
  "__set__": true,
  "elements": [
   "tinydb"
  ]
 },
 "tests.test_migrations": {
  "__set__": true,
  "elements": [
   "djangocms-icon"
  ]
 },
 "tests.test_mirror": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_misc": {
  "__set__": true,
  "elements": [
   "gemgis",
   "jesth",
   "moviepy",
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_mixer_fluid": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_mixer_shaft": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_mixins": {
  "__set__": true,
  "elements": [
   "kit4dl"
  ]
 },
 "tests.test_mlconjug": {
  "__set__": true,
  "elements": [
   "mlconjug3"
  ]
 },
 "tests.test_mmcv": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_mnist_benckmarks": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_model": {
  "__set__": true,
  "elements": [
   "deepforest",
   "fiona",
   "flask-restplus",
   "ltbams",
   "openamundsen",
   "stemflow"
  ]
 },
 "tests.test_model5": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_model_basicCh": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicChRt_and_basicChRtTh": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicChSa": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicDd": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdHy": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdRt": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdSt": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicDdVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyRt": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicHySa": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicHyVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicHy_and_basicHySt": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtSa_basicSa_basicSaVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtTh": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicRtVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicSaVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicStVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicSt_basicStTh": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicTh": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicThVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_basicVs": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_model_creation": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_model_group": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_model_registry": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_model_registry.test_model": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_model_registry.test_model_version": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_model_selection": {
  "__set__": true,
  "elements": [
   "scikit-lego",
   "stemflow"
  ]
 },
 "tests.test_model_selection.test_klusterfold": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_model_selection.test_timegapsplit": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_modelhandler": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_models": {
  "__set__": true,
  "elements": [
   "avalanche-lib",
   "btrack",
   "django-tinymce",
   "djangocms-icon",
   "mmsegmentation",
   "pymace"
  ]
 },
 "tests.test_models.test_backbones": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_beit": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_bisenetv1": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_bisenetv2": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_blocks": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_cgnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_erfnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_fast_scnn": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_hrnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_icnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mae": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mit": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mobilenet_v3": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_mscan": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_pidnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnest": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_resnext": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_stdc": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_swin": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_timm_backbone": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_twins": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_unet": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_vit": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.test_vpd": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_backbones.utils": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_data_preprocessor": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_forward": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ann_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_apc_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_aspp_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_cc_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_decode_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dm_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dnl_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_dpt_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ema_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_fcn_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_gc_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ham_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_isa_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_lraspp_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_mask2former_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_maskformer_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_nl_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_ocr_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_pidnet_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_psa_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_psp_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_segformer_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_segmenter_mask_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_setr_mla_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_setr_up_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_uper_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.test_vpd_depth_head": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_heads.utils": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_feature2pyramid": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_fpn": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_ic_neck": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_jpu": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_mla_neck": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_necks.test_multilevel_neck": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_cascade_encoder_decoder": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_depth_estimator": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_encoder_decoder": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.test_seg_tta_model": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_segmentors.utils": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_utils": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_utils.test_embed": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_models.test_utils.test_shape_convert": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_modules": {
  "__set__": true,
  "elements": [
   "bitsandbytes",
   "pymace",
   "xclim"
  ]
 },
 "tests.test_mofchecker": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_molecular_container": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_molgrid": {
  "__set__": true,
  "elements": [
   "mols2grid"
  ]
 },
 "tests.test_monetize": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_motd": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_motion": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_mpi": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_mrs": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_base": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_basis": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_core": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_fitting": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_ima": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_image": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_io": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_mrsdata": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_processing": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_rda": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_mrs.test_twix": {
  "__set__": true,
  "elements": [
   "suspect"
  ]
 },
 "tests.test_multi_client_it": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_multi_serve": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_multiclass": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_multiconxn": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_multiline": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_multiple": {
  "__set__": true,
  "elements": [
   "baycomp"
  ]
 },
 "tests.test_multiprocessing": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_multiprocessing_logging": {
  "__set__": true,
  "elements": [
   "multiprocessing-logging"
  ]
 },
 "tests.test_multitasking": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_n2v_utils": {
  "__set__": true,
  "elements": [
   "n2v"
  ]
 },
 "tests.test_named_routes": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_namedparams": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_namedtuple": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_namespace": {
  "__set__": true,
  "elements": [
   "dlint",
   "flask-restplus"
  ]
 },
 "tests.test_nan": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_natural_coordinates": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_natural_coordinates_casadi": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_natural_segment": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_natural_segment_casadi": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_natural_velocities": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_natural_velocities_casadi": {
  "__set__": true,
  "elements": [
   "bionc"
  ]
 },
 "tests.test_nb_enfants": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_nb_subproc_thread": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_nc_mt_scenario": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_nc_sit_scenario": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_nested_issue55": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_nextset": {
  "__set__": true,
  "elements": [
   "aiomysql"
  ]
 },
 "tests.test_ni_sit_scenario": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_njobs": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_nl_1": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_nnnl": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_nodes": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_non_counting_layer": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_normalisation": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_not_vanilla_options": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_notebook": {
  "__set__": true,
  "elements": [
   "nb_cron"
  ]
 },
 "tests.test_notebooks": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_nozzle": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_nuclide": {
  "__set__": true,
  "elements": [
   "radioactivedecay"
  ]
 },
 "tests.test_numba": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_numeric": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_array": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_numeric.test_vector": {
  "__set__": true,
  "elements": [
   "py-tools-ds"
  ]
 },
 "tests.test_numerical": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_numerical_optimizer": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_numpy": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_obj_BaseGeo": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Box": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Circular": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Collection": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Cylinder": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Dipole": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Line": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Sensor": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_Sphere": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_obj_models": {
  "__set__": true,
  "elements": [
   "arcjetcv"
  ]
 },
 "tests.test_object_creation": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_ogr_sql_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_ogr_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_oid": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_oms": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_oneof": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_opals": {
  "__set__": true,
  "elements": [
   "afwizard"
  ]
 },
 "tests.test_open": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_openjp2": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_operations": {
  "__set__": true,
  "elements": [
   "tinydb"
  ]
 },
 "tests.test_optim": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_optimizer": {
  "__set__": true,
  "elements": [
   "torch-optimizer"
  ]
 },
 "tests.test_optimizer_with_nn": {
  "__set__": true,
  "elements": [
   "torch-optimizer"
  ]
 },
 "tests.test_optimizers": {
  "__set__": true,
  "elements": [
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_options": {
  "__set__": true,
  "elements": [
   "pyxel-sim",
   "saws"
  ]
 },
 "tests.test_ordinal": {
  "__set__": true,
  "elements": [
   "openskill"
  ]
 },
 "tests.test_organization": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_package": {
  "__set__": true,
  "elements": [
   "yarg"
  ]
 },
 "tests.test_package_functions": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_pandas": {
  "__set__": true,
  "elements": [
   "emperor",
   "lux-api"
  ]
 },
 "tests.test_pandas_coverage": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_pandas_cursor": {
  "__set__": true,
  "elements": [
   "pyathena"
  ]
 },
 "tests.test_pandas_histogrammar": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_pandora": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_panel": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_param_validation": {
  "__set__": true,
  "elements": [
   "torch-optimizer"
  ]
 },
 "tests.test_parameters": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_parametric": {
  "__set__": true,
  "elements": [
   "plum-dispatch"
  ]
 },
 "tests.test_params": {
  "__set__": true,
  "elements": [
   "mpire"
  ]
 },
 "tests.test_parse": {
  "__set__": true,
  "elements": [
   "biom-format",
   "emperor",
   "yarg"
  ]
 },
 "tests.test_parser": {
  "__set__": true,
  "elements": [
   "guidance",
   "jesth",
   "lux-api",
   "pydifact",
   "pyrobuf",
   "pytermgui",
   "tomlkit"
  ]
 },
 "tests.test_parser.test_field_validity": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_map_field": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_missing_lbraces": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_oneof": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_parser.test_syntax": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_parser_custom": {
  "__set__": true,
  "elements": [
   "rse"
  ]
 },
 "tests.test_parser_github": {
  "__set__": true,
  "elements": [
   "rse"
  ]
 },
 "tests.test_parser_gitlab": {
  "__set__": true,
  "elements": [
   "rse"
  ]
 },
 "tests.test_parser_zenodo": {
  "__set__": true,
  "elements": [
   "rse"
  ]
 },
 "tests.test_parsers": {
  "__set__": true,
  "elements": [
   "crystals",
   "sphinx-js"
  ]
 },
 "tests.test_parsing": {
  "__set__": true,
  "elements": [
   "pytmc",
   "starfile"
  ]
 },
 "tests.test_path": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_paths": {
  "__set__": true,
  "elements": [
   "afwizard",
   "andes",
   "jupyter_server",
   "ltbams"
  ]
 },
 "tests.test_payload": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_payload_too_large": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_pdal": {
  "__set__": true,
  "elements": [
   "afwizard"
  ]
 },
 "tests.test_performance": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_permissions": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.conftest": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.test_lazy_lists": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.test_sharing_old": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_api": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.test_visibility_e2e": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_permissions.test_workspace": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_pfaffian": {
  "__set__": true,
  "elements": [
   "pfapack"
  ]
 },
 "tests.test_pflow_matpower": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_pfs": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_physics": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_physics_consistency": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_pickle": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_pickle_unpickle_theano_fn": {
  "__set__": true,
  "elements": [
   "theano-pymc"
  ]
 },
 "tests.test_pipelines": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_pipelining": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_platform": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_plbvfu1": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_plot": {
  "__set__": true,
  "elements": [
   "typhos",
   "xymol"
  ]
 },
 "tests.test_plots": {
  "__set__": true,
  "elements": [
   "pycsep",
   "radioactivedecay"
  ]
 },
 "tests.test_plotting": {
  "__set__": true,
  "elements": [
   "muttlib",
   "pandora-geno"
  ]
 },
 "tests.test_plugin": {
  "__set__": true,
  "elements": [
   "pyls-memestra"
  ]
 },
 "tests.test_plugins": {
  "__set__": true,
  "elements": [
   "djangocms-icon",
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_actions": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_plugins.fake_configs": {
  "__set__": true,
  "elements": [
   "great-expectations"
  ]
 },
 "tests.test_plume": {
  "__set__": true,
  "elements": [
   "sed-plume"
  ]
 },
 "tests.test_pod": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_podae": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_poi_data": {
  "__set__": true,
  "elements": [
   "tesspy"
  ]
 },
 "tests.test_point_output": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_policy": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_pool": {
  "__set__": true,
  "elements": [
   "aiomysql",
   "mpire"
  ]
 },
 "tests.test_porosity_error": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_pose2d": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_pose3d": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_positioner": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_post": {
  "__set__": true,
  "elements": [
   "jupyter_to_medium"
  ]
 },
 "tests.test_postlist": {
  "__set__": true,
  "elements": [
   "ablog"
  ]
 },
 "tests.test_postman": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_precip": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_precip_changer": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_prepare": {
  "__set__": true,
  "elements": [
   "pymonetdb",
   "sanic"
  ]
 },
 "tests.test_preproc": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_preprocess": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_preprocessing": {
  "__set__": true,
  "elements": [
   "openfisca-france",
   "py-cordex",
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columncapper": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columndropper": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_columnselector": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_informationfilter": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_orthogonal_transformer": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_pandastypeselector": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_patsy_transformer": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_randomadder": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preprocessing.test_repeatingbasisfunction": {
  "__set__": true,
  "elements": [
   "scikit-lego"
  ]
 },
 "tests.test_preserve_empty_cells": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_printing": {
  "__set__": true,
  "elements": [
   "aesara",
   "glymur",
   "theano-pymc"
  ]
 },
 "tests.test_privateMath": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_problem": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_processing_algebra": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_processing_filter": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_processing_interp": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_processing_marker": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_processing_misc": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_processing_rt": {
  "__set__": true,
  "elements": [
   "pyomeca"
  ]
 },
 "tests.test_profile": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_profiler": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_prog": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_project": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_promotion": {
  "__set__": true,
  "elements": [
   "plum-dispatch"
  ]
 },
 "tests.test_propensity": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_props": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_proto": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_protonate": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_protos": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_prox": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_prsint": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_publicMath": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_py_base": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_pydantic": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_pypi": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_pyplot": {
  "__set__": true,
  "elements": [
   "mpl-interactions"
  ]
 },
 "tests.test_pyremo": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_pystac_api": {
  "__set__": true,
  "elements": [
   "pystac-client"
  ]
 },
 "tests.test_pysyncrosim": {
  "__set__": true,
  "elements": [
   "pysyncrosim"
  ]
 },
 "tests.test_python_api": {
  "__set__": true,
  "elements": [
   "remove_dagmc_tags"
  ]
 },
 "tests.test_pythonize": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_pytorch": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_qmnl": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_quaternion": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_queries": {
  "__set__": true,
  "elements": [
   "tinydb"
  ]
 },
 "tests.test_query": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_quick_test": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_race_cond": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_radiation": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_radio_browser": {
  "__set__": true,
  "elements": [
   "pyradios"
  ]
 },
 "tests.test_radio_facets": {
  "__set__": true,
  "elements": [
   "pyradios"
  ]
 },
 "tests.test_radius_neighbors_regressor": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_random_signal": {
  "__set__": true,
  "elements": [
   "swot_simulator"
  ]
 },
 "tests.test_randomforest_explainer": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_raster": {
  "__set__": true,
  "elements": [
   "gemgis"
  ]
 },
 "tests.test_rate": {
  "__set__": true,
  "elements": [
   "openskill"
  ]
 },
 "tests.test_rating": {
  "__set__": true,
  "elements": [
   "openskill"
  ]
 },
 "tests.test_reacnetgen": {
  "__set__": true,
  "elements": [
   "reacnetgenerator"
  ]
 },
 "tests.test_read_all_py": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_drivers": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_read_incomplete_rmd": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_lzw_tiff": {
  "__set__": true,
  "elements": [
   "n2v"
  ]
 },
 "tests.test_read_simple_R": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_julia": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_markdown": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_percent": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_python": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_rmd": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_scheme": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_simple_sphinx": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_read_write_round_trip": {
  "__set__": true,
  "elements": [
   "starfile"
  ]
 },
 "tests.test_recipe_item": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_record": {
  "__set__": true,
  "elements": [
   "aesara",
   "pytmc",
   "theano-pymc"
  ]
 },
 "tests.test_redirect": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_reducedordermodel": {
  "__set__": true,
  "elements": [
   "ezyrb"
  ]
 },
 "tests.test_reflectbitorder": {
  "__set__": true,
  "elements": [
   "crccheck"
  ]
 },
 "tests.test_regex": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_regions": {
  "__set__": true,
  "elements": [
   "py-cordex",
   "pycsep"
  ]
 },
 "tests.test_regression": {
  "__set__": true,
  "elements": [
   "pycircstat"
  ]
 },
 "tests.test_regression_base": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_regression_explainer": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_regressions": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_regrid": {
  "__set__": true,
  "elements": [
   "esmlab"
  ]
 },
 "tests.test_release": {
  "__set__": true,
  "elements": [
   "yarg"
  ]
 },
 "tests.test_reloader": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_remo_ds": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_remove": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_renderer": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_repeated_enum": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_reply_handling": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_report": {
  "__set__": true,
  "elements": [
   "dvclive",
   "ltbams"
  ]
 },
 "tests.test_reporting": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_repr": {
  "__set__": true,
  "elements": [
   "andes",
   "ltbams"
  ]
 },
 "tests.test_reqparse": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_request": {
  "__set__": true,
  "elements": [
   "ooipy",
   "sanic"
  ]
 },
 "tests.test_request_cancel": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_request_construction": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_request_data": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_request_stream": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_requests": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_res1d": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_resolvable": {
  "__set__": true,
  "elements": [
   "plum-dispatch"
  ]
 },
 "tests.test_resource": {
  "__set__": true,
  "elements": [
   "tranquilizer"
  ]
 },
 "tests.test_resource_analysis": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_resourcerelease": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_resourcereleasedemo": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_resources": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_response": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_response_timeout": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_restapi": {
  "__set__": true,
  "elements": [
   "aiida-core"
  ]
 },
 "tests.test_result_set": {
  "__set__": true,
  "elements": [
   "pyathena"
  ]
 },
 "tests.test_results_set": {
  "__set__": true,
  "elements": [
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_resultset": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_retinanet": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_revolvingdoor": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_rfc3339": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_rfc64_tin": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_rmd_to_ipynb": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_robustness": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_rolling": {
  "__set__": true,
  "elements": [
   "focal-stats"
  ]
 },
 "tests.test_root_imports": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_rootcling": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_rop": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_routes": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_routine": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_run": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_run_length": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_run_train": {
  "__set__": true,
  "elements": [
   "pymace"
  ]
 },
 "tests.test_runner": {
  "__set__": true,
  "elements": [
   "memo",
   "yggdrasil"
  ]
 },
 "tests.test_runtime_udf": {
  "__set__": true,
  "elements": [
   "pymapd",
   "pyomniscidb"
  ]
 },
 "tests.test_s3": {
  "__set__": true,
  "elements": [
   "awacs"
  ]
 },
 "tests.test_s3_specific": {
  "__set__": true,
  "elements": [
   "cloudpathlib"
  ]
 },
 "tests.test_s3uri": {
  "__set__": true,
  "elements": [
   "autouri"
  ]
 },
 "tests.test_sample": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_sampler": {
  "__set__": true,
  "elements": [
   "mmsegmentation"
  ]
 },
 "tests.test_save_multiple": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_saws": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_scalebar_detection": {
  "__set__": true,
  "elements": [
   "imagedataextractor"
  ]
 },
 "tests.test_scanf": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_scenarios": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_schema": {
  "__set__": true,
  "elements": [
   "edgetest",
   "fiona",
   "yggdrasil"
  ]
 },
 "tests.test_schema_geom": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_scram": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_scripts": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_list_summary": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_ohi": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_atlasq_query": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_apply_x5": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_convert_x5": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_fsl_ents": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_imglob": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_immv_imcp": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_scripts.test_resample_image": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_search": {
  "__set__": true,
  "elements": [
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_section": {
  "__set__": true,
  "elements": [
   "jesth"
  ]
 },
 "tests.test_sections": {
  "__set__": true,
  "elements": [
   "grayskull"
  ]
 },
 "tests.test_segment": {
  "__set__": true,
  "elements": [
   "pyannote.core",
   "pydifact"
  ]
 },
 "tests.test_segmentation": {
  "__set__": true,
  "elements": [
   "afwizard",
   "arcjetcv"
  ]
 },
 "tests.test_segmentcollection": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_sel2d": {
  "__set__": true,
  "elements": [
   "extract_model"
  ]
 },
 "tests.test_select": {
  "__set__": true,
  "elements": [
   "mols2grid"
  ]
 },
 "tests.test_sensitivity": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_serialization": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_serialize": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_serializer": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_series": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_server": {
  "__set__": true,
  "elements": [
   "poster"
  ]
 },
 "tests.test_server_events": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_server_heartbeat": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_server_loop": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_serverapp": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_service": {
  "__set__": true,
  "elements": [
   "ltbams"
  ]
 },
 "tests.test_servicedesk": {
  "__set__": true,
  "elements": [
   "atlassian-python-api"
  ]
 },
 "tests.test_services": {
  "__set__": true,
  "elements": [
   "andes",
   "yggdrasil"
  ]
 },
 "tests.test_session": {
  "__set__": true,
  "elements": [
   "fiona",
   "quilt",
   "quilt3"
  ]
 },
 "tests.test_set_decoded_components": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_settings": {
  "__set__": true,
  "elements": [
   "planetary-computer"
  ]
 },
 "tests.test_settings_attr": {
  "__set__": true,
  "elements": [
   "django-pwa"
  ]
 },
 "tests.test_setup": {
  "__set__": true,
  "elements": [
   "optimade"
  ]
 },
 "tests.test_setup_commands": {
  "__set__": true,
  "elements": [
   "stitchm"
  ]
 },
 "tests.test_shapely": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_sharing": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_show_versions": {
  "__set__": true,
  "elements": [
   "pyxel-sim"
  ]
 },
 "tests.test_signal": {
  "__set__": true,
  "elements": [
   "mpire"
  ]
 },
 "tests.test_signal_handlers": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_signals": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_signature": {
  "__set__": true,
  "elements": [
   "plum-dispatch"
  ]
 },
 "tests.test_signed_integer": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_signing": {
  "__set__": true,
  "elements": [
   "planetary-computer"
  ]
 },
 "tests.test_simple_detachment_limited": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_simulate": {
  "__set__": true,
  "elements": [
   "jhub-client"
  ]
 },
 "tests.test_single": {
  "__set__": true,
  "elements": [
   "baycomp"
  ]
 },
 "tests.test_single_card": {
  "__set__": true,
  "elements": [
   "spectrumdevice"
  ]
 },
 "tests.test_single_channel": {
  "__set__": true,
  "elements": [
   "spectrumdevice"
  ]
 },
 "tests.test_single_file_stac": {
  "__set__": true,
  "elements": [
   "pystac"
  ]
 },
 "tests.test_singlefile": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_singularity": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_skorch_models": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_slddb": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_converters": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_dbcreation": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_dbmaterial": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_elements": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_formula": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_material": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slddb.test_webapi": {
  "__set__": true,
  "elements": [
   "orsopy"
  ]
 },
 "tests.test_slice": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_slicing": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_sliding_window": {
  "__set__": true,
  "elements": [
   "pandora-geno"
  ]
 },
 "tests.test_snapshot": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_snow": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_solvers": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_some_not_in_set": {
  "__set__": true,
  "elements": [
   "python-constraint2"
  ]
 },
 "tests.test_sort": {
  "__set__": true,
  "elements": [
   "emperor"
  ]
 },
 "tests.test_sorting": {
  "__set__": true,
  "elements": [
   "extract_model"
  ]
 },
 "tests.test_sourcecode": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_spacy_model": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_spark_histogrammar": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_sparknlp_model": {
  "__set__": true,
  "elements": [
   "nlptest"
  ]
 },
 "tests.test_spatial": {
  "__set__": true,
  "elements": [
   "mikeio",
   "pycsep"
  ]
 },
 "tests.test_spatialite": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_spatialvector": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_spec": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.test_sqla_types": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_sqlalchemy_athena": {
  "__set__": true,
  "elements": [
   "pyathena"
  ]
 },
 "tests.test_sqlite_util": {
  "__set__": true,
  "elements": [
   "geofileops"
  ]
 },
 "tests.test_sscursor": {
  "__set__": true,
  "elements": [
   "aiomysql"
  ]
 },
 "tests.test_stac_api_io": {
  "__set__": true,
  "elements": [
   "pystac-client"
  ]
 },
 "tests.test_star_hub": {
  "__set__": true,
  "elements": [
   "spectrumdevice"
  ]
 },
 "tests.test_stat_dist": {
  "__set__": true,
  "elements": [
   "pygpcca"
  ]
 },
 "tests.test_state": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_static": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_statistics": {
  "__set__": true,
  "elements": [
   "esmlab"
  ]
 },
 "tests.test_stats": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_status": {
  "__set__": true,
  "elements": [
   "typhos"
  ]
 },
 "tests.test_storages": {
  "__set__": true,
  "elements": [
   "tinydb"
  ]
 },
 "tests.test_str": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_streamflow": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_streaming": {
  "__set__": true,
  "elements": [
   "poster"
  ]
 },
 "tests.test_streamio": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_stringparser": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_structs": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_structures": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_study": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_styles": {
  "__set__": true,
  "elements": [
   "pytermgui"
  ]
 },
 "tests.test_subset": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_substitute": {
  "__set__": true,
  "elements": [
   "gridtest"
  ]
 },
 "tests.test_subtypes": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_suds": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_suffix_tree": {
  "__set__": true,
  "elements": [
   "sphinx-js"
  ]
 },
 "tests.test_suite": {
  "__set__": true,
  "elements": [
   "klongpy",
   "typhos"
  ]
 },
 "tests.test_suite_file": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_summarize_mtz_dtypes": {
  "__set__": true,
  "elements": [
   "reciprocalspaceship"
  ]
 },
 "tests.test_summary_writer": {
  "__set__": true,
  "elements": [
   "adversarial-robustness-toolbox"
  ]
 },
 "tests.test_swagger": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_swagger_utils": {
  "__set__": true,
  "elements": [
   "flask-restplus"
  ]
 },
 "tests.test_symmetry": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.test_sync": {
  "__set__": true,
  "elements": [
   "trio-asyncio",
   "trio_asyncio"
  ]
 },
 "tests.test_sync_query": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_sync_retry": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_sync_tx": {
  "__set__": true,
  "elements": [
   "edgedb-python"
  ]
 },
 "tests.test_syntax_v1": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_sys_fn": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_sys_fn_db": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_sys_fn_ipc": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_sys_fn_timer": {
  "__set__": true,
  "elements": [
   "klongpy"
  ]
 },
 "tests.test_table": {
  "__set__": true,
  "elements": [
   "biom-format"
  ]
 },
 "tests.test_table_source": {
  "__set__": true,
  "elements": [
   "kylinpy"
  ]
 },
 "tests.test_tables": {
  "__set__": true,
  "elements": [
   "py-cordex",
   "tinydb"
  ]
 },
 "tests.test_tailing_slash_client_it": {
  "__set__": true,
  "elements": [
   "webdavclient3"
  ]
 },
 "tests.test_tarcisBug": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_tasks": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_tax_rates": {
  "__set__": true,
  "elements": [
   "openfisca-france"
  ]
 },
 "tests.test_tds_resume": {
  "__set__": true,
  "elements": [
   "andes"
  ]
 },
 "tests.test_team_rating": {
  "__set__": true,
  "elements": [
   "openskill"
  ]
 },
 "tests.test_temperature": {
  "__set__": true,
  "elements": [
   "xclim"
  ]
 },
 "tests.test_template_tag_meta": {
  "__set__": true,
  "elements": [
   "django-pwa"
  ]
 },
 "tests.test_temporal": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_terminal": {
  "__set__": true,
  "elements": [
   "jupyter_server"
  ]
 },
 "tests.test_terrain": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_tessellation": {
  "__set__": true,
  "elements": [
   "tesspy"
  ]
 },
 "tests.test_tessellation_functions": {
  "__set__": true,
  "elements": [
   "tesspy"
  ]
 },
 "tests.test_test_client_port": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_testing": {
  "__set__": true,
  "elements": [
   "sphinx-js"
  ]
 },
 "tests.test_tests": {
  "__set__": true,
  "elements": [
   "pycircstat"
  ]
 },
 "tests.test_text": {
  "__set__": true,
  "elements": [
   "embetter"
  ]
 },
 "tests.test_textnets": {
  "__set__": true,
  "elements": [
   "textnets"
  ]
 },
 "tests.test_tfrecords": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_theseus_layer": {
  "__set__": true,
  "elements": [
   "theseus-ai"
  ]
 },
 "tests.test_thresh": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_tie_point_grid": {
  "__set__": true,
  "elements": [
   "arosics"
  ]
 },
 "tests.test_tiff2jp2": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_time_utilities": {
  "__set__": true,
  "elements": [
   "pycsep"
  ]
 },
 "tests.test_timeline": {
  "__set__": true,
  "elements": [
   "pyannote.core"
  ]
 },
 "tests.test_timeout_logic": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_timezone": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_timing": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_tinydb": {
  "__set__": true,
  "elements": [
   "tinydb"
  ]
 },
 "tests.test_tinyimagenet": {
  "__set__": true,
  "elements": [
   "avalanche-lib"
  ]
 },
 "tests.test_tls": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_to_file": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_to_html_file": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_to_terminal": {
  "__set__": true,
  "elements": [
   "ascii_magic"
  ]
 },
 "tests.test_token": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_tokenizer": {
  "__set__": true,
  "elements": [
   "pydifact"
  ]
 },
 "tests.test_toml_document": {
  "__set__": true,
  "elements": [
   "tomlkit"
  ]
 },
 "tests.test_toml_file": {
  "__set__": true,
  "elements": [
   "python-constraint2",
   "tomlkit"
  ]
 },
 "tests.test_toml_spec_tests": {
  "__set__": true,
  "elements": [
   "tomlkit"
  ]
 },
 "tests.test_toml_tests": {
  "__set__": true,
  "elements": [
   "tomlkit"
  ]
 },
 "tests.test_toolbar": {
  "__set__": true,
  "elements": [
   "saws"
  ]
 },
 "tests.test_tools": {
  "__set__": true,
  "elements": [
   "moviepy",
   "pymace",
   "reacnetgenerator",
   "yggdrasil"
  ]
 },
 "tests.test_topojson": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_touchup": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_tracker": {
  "__set__": true,
  "elements": [
   "btrack"
  ]
 },
 "tests.test_tracklets": {
  "__set__": true,
  "elements": [
   "btrack"
  ]
 },
 "tests.test_transactions": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_transect": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "tests.test_transform": {
  "__set__": true,
  "elements": [
   "fiona",
   "fslpy",
   "py-cordex"
  ]
 },
 "tests.test_transform.test_affine": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_transform.test_flirt": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_transform.test_fnirt": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_transform.test_nonlinear": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_transform.test_x5": {
  "__set__": true,
  "elements": [
   "fslpy"
  ]
 },
 "tests.test_transformations": {
  "__set__": true,
  "elements": [
   "weldx"
  ]
 },
 "tests.test_transport": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_transport_http": {
  "__set__": true,
  "elements": [
   "suds-jurko"
  ]
 },
 "tests.test_tree": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_trial": {
  "__set__": true,
  "elements": [
   "optuna"
  ]
 },
 "tests.test_tridiag": {
  "__set__": true,
  "elements": [
   "openamundsen"
  ]
 },
 "tests.test_triton": {
  "__set__": true,
  "elements": [
   "bitsandbytes"
  ]
 },
 "tests.test_trust_notebook": {
  "__set__": true,
  "elements": [
   "jupytext"
  ]
 },
 "tests.test_tsne": {
  "__set__": true,
  "elements": [
   "fasttsne"
  ]
 },
 "tests.test_turbine": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_turbofan": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_turbofan_geom": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_turbofan_weight": {
  "__set__": true,
  "elements": [
   "pyturbo"
  ]
 },
 "tests.test_tutorial": {
  "__set__": true,
  "elements": [
   "pyremo"
  ]
 },
 "tests.test_twist": {
  "__set__": true,
  "elements": [
   "spatialmath-python"
  ]
 },
 "tests.test_twisted": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_twisted.test_inlinecallbacks_yield_statement": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_twisted.test_returnvalue_in_inlinecallbacks": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_twisted.test_yield_return_statement": {
  "__set__": true,
  "elements": [
   "dlint"
  ]
 },
 "tests.test_type": {
  "__set__": true,
  "elements": [
   "lux-api",
   "plum-dispatch"
  ]
 },
 "tests.test_typed_lists": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_types": {
  "__set__": true,
  "elements": [
   "nptyping",
   "tranquilizer"
  ]
 },
 "tests.test_types.test_bool": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_complex": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_datetime64": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_hashed_subscriptable_type": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_ndarray": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_number": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_object": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_structured_type": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_subarray_type": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_timedelta64": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_types.test_unicode": {
  "__set__": true,
  "elements": [
   "nptyping"
  ]
 },
 "tests.test_udf": {
  "__set__": true,
  "elements": [
   "pymonetdb"
  ]
 },
 "tests.test_unicode": {
  "__set__": true,
  "elements": [
   "fiona",
   "jupytext",
   "pymonetdb"
  ]
 },
 "tests.test_unicode_strings": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_units": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_unix_socket": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_unknown_field": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_updates": {
  "__set__": true,
  "elements": [
   "aesara",
   "theano-pymc"
  ]
 },
 "tests.test_updating": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_updatingrelationship": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_uplift_trees": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_url_building": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_url_for": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_url_for_static": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_utf8": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_util": {
  "__set__": true,
  "elements": [
   "amset",
   "biom-format",
   "borb",
   "dlint",
   "emperor",
   "klongpy",
   "plum-dispatch",
   "quilt",
   "quilt3",
   "sigpy"
  ]
 },
 "tests.test_util_manipulation": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_utilities": {
  "__set__": true,
  "elements": [
   "deepforest",
   "localtileserver",
   "spindry"
  ]
 },
 "tests.test_utility": {
  "__set__": true,
  "elements": [
   "magpylib",
   "weldx"
  ]
 },
 "tests.test_utility_spec": {
  "__set__": true,
  "elements": [
   "larch"
  ]
 },
 "tests.test_utils": {
  "__set__": true,
  "elements": [
   "adversarial-robustness-toolbox",
   "artificial-adversary",
   "baycomp",
   "btrack",
   "causalml",
   "clisops",
   "cmyt",
   "conservedwatersearch",
   "edgetest",
   "embetter",
   "extract_model",
   "flask-restplus",
   "gemgis",
   "grayskull",
   "guidance",
   "jupyter_server",
   "mols2grid",
   "mpire",
   "muttlib",
   "neutronics_material_maker",
   "onnx-caffe2",
   "pycircstat",
   "pygpcca",
   "pyradios",
   "pyremo",
   "pystac",
   "radioactivedecay",
   "sanic",
   "tinydb",
   "tomlkit",
   "torch-optimizer",
   "typhos",
   "verta",
   "xclim",
   "xopt",
   "yodapy"
  ]
 },
 "tests.test_validation": {
  "__set__": true,
  "elements": [
   "flask-restless"
  ]
 },
 "tests.test_value_optimization": {
  "__set__": true,
  "elements": [
   "causalml"
  ]
 },
 "tests.test_varint_encoding": {
  "__set__": true,
  "elements": [
   "pyrobuf"
  ]
 },
 "tests.test_vector": {
  "__set__": true,
  "elements": [
   "edgedb-python",
   "gemgis"
  ]
 },
 "tests.test_vector_algebra": {
  "__set__": true,
  "elements": [
   "propka"
  ]
 },
 "tests.test_velocimetry": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "tests.test_version": {
  "__set__": true,
  "elements": [
   "afwizard",
   "fiona",
   "geofileops",
   "jupyter_server",
   "propka",
   "sigpy"
  ]
 },
 "tests.test_versioning": {
  "__set__": true,
  "elements": [
   "sanic",
   "verta"
  ]
 },
 "tests.test_versioning.test_code": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_versioning.test_configuration": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_versioning.test_dataset": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_versioning.test_environment": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_versioning.test_repository": {
  "__set__": true,
  "elements": [
   "verta"
  ]
 },
 "tests.test_vfs": {
  "__set__": true,
  "elements": [
   "fiona"
  ]
 },
 "tests.test_vhosts": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_video": {
  "__set__": true,
  "elements": [
   "pyopenrivercam"
  ]
 },
 "tests.test_videotools": {
  "__set__": true,
  "elements": [
   "moviepy"
  ]
 },
 "tests.test_view": {
  "__set__": true,
  "elements": [
   "django-pwa"
  ]
 },
 "tests.test_views": {
  "__set__": true,
  "elements": [
   "django-tinymce",
   "sanic"
  ]
 },
 "tests.test_vis": {
  "__set__": true,
  "elements": [
   "lux-api"
  ]
 },
 "tests.test_vision": {
  "__set__": true,
  "elements": [
   "embetter"
  ]
 },
 "tests.test_visualization": {
  "__set__": true,
  "elements": [
   "adversarial-robustness-toolbox",
   "gemgis",
   "weldx"
  ]
 },
 "tests.test_visualize": {
  "__set__": true,
  "elements": [
   "deepforest"
  ]
 },
 "tests.test_vocs": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_vs_mag2": {
  "__set__": true,
  "elements": [
   "magpylib"
  ]
 },
 "tests.test_vsa_aeff": {
  "__set__": true,
  "elements": [
   "terrainbento"
  ]
 },
 "tests.test_vsi": {
  "__set__": true,
  "elements": [
   "localtileserver"
  ]
 },
 "tests.test_warnings": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_water_clustering": {
  "__set__": true,
  "elements": [
   "conservedwatersearch"
  ]
 },
 "tests.test_wavelet": {
  "__set__": true,
  "elements": [
   "sigpy"
  ]
 },
 "tests.test_wdl_parser": {
  "__set__": true,
  "elements": [
   "caper"
  ]
 },
 "tests.test_web": {
  "__set__": true,
  "elements": [
   "gemgis"
  ]
 },
 "tests.test_websockets": {
  "__set__": true,
  "elements": [
   "sanic"
  ]
 },
 "tests.test_welding_util": {
  "__set__": true,
  "elements": [
   "weldx"
  ]
 },
 "tests.test_widgets": {
  "__set__": true,
  "elements": [
   "afwizard",
   "django-tinymce",
   "typhos"
  ]
 },
 "tests.test_windows": {
  "__set__": true,
  "elements": [
   "focal-stats"
  ]
 },
 "tests.test_wrapper": {
  "__set__": true,
  "elements": [
   "otwrapy"
  ]
 },
 "tests.test_write": {
  "__set__": true,
  "elements": [
   "fiona",
   "tomlkit"
  ]
 },
 "tests.test_writing": {
  "__set__": true,
  "elements": [
   "pystac",
   "starfile"
  ]
 },
 "tests.test_writing_tiles": {
  "__set__": true,
  "elements": [
   "glymur"
  ]
 },
 "tests.test_xarray": {
  "__set__": true,
  "elements": [
   "dask_groupby",
   "flox"
  ]
 },
 "tests.test_xgboost": {
  "__set__": true,
  "elements": [
   "dvclive"
  ]
 },
 "tests.test_xgboost_explainer": {
  "__set__": true,
  "elements": [
   "explainerdashboard"
  ]
 },
 "tests.test_xml_collector": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_xml_obj": {
  "__set__": true,
  "elements": [
   "pytmc"
  ]
 },
 "tests.test_xns11": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_xopt": {
  "__set__": true,
  "elements": [
   "xopt"
  ]
 },
 "tests.test_xsum": {
  "__set__": true,
  "elements": [
   "xsum"
  ]
 },
 "tests.test_xsum.test_xsum": {
  "__set__": true,
  "elements": [
   "xsum"
  ]
 },
 "tests.test_xyz": {
  "__set__": true,
  "elements": [
   "mikeio"
  ]
 },
 "tests.test_yamlfile": {
  "__set__": true,
  "elements": [
   "yggdrasil"
  ]
 },
 "tests.test_yml_head": {
  "__set__": true,
  "elements": [
   "model-index"
  ]
 },
 "tests.test_zeopp": {
  "__set__": true,
  "elements": [
   "mofchecker"
  ]
 },
 "tests.testapp": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testapp.admin": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations.0001_initial": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testapp.migrations.0002_testmodel": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testapp.models": {
  "__set__": true,
  "elements": [
   "django-tinymce"
  ]
 },
 "tests.testavro": {
  "__set__": true,
  "elements": [
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testbasic": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.testgpu": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.testing": {
  "__set__": true,
  "elements": [
   "sphinx-js"
  ]
 },
 "tests.testing_utilities": {
  "__set__": true,
  "elements": [
   "deeptime"
  ]
 },
 "tests.testitem": {
  "__set__": true,
  "elements": [
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testnumpy": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.testorc": {
  "__set__": true,
  "elements": [
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testparquet": {
  "__set__": true,
  "elements": [
   "scrapy-contrib-bigexporters"
  ]
 },
 "tests.testrootcling": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 },
 "tests.tests": {
  "__set__": true,
  "elements": [
   "ffx",
   "neurokit2",
   "openmichrom",
   "portalocker"
  ]
 },
 "tests.tests_bio": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_complexity": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_data": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_ecg": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_ecg_delineate": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_ecg_findpeaks": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_eda": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_eeg": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_emg": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_eog": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_epochs": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_events": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_hrv": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_microstates": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_ppg": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_rsp": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_signal": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_signal_fixpeaks": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.tests_stats": {
  "__set__": true,
  "elements": [
   "neurokit2"
  ]
 },
 "tests.testspec": {
  "__set__": true,
  "elements": [
   "histogrammar"
  ]
 }
}